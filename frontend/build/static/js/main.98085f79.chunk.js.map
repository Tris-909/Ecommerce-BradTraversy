{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/userActions.js","components/SearchBox.js","components/Header.js","components/SubNavbar.js","components/Footer.js","redux/actions/productActions.js","components/Rating.js","components/Product.js","components/Message.js","components/TopProduct (Home)/TopProduct.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","redux/actions/tvActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","redux/actions/cartActions.js","components/ProductDetail/ProductCard.js","components/ReviewSection/ReviewSection.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SingleLaptopScreen.js","screens/SearchScreen.js","screens/TVScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/reducers/tvReducers.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_TO_CART","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","GET_TOP_TVS_REQUEST","GET_TOP_TVS_SUCCESS","GET_TOP_TVS_FAIL","GET_ALL_TVS_REQUEST","GET_ALL_TVS_SUCCESS","GET_ALL_TVS_FAIL","createReview","rating","comment","productID","dispatch","getState","a","type","user","config","headers","token","axios","post","payload","response","data","message","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","WidthExpand","useDispatch","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","class","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubNavbar","Footer","Row","Col","getProductsList","pageNumber","get","getSingleProduct","getCarouselProducts","error","Rating","text","defaultProps","Product","product","link","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","Message","content","Alert","TopProductTitle","h1","TopProduct","loading","itemArray","itemLink","justifyContent","alignItems","Spinner","animation","size","height","length","map","tv","sm","md","lg","xl","Loading","CarouselSection","carouselProducts","Carousel","pause","marginBottom","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","topTVs","topTV","topTVLoading","dismissible","Heading","ProductImage","laptop","ProductInfo","props","description","ListGroup","addItemToCart","qty","countInStock","setItem","JSON","stringify","cart","cartItems","console","log","ProductCard","useHistory","quantity","setQuantity","Array","keys","x","disabled","ReviewSection","singleProduct","userReviewError","setRating","setComment","onSubmitReviewHandler","reviews","Group","controlId","Label","row","review","createdAt","substring","ProductScreen","match","userReview","userReviewSuccess","success","params","CartScreen","productId","search","Number","split","removeFromCartHandler","removeItemFromCart","item","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","email","setEmail","password","setPassword","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","details","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","display","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","delete","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","pages","page","Pagination","active","ProductListAdminScreen","productsList","products","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","SingleLaptopScreen","singleLaptop","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","SearchScreen","TVScreen","allTVs","tvs","ScrollToTop","prevProps","this","scrollTo","React","Component","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","initialUserState","initialDetailState","initialReviewState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","top_TV_Initial_State","all_TVs_Initial_State","reducer","combineReducers","action","existedItem","find","filter","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.98085f79.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_TO_CART = 'REMOVE_PRODUCT_TO_CART';\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';\r\n\r\n//!TVS \r\n//TODO: GET TOP 3 TVS\r\nexport const GET_TOP_TVS_REQUEST = 'GET_TOP_TVS_REQUEST';\r\nexport const GET_TOP_TVS_SUCCESS = 'GET_TOP_TVS_SUCCESS';\r\nexport const GET_TOP_TVS_FAIL = 'GET_TOP_TVS_FAIL';\r\n\r\n//TODO: GET_ALL_TVS \r\nexport const GET_ALL_TVS_REQUEST = 'GET_ALL_TVS_REQUEST';\r\nexport const GET_ALL_TVS_SUCCESS = 'GET_ALL_TVS_SUCCESS';\r\nexport const GET_ALL_TVS_FAIL = 'GET_ALL_TVS_FAIL';","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/createreview`, { rating, comment, productID }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 1000);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 1000);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '60%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '60%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {GET_ORDER_OF_USER_RESET, GET_USER_DETAILS_RESET, GET_ALL_USERS_RESET} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst WidthExpand = styled.div`\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 1000);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 1000);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { !screenWidth ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth ? (\r\n                        <NavDropdown title={`Products`} style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/accessories\">\r\n                                    <NavDropdown.Item>Accessories</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: 8, fontSize: '1.2rem' }}></i>\r\n                            <div>\r\n                                Your Cart\r\n                            </div>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user && user.isAdmin ? (\r\n                            <NavDropdown title={<i class=\"fas fa-crown\" style={{ fontSize: '1.2rem', marginRight: '0rem', color: 'black'}}></i>} id=\"adminuser\">\r\n                                <LinkContainer to=\"/admin/usersList\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productsList\">\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/ordersList\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i class=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                            <AddBlackColor>\r\n                                <i className='fas fa-user' style={{ marginRight: 8, fontSize: '1.2rem'}}></i>\r\n                                Sign In\r\n                            </AddBlackColor>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <WidthExpand style={{width: screenWidth ? '100%' : '0%'}}>\r\n                {screenWidth ? (<SearchBox />) : null}\r\n            </WidthExpand>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    border-right: 1px solid white;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 950);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 950);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <Link to=\"/laptops\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/tvs\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/phones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/headphones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/accessories\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-plus\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Accessories\r\n                </NavItem>\r\n            </Link>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#2b2e30',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport Rating from './Rating';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({ product, link = '/product' }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    $ {product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({content, variant}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React from 'react'\r\nimport { Row, Col, Spinner, Button } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport Message from '../Message';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TopProductTitle = styled.h1`\r\n    text-decoration: underline; \r\n    font-family: 'Rokkitt;'\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst TopProduct = ({ loading, itemArray, title, itemLink }) => {\r\n    return (\r\n        <Container>\r\n            <TopProductTitle>{title}</TopProductTitle>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n               { !loading ? itemArray.length > 0 ? itemArray.map((tv) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                           <Product product={tv} link={itemLink}/>\r\n                        </Col>\r\n                    );\r\n                }) : (\r\n                    <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n               }\r\n            </Row>\r\n\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                <Link to=\"/tvs\">\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n            </Row>       \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopProduct;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel pause='hover' className='bg-dark' style={{ marginBottom: '2rem' }}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h4>{product.name} ({product.price})</h4>\r\n                    </Carousel.Caption>            \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//TODO: Actions\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport {getTopTVs} from '../redux/actions/tvActions';\r\n\r\n//TODO: Components\r\nimport TopProduct from '../components/TopProduct (Home)/TopProduct';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n    const { topTV, loading: topTVLoading } = useSelector(state => state.topTVs);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get carousel products for the first time \r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top laptops for the first time \r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top tvs for the first time \r\n        if (topTV.length === 0) {\r\n            dispatch(getTopTVs());\r\n        }\r\n    }, [dispatch, topTV]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                    <Helmet title=\"Welcome to Proshop\" href=\"/\" />\r\n                \r\n                    <CarouselSection carouselProducts={carouselProducts} loading={carouselLoading} error={carouselError} />\r\n\r\n                    {\r\n                        topLaptops.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topLaptopLoading} \r\n                                itemArray={topLaptops} \r\n                                title=\"Our Top Tiers MSI Laptops :\" \r\n                                itemLink=\"/laptops\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topTV.length !== 0 ? (      \r\n                            <TopProduct \r\n                                loading={topTVLoading} \r\n                                itemArray={topTV} \r\n                                title=\"Best TVs for 2020 :\" \r\n                                itemLink=\"/tvs\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_TVS_REQUEST\r\n        });\r\n\r\n        const {data} = await axios.get('/api/products/tvs/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_TVS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/tvs');\r\n\r\n        dispatch({\r\n            type: GET_ALL_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image, laptop = false }) => {\r\n    return (\r\n        <Col md={laptop ? 8 : 5}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description, laptop = false } = props;\r\n\r\n    return (\r\n        <Col md={laptop ? 12 : 4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_TO_CART,\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const data = (await axios.get(`/api/products/${id}`)).data;\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n    } catch(error) {\r\n        console.log(error);\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_TO_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={props.laptop ? 4 : 3}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport { createReview } from '../../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET } from '../../redux/actions/actionTypes';\r\nimport Message from '../Message';\r\nimport Rating from '../../components/Rating';\r\n\r\nconst ReviewSection = ({ singleProduct, user, userReviewError }) => {\r\n    const dispatch = useDispatch();\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                { singleProduct.reviews.length === 0 ? (\r\n                    <>\r\n                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                        { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                    </>\r\n                    ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { singleProduct.reviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating rating={review.rating} />\r\n                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                <p>{ review.comment }</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Post A Review</h2>\r\n                            {userReviewError ? (\r\n                                <Message \r\n                                    variant=\"danger\" \r\n                                    content={ userReviewError === 'User has already review this product'\r\n                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                            ) : null}\r\n                            { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReviewSection\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport ReviewSection from '../components/ReviewSection/ReviewSection';\r\nimport Loading from '../components/Loading';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        {\r\n                            singleProduct && user  ? (\r\n                                <ReviewSection singleProduct={singleProduct} user={user} userReviewError={userReviewError} />\r\n                            ) : null\r\n                        }\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    const { user } = useSelector(state => state.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addItemToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <h2>Your Cart is empty <Link to=\"/\">Go Back</Link></h2> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addItemToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/laptops`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert, Col, ListGroup, Form, Button, Table  } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleLaptopBasedOnId } from '../redux/actions/laptopActions';\r\nimport { createReview } from '../redux/actions/userActions';\r\nimport { GET_A_LAPTOP_RESET } from '../redux/actions/actionTypes';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Rating from '../components/Rating';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst SingleLaptopScreen = ({ match }) => {\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const {singleLaptop, loading, error} = useSelector(state => state.singleLaptop);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getSingleLaptopBasedOnId(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess]);\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: GET_A_LAPTOP_RESET });\r\n        dispatch(createReview( rating, comment, singleLaptop._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleLaptop) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleLaptop.name} href={singleLaptop._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleLaptop.image} \r\n                                name={singleLaptop.name} \r\n                                laptop\r\n                            />\r\n                            <ProductCard \r\n                                price={singleLaptop.price}\r\n                                countInStock={singleLaptop.countInStock}\r\n                                id={match.params.id}\r\n                                laptop\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                        <ProductInfo \r\n                                name={singleLaptop.name}\r\n                                price={singleLaptop.price}\r\n                                rating={singleLaptop.rating}\r\n                                description={singleLaptop.description}\r\n                                numReviews={singleLaptop.numReviews}\r\n                                laptop\r\n                        />\r\n                        </Row>\r\n                        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n                            <Col md={8}>\r\n                                <h2> Details : </h2>\r\n                                <Table striped bordered hover>\r\n                                  <thead>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td>Display Size (inches)</td>\r\n                                      <td>{singleLaptop.details.displaySizeInches}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Resolution (Pixels)</td>\r\n                                      <td>{singleLaptop.details.resolutionPixels}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Screen Resolution</td>\r\n                                      <td>{singleLaptop.details.screenResolution}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Display type</td>\r\n                                      <td>{singleLaptop.details.displayType}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Type</td>\r\n                                      <td>{singleLaptop.details.proccessorType}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Cores</td>\r\n                                      <td>{singleLaptop.details.proccessorCores}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Memory Cache</td>\r\n                                      <td>{singleLaptop.details.processorMemoryCache}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Clock Speed (GHz)</td>\r\n                                      <td>{singleLaptop.details.processorClockSpeed}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                                      <td>{singleLaptop.details.processorMaxClockSpeed}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Graphics processor</td>\r\n                                      <td>{singleLaptop.details.graphicsProcessor}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>RAM (GB)</td>\r\n                                      <td>{singleLaptop.details.ram}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>SSD Storage</td>\r\n                                      <td>{singleLaptop.details.ssdStorage}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>USB 2.0 Ports</td>\r\n                                      <td>{singleLaptop.details.usbTwoPointOPorts}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>USB C Ports</td>\r\n                                      <td>{singleLaptop.details.usbCPorts}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Card Reader</td>\r\n                                      <td>{singleLaptop.details.cardReader}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Web Cam</td>\r\n                                      <td>{singleLaptop.details.webCam}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Wi-Fi</td>\r\n                                      <td>{singleLaptop.details.wifi}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Operating system</td>\r\n                                      <td>{singleLaptop.details.operatingSystem}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Manufacturer's warranty</td>\r\n                                      <td>{singleLaptop.details.manufacturersWarantty}</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h2>Reviews</h2>\r\n                                { singleLaptop.reviews.length === 0 ? (\r\n                                    <>\r\n                                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                                        { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                    </>\r\n                                    ) : (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        { singleLaptop.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating rating={review.rating} />\r\n                                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                                <p>{ review.comment }</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Post A Review</h2>\r\n                                            {userReviewError ? (\r\n                                                <Message \r\n                                                    variant=\"danger\" \r\n                                                    content={ userReviewError === 'User has already review this product'\r\n                                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                                            ) : null}\r\n                                            { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default SingleLaptopScreen;\r\n","import React, {useEffect} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst SearchScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading } = productsList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                { !loading ? products.length > 0 ? products.map((product) => {\r\n                     return(\r\n                         <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                            <Product product={product}/>\r\n                         </Col>\r\n                     );\r\n                 }) : (\r\n                     <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                 ) : <Loading /> \r\n                }\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTVs } from '../redux/actions/tvActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst TVScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { tvs, loading, error } = useSelector(state => state.allTVs);\r\n    \r\n    useEffect(() => {\r\n        if (tvs.length === 0) {\r\n            dispatch(getAllTVs());\r\n        }\r\n    }, [dispatch, tvs]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"TVs | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : tvs.map((tv) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                        <Product product={tv} link={`/laptops`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TVScreen;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SingleLaptopScreen from './screens/SingleLaptopScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport TVScreen from './screens/TVScreen';\n\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n      <Header/>\n      <SubNavbar />\n      <main className='py-3'>\n        <Container>\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/tvs\" component={TVScreen} exact />\n          <Route path=\"/laptops/:id\" component={SingleLaptopScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={SearchScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    REMOVE_PRODUCT_TO_CART, \r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            const item = action.payload;\r\n\r\n            const existedItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existedItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_PRODUCT_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst top_TV_Initial_State = {\r\n    topTV: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getTopTVs = (state = top_TV_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topTV: [...action.payload]\r\n            }\r\n        case GET_TOP_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst all_TVs_Initial_State = {\r\n    tvs: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getALLTVs = (state = all_TVs_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tvs: [...action.payload]\r\n            }\r\n        case GET_ALL_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\nimport {\r\n    getTopTVs,\r\n    getALLTVs\r\n} from './reducers/tvReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer,\r\n    topTVs: getTopTVs,\r\n    allTVs: getALLTVs\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}