{"version":3,"sources":["redux/actions/actionTypes.js","components/SearchBox.js","components/Header.js","redux/actions/userActions.js","components/SubNavbar.js","components/Footer.js","redux/actions/productActions.js","components/Rating.js","components/Product.js","components/Message.js","components/TopProduct (Home)/TopProduct.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","redux/actions/tvActions.js","redux/actions/phoneActions.js","redux/actions/headphoneActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","redux/actions/cartActions.js","components/ProductDetail/ProductCard.js","components/ReviewSection/ReviewSection.js","components/ProductDetail/LaptopTable/LapTopTable.js","components/ProductDetail/TvTable/TVTable.js","components/ProductDetail/PhoneTable/PhoneTable.js","components/ProductDetail/HeadphoneTable/HeadphoneTable.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SearchScreen.js","screens/TVScreen.js","screens/phonesScreen.js","screens/HeadphoneScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/reducers/tvReducers.js","redux/reducers/phoneReducers.js","redux/reducers/headphoneReducer.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_TO_CART","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","GET_TOP_TVS_REQUEST","GET_TOP_TVS_SUCCESS","GET_TOP_TVS_FAIL","GET_ALL_TVS_REQUEST","GET_ALL_TVS_SUCCESS","GET_ALL_TVS_FAIL","GET_TOP_PHONES_REQUEST","GET_TOP_PHONES_SUCCESS","GET_TOP_PHONES_FAIL","GET_ALL_PHONES_REQUEST","GET_ALL_PHONES_SUCCESS","GET_ALL_PHONES_FAIL","GET_TOP_HEADPHONE_REQUEST","GET_TOP_HEADPHONE_SUCCESS","GET_TOP_HEADPHONE_FAIL","GET_ALL_HEADPHONE_REQUEST","GET_ALL_HEADPHONE_SUCCESS","GET_ALL_HEADPHONE_FAIL","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","type","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","WidthExpand","dispatch","useDispatch","user","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubNavbar","borderRight","Footer","Row","Col","getProductsList","pageNumber","a","axios","get","data","payload","response","message","getSingleProduct","getCarouselProducts","error","Rating","rating","text","defaultProps","Product","product","link","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","Message","content","Alert","TopProductTitle","p","TopProduct","loading","itemArray","itemLink","listItemLink","justifyContent","alignItems","Spinner","animation","size","height","length","map","tv","sm","md","lg","xl","Loading","CarouselSection","carouselProducts","Carousel","pause","marginBottom","nextIcon","prevIcon","interval","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","topTVs","topTV","topTVLoading","topPhones","topPhonesLoading","topHeadphone","topHeadphoneLoading","dismissible","Heading","ProductImage","ProductInfo","props","description","ListGroup","addItemToCart","qty","getState","countInStock","setItem","JSON","stringify","cart","cartItems","console","log","ProductCard","useHistory","quantity","setQuantity","Array","keys","x","disabled","ReviewSection","singleProduct","userReviewError","setRating","comment","setComment","onSubmitReviewHandler","productID","config","headers","token","post","createReview","reviews","Group","controlId","Label","row","review","createdAt","substring","LapTopTable","laptopInfo","singleLaptop","details","Table","striped","bordered","hover","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","TVTable","TVDetail","tvsDetail","screenSizes","screenType","resolutionInPixel","refreshRate","usbPorts","sizeHeightWidthDepth","warranty","PhoneTable","phoneInfo","singlePhone","phoneDetail","phoneOperatingSystem","networkCompability","DualSim","Colour","DeviceScreen","Resolution","InternalMemory","FrontCamera","RearCamera","Processor","Wifi","Warranty","HeadphoneTable","headphoneInfo","singleHeadphonePhone","headphoneDetail","HeadphoneType","VoiceControl","NoiseReductionType","BuiltInMicrophone","ProductScreen","match","userReview","userReviewSuccess","success","params","CartScreen","productId","search","Number","split","removeFromCartHandler","removeItemFromCart","item","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","email","setEmail","password","setPassword","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","responsive","totalPrice","isPaid","paidAt","display","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","delete","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","pages","page","Pagination","active","ProductListAdminScreen","productsList","products","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","laptop","SearchScreen","TVScreen","allTVs","tvs","PhonesScreen","allPhones","phone","HeadphonesScreen","allHeadphone","headPhones","headphone","ScrollToTop","prevProps","this","scrollTo","React","Component","MarginContainer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","initialUserState","initialDetailState","initialReviewState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","top_TV_Initial_State","all_TVs_Initial_State","topPhonesInitialState","allPhonesInitialState","topHeadPhoneInitialState","allHeadphonesInitialState","reducer","combineReducers","action","existedItem","find","filter","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1674f59a.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_TO_CART = 'REMOVE_PRODUCT_TO_CART';\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';\r\n\r\n//!TVS \r\n//TODO: GET TOP 3 TVS\r\nexport const GET_TOP_TVS_REQUEST = 'GET_TOP_TVS_REQUEST';\r\nexport const GET_TOP_TVS_SUCCESS = 'GET_TOP_TVS_SUCCESS';\r\nexport const GET_TOP_TVS_FAIL = 'GET_TOP_TVS_FAIL';\r\n\r\n//TODO: GET_ALL_TVS \r\nexport const GET_ALL_TVS_REQUEST = 'GET_ALL_TVS_REQUEST';\r\nexport const GET_ALL_TVS_SUCCESS = 'GET_ALL_TVS_SUCCESS';\r\nexport const GET_ALL_TVS_FAIL = 'GET_ALL_TVS_FAIL';\r\n\r\n//! PHONES\r\n//TODO: GET TOP 3 PHONES\r\nexport const GET_TOP_PHONES_REQUEST = 'GET_TOP_PHONES_REQUEST';\r\nexport const GET_TOP_PHONES_SUCCESS = 'GET_TOP_PHONES_SUCCESS';\r\nexport const GET_TOP_PHONES_FAIL = 'GET_TOP_PHONES_FAIL';\r\n\r\n//TODO: GET ALL PHONES\r\nexport const GET_ALL_PHONES_REQUEST = 'GET_ALL_PHONES_REQUEST';\r\nexport const GET_ALL_PHONES_SUCCESS = 'GET_ALL_PHONES_SUCCESS';\r\nexport const GET_ALL_PHONES_FAIL = 'GET_ALL_PHONES_FAIL';\r\n\r\n//! HEAD-PHONES\r\n//TODO: GET TOP 3 HEADPHONES \r\nexport const GET_TOP_HEADPHONE_REQUEST = 'GET_TOP_HEADPHONE_REQUEST';\r\nexport const GET_TOP_HEADPHONE_SUCCESS = 'GET_TOP_HEADPHONE_SUCCESS';\r\nexport const GET_TOP_HEADPHONE_FAIL = 'GET_TOP_HEADPHONE_FAIL';\r\n\r\n//TODO: GET ALL HEADPHONES\r\nexport const GET_ALL_HEADPHONE_REQUEST = 'GET_ALL_HEADPHONE_REQUEST';\r\nexport const GET_ALL_HEADPHONE_SUCCESS = 'GET_ALL_HEADPHONE_SUCCESS';\r\nexport const GET_ALL_HEADPHONE_FAIL = 'GET_ALL_HEADPHONE_FAIL';","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 1000);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 1000);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '60%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '60%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {GET_ORDER_OF_USER_RESET, GET_USER_DETAILS_RESET, GET_ALL_USERS_RESET} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst WidthExpand = styled.div`\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 1000);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 1000);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { !screenWidth ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth ? (\r\n                        <NavDropdown title={`Products`} style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/gaming\">\r\n                                    <NavDropdown.Item>Gaming</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: 8, fontSize: '1.2rem' }}></i>\r\n                            <div>\r\n                                Your Cart\r\n                            </div>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user && user.isAdmin ? (\r\n                            <NavDropdown title={<i className=\"fas fa-crown\" style={{ fontSize: '1.2rem', marginRight: '0rem', color: 'black'}}></i>} id=\"adminuser\">\r\n                                <LinkContainer to=\"/admin/usersList\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productsList\">\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/ordersList\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i className=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                            <AddBlackColor>\r\n                                <i className='fas fa-user' style={{ marginRight: 8, fontSize: '1.2rem'}}></i>\r\n                                Sign In\r\n                            </AddBlackColor>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <WidthExpand style={{width: screenWidth ? '100%' : '0%'}}>\r\n                {screenWidth ? (<SearchBox />) : null}\r\n            </WidthExpand>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/createreview`, { rating, comment, productID }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 950);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 950);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <Link to=\"/laptops\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/tvs\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/phones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/headphones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/gaming\" style={{width: '100%'}}>\r\n                <NavItem style={{borderRight: 'none'}}>\r\n                    <i className=\"fas fa-gamepad\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Gaming\r\n                </NavItem>\r\n            </Link>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#2b2e30',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport Rating from './Rating';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({ product, link = '/product' }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    $ {product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({content, variant}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React from 'react'\r\nimport { Row, Col, Spinner, Button } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport Message from '../Message';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TopProductTitle = styled.p`\r\n    text-align: center;\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0rem;\r\n    font-family: Rokkit;\r\n\r\n    & a:hover {\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media only screen and (max-width: 450px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst TopProduct = ({ loading, itemArray, title, itemLink, listItemLink }) => {\r\n    return (\r\n        <Container>\r\n            <TopProductTitle><Link to={listItemLink}>{title}</Link></TopProductTitle>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n               { !loading ? itemArray.length > 0 ? itemArray.map((tv) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                           <Product product={tv} link={itemLink}/>\r\n                        </Col>\r\n                    );\r\n                }) : (\r\n                    <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n               }\r\n            </Row>\r\n\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                <Link to={listItemLink}>\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n            </Row>       \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopProduct;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel \r\n            pause='hover' \r\n            style={{ marginBottom: '2rem', backgroundColor: 'yellow'}}\r\n            nextIcon={<i className=\"fas fa-arrow-right\" style={{color: 'black', fontSize: '2rem'}}></i>}\r\n            prevIcon={<i className=\"fas fa-arrow-left\" style={{color: 'black', fontSize: '2rem'}}></i>}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id} interval={5000}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        {product.name} ({product.price})\r\n                    </Carousel.Caption> \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//TODO: Actions\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport {getTopTVs} from '../redux/actions/tvActions';\r\nimport {getTopPhones} from '../redux/actions/phoneActions';\r\nimport {getTopHeadphone} from '../redux/actions/headphoneActions';\r\n\r\n//TODO: Components\r\nimport TopProduct from '../components/TopProduct (Home)/TopProduct';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n    const { topTV, loading: topTVLoading } = useSelector(state => state.topTVs);\r\n    const { topPhones, loading: topPhonesLoading } = useSelector(state => state.topPhones);\r\n    const { topHeadphone, loading: topHeadphoneLoading } = useSelector(state => state.topHeadphone);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get carousel products for the first time \r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top laptops for the first time \r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top tvs for the first time \r\n        if (topTV.length === 0) {\r\n            dispatch(getTopTVs());\r\n        }\r\n    }, [dispatch, topTV]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-phone for the first time\r\n        if (topPhones.length === 0) {\r\n            dispatch(getTopPhones());\r\n        }\r\n    }, [dispatch, topPhones]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-headphone for the first time\r\n        if (topHeadphone.length === 0) {\r\n            dispatch(getTopHeadphone());\r\n        }\r\n    }, [dispatch, topHeadphone]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                    <Helmet title=\"Welcome to Proshop\" href=\"/\" />\r\n                \r\n                    <CarouselSection \r\n                        carouselProducts={carouselProducts} \r\n                        loading={carouselLoading} \r\n                        error={carouselError} \r\n                    />\r\n\r\n                    {\r\n                        topLaptops.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topLaptopLoading} \r\n                                itemArray={topLaptops} \r\n                                title=\"Our Top Tier MSI Laptops\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/laptops\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topTV.length !== 0 ? (      \r\n                            <TopProduct \r\n                                loading={topTVLoading} \r\n                                itemArray={topTV} \r\n                                title=\"Best TVs for 2020\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/tvs\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topPhones.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topPhonesLoading}\r\n                                itemArray={topPhones}\r\n                                title=\"New Phones 2020\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/phones\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topHeadphone.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topHeadphoneLoading}\r\n                                itemArray={topHeadphone}\r\n                                title=\"Great Headphones for You\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/headphones\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_TVS_REQUEST\r\n        });\r\n\r\n        const {data} = await axios.get('/api/products/tvs/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_TVS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/tvs');\r\n\r\n        dispatch({\r\n            type: GET_ALL_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL,\r\n\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopHeadphone = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllHeadPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n        });\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image}) => {\r\n    return (\r\n        <Col md={8}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description} = props;\r\n\r\n    return (\r\n        <Col md={12}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_TO_CART,\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const data = (await axios.get(`/api/products/${id}`)).data;\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n    } catch(error) {\r\n        console.log(error);\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_TO_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport { createReview } from '../../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET } from '../../redux/actions/actionTypes';\r\nimport Message from '../Message';\r\nimport Rating from '../../components/Rating';\r\n\r\nconst ReviewSection = ({ singleProduct, user, userReviewError }) => {\r\n    const dispatch = useDispatch();\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                { singleProduct.reviews.length === 0 ? (\r\n                    <>\r\n                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                        { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                    </>\r\n                    ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { singleProduct.reviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <strong>{review.name}</strong>\r\n                                <Rating rating={review.rating} />\r\n                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                <p>{ review.comment }</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Post A Review</h2>\r\n                            {userReviewError ? (\r\n                                <Message \r\n                                    variant=\"danger\" \r\n                                    content={ userReviewError === 'User has already review this product'\r\n                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                            ) : null}\r\n                            { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReviewSection\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst LapTopTable = (props) => {\r\n    const laptopInfo = props.singleLaptop.details;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Display Size (inches)</td>\r\n                      <td>{laptopInfo.displaySizeInches}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (Pixels)</td>\r\n                      <td>{laptopInfo.resolutionPixels}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{laptopInfo.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Display type</td>\r\n                      <td>{laptopInfo.displayType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Type</td>\r\n                      <td>{laptopInfo.proccessorType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Cores</td>\r\n                      <td>{laptopInfo.proccessorCores}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Memory Cache</td>\r\n                      <td>{laptopInfo.processorMemoryCache}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorMaxClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Graphics processor</td>\r\n                      <td>{laptopInfo.graphicsProcessor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>RAM (GB)</td>\r\n                      <td>{laptopInfo.ram}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>SSD Storage</td>\r\n                      <td>{laptopInfo.ssdStorage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB 2.0 Ports</td>\r\n                      <td>{laptopInfo.usbTwoPointOPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB C Ports</td>\r\n                      <td>{laptopInfo.usbCPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Card Reader</td>\r\n                      <td>{laptopInfo.cardReader}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Web Cam</td>\r\n                      <td>{laptopInfo.webCam}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{laptopInfo.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Operating system</td>\r\n                      <td>{laptopInfo.operatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{laptopInfo.manufacturersWarantty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LapTopTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst TVTable = (props) => {\r\n    const TVDetail = props.tvsDetail; \r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Screen Size (inches)</td>\r\n                      <td>{TVDetail.screenSizes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Type</td>\r\n                      <td>{TVDetail.screenType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{TVDetail.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (pixels)</td>\r\n                      <td>{TVDetail.resolutionInPixel}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Refresh Rate</td>\r\n                      <td>{TVDetail.refreshRate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wifi</td>\r\n                      <td>{TVDetail.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB Ports</td>\r\n                      <td>{TVDetail.usbPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Height x Width x Depth</td>\r\n                      <td>{TVDetail.sizeHeightWidthDepth}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Warranty</td>\r\n                      <td>{TVDetail.warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TVTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst PhoneTable = (props) => {\r\n    const phoneInfo = props.singlePhone.phoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Operating System</td>\r\n                      <td>{phoneInfo.phoneOperatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Network Compability</td>\r\n                      <td>{phoneInfo.networkCompability}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dual Sim</td>\r\n                      <td>{phoneInfo.DualSim}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{phoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Devices Screen</td>\r\n                      <td>{phoneInfo.DeviceScreen}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution</td>\r\n                      <td>{phoneInfo.Resolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Internal Memory</td>\r\n                      <td>{phoneInfo.InternalMemory}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Front Camera</td>\r\n                      <td>{phoneInfo.FrontCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rear Camera</td>\r\n                      <td>{phoneInfo.RearCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor</td>\r\n                      <td>{phoneInfo.Processor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{phoneInfo.Wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{phoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PhoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst HeadphoneTable = (props) => {\r\n    const headphoneInfo = props.singleHeadphonePhone.headphoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Headphone Type</td>\r\n                      <td>{headphoneInfo.HeadphoneType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{headphoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Voice Control</td>\r\n                      <td>{headphoneInfo.VoiceControl}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Noise Reduction Type</td>\r\n                      <td>{headphoneInfo.NoiseReductionType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Built-In Microphone</td>\r\n                      <td>{headphoneInfo.BuiltInMicrophone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{headphoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default HeadphoneTable;\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport ReviewSection from '../components/ReviewSection/ReviewSection';\r\nimport Loading from '../components/Loading';\r\nimport Helmet from '../components/Helmet';\r\nimport LapTopTable from '../components/ProductDetail/LaptopTable/LapTopTable';\r\nimport TVTable from '../components/ProductDetail/TvTable/TVTable';\r\nimport PhoneTable from '../components/ProductDetail/PhoneTable/PhoneTable';\r\nimport HeadphoneTable from '../components/ProductDetail/HeadphoneTable/HeadphoneTable';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />                            \r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                        </Row>\r\n                        {\r\n                            singleProduct.details.proccessorCores ? (\r\n                                <LapTopTable singleLaptop={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.tvsDetail.sizeHeightWidthDepth ? (\r\n                                <TVTable tvsDetail={singleProduct.tvsDetail} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.phoneDetail.DualSim ? (\r\n                                <PhoneTable singlePhone={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.headphoneDetail.HeadphoneType ? (\r\n                                <HeadphoneTable singleHeadphonePhone={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct && user  ? (\r\n                                <ReviewSection singleProduct={singleProduct} user={user} userReviewError={userReviewError} />\r\n                            ) : null\r\n                        }\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    const { user } = useSelector(state => state.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addItemToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <h2>Your Cart is empty <Link to=\"/\">Go Back</Link></h2> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addItemToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/laptops`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useEffect} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst SearchScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading } = productsList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                { !loading ? products.length > 0 ? products.map((product) => {\r\n                     return(\r\n                         <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                            <Product product={product}/>\r\n                         </Col>\r\n                     );\r\n                 }) : (\r\n                     <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                 ) : <Loading /> \r\n                }\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTVs } from '../redux/actions/tvActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst TVScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { tvs, loading, error } = useSelector(state => state.allTVs);\r\n    \r\n    useEffect(() => {\r\n        if (tvs.length === 0) {\r\n            dispatch(getAllTVs());\r\n        }\r\n    }, [dispatch, tvs]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"TVs | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : tvs.map((tv) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                        <Product product={tv} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TVScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPhones } from '../redux/actions/phoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PhonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allPhones, loading, error } = useSelector(state => state.allPhones);\r\n    \r\n    useEffect(() => {\r\n        if (allPhones.length === 0) {\r\n            dispatch(getAllPhones());\r\n        }\r\n    }, [dispatch, allPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Phones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allPhones.map((phone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={phone._id}>\r\n                        <Product product={phone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PhonesScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllHeadPhones } from '../redux/actions/headphoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HeadphonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { headPhones, loading, error } = useSelector(state => state.allHeadphone);\r\n    \r\n    useEffect(() => {\r\n        if (headPhones.length === 0) {\r\n            dispatch(getAllHeadPhones());\r\n        }\r\n    }, [dispatch, headPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Headphones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : headPhones.map((headphone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={headphone._id}>\r\n                        <Product product={headphone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HeadphonesScreen;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport TVScreen from './screens/TVScreen';\nimport PhonesScreen from './screens/phonesScreen';\nimport HeadphonesScreen from './screens/HeadphoneScreen';\n\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport styled from 'styled-components';\n\nconst MarginContainer = styled.div`\nmargin-top: 0%;  \nmargin-left: 5%;\nmargin-right: 5%;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n        <Header/>\n        <SubNavbar />\n      <main className='py-3'>\n        <MarginContainer>  \n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/tvs\" component={TVScreen} exact />\n          <Route path=\"/phones\" component={PhonesScreen} exact />\n          <Route path=\"/headphones\" component={HeadphonesScreen} exact />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={SearchScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </MarginContainer>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    REMOVE_PRODUCT_TO_CART, \r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            const item = action.payload;\r\n\r\n            const existedItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existedItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_PRODUCT_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst top_TV_Initial_State = {\r\n    topTV: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getTopTVs = (state = top_TV_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topTV: [...action.payload]\r\n            }\r\n        case GET_TOP_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst all_TVs_Initial_State = {\r\n    tvs: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getALLTVs = (state = all_TVs_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tvs: [...action.payload]\r\n            }\r\n        case GET_ALL_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topPhonesInitialState = {\r\n    topPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topPhonesReducer = (state = topPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_PHONES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topPhones: [...action.payload]\r\n            }\r\n        case GET_TOP_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allPhonesInitialState = {\r\n    allPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allPhonesReducer = (state = allPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PHONES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL,\r\n\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topHeadPhoneInitialState = {\r\n    topHeadphone: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topHeadphoneReducer = (state = topHeadPhoneInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topHeadphone: [...action.payload]\r\n            }\r\n        case GET_TOP_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allHeadphonesInitialState = {\r\n    headPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allHeadphonesReducer = (state = allHeadphonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                headPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\nimport {\r\n    getTopTVs,\r\n    getALLTVs\r\n} from './reducers/tvReducers';\r\nimport {\r\n    topPhonesReducer,\r\n    allPhonesReducer\r\n} from './reducers/phoneReducers';\r\nimport {\r\n    topHeadphoneReducer,\r\n    allHeadphonesReducer\r\n} from './reducers/headphoneReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer,\r\n    topTVs: getTopTVs,\r\n    allTVs: getALLTVs,\r\n    topPhones: topPhonesReducer,\r\n    allPhones: allPhonesReducer,\r\n    topHeadphone: topHeadphoneReducer,\r\n    allHeadphone: allHeadphonesReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}