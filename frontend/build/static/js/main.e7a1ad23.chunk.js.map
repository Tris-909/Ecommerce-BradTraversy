{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/userActions.js","components/SearchBox.js","components/Header.js","components/SubNavbar.js","components/Footer.js","redux/actions/productActions.js","redux/actions/wishListActions.js","redux/actions/cartActions.js","components/Rating.js","components/Message.js","components/Product.js","components/TopProduct (Home)/TopProduct.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","redux/actions/tvActions.js","redux/actions/phoneActions.js","redux/actions/headphoneActions.js","redux/actions/gameActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","components/ProductDetail/ProductCard.js","components/ReviewSection/AgreeOrDisAgree/AgreeText.js","components/ReviewSection/AgreeOrDisAgree/DisAgreeText.js","components/ReviewSection/ReviewSection.js","components/ProductDetail/LaptopTable/LapTopTable.js","components/ProductDetail/TvTable/TVTable.js","components/ProductDetail/PhoneTable/PhoneTable.js","components/ProductDetail/HeadphoneTable/HeadphoneTable.js","components/ProductDetail/GameTable/GameTable.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SearchScreen.js","screens/TVScreen.js","screens/phonesScreen.js","screens/HeadphoneScreen.js","screens/GamesScreen.js","components/WishList Product/WishListProduct.js","components/WishList Product/WishListProductHorizontal.js","screens/WishListScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/wishListReducer.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/reducers/tvReducers.js","redux/reducers/phoneReducers.js","redux/reducers/headphoneReducer.js","redux/reducers/gameReducer.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","ADD_PRODUCT_TO_CART_SUCCESS","ADD_PRODUCT_TO_CART_FAIL","ADD_PRODUCT_TO_CART_RESET","REMOVE_PRODUCT_FROM_CART_REQUEST","REMOVE_PRODUCT_FROM_CART_SUCCESS","REMOVE_PRODUCT_FROM_CART_FAIL","REMOVE_PRODUCT_FROM_CART_RESET","GET_ALL_ITEMS_FROM_CART_REQUEST","GET_ALL_ITEMS_FROM_CART_SUCCESS","GET_ALL_ITEMS_FROM_CART_FAIL","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","GET_WISH_LIST_REQUEST","GET_WISH_LIST_SUCCESS","GET_WISH_LIST_FAIL","ADD_ITEM_TO_WISH_LIST_REQUEST","ADD_ITEM_TO_WISH_LIST_SUCCESS","ADD_ITEM_TO_WISH_LIST_FAIL","ADD_ITEM_TO_WISH_LIST_RESET","REMOVE_ITEM_FROM_WISH_LIST_REQUEST","REMOVE_ITEM_FROM_WISH_LIST_SUCCESS","REMOVE_ITEM_FROM_WISH_LIST_FAIL","REMOVE_ITEM_FROM_WISH_LIST_RESET","REMOVE_ALL_ITEMS_WISHLIST_REQUEST","REMOVE_ALL_ITEMS_WISHLIST_SUCCESS","REMOVE_ALL_ITEMS_WISHLIST_FAIL","REMOVE_ALL_ITEMS_WISHLIST_RESET","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","GET_USER_CURRENT_STATUS_PENDING","GET_USER_CURRENT_STATUS_SUCCESS","GET_USER_CURRENT_STATUS_FAIL","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","GET_SET_REVIEWS_PENDING","GET_SET_REVIEWS_SUCCESS","GET_SET_REVIEWS_FAIL","GET_SET_REVIEWS_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","DELETE_REVIEW_RESET","SET_A_REVIEW_AS_AGREE_PENDING","SET_A_REVIEW_AS_AGREE_SUCCESS","SET_A_REVIEW_AS_AGREE_FAIL","SET_A_REVIEW_AS_AGREE_RESET","SET_A_REVIEW_AS_DISAGREE_PENDING","SET_A_REVIEW_AS_DISAGREE_SUCCESS","SET_A_REVIEW_AS_DISAGREE_FAIL","SET_A_REVIEW_AS_DISAGREE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","GET_TOP_TVS_REQUEST","GET_TOP_TVS_SUCCESS","GET_TOP_TVS_FAIL","GET_ALL_TVS_REQUEST","GET_ALL_TVS_SUCCESS","GET_ALL_TVS_FAIL","GET_TOP_PHONES_REQUEST","GET_TOP_PHONES_SUCCESS","GET_TOP_PHONES_FAIL","GET_ALL_PHONES_REQUEST","GET_ALL_PHONES_SUCCESS","GET_ALL_PHONES_FAIL","GET_TOP_HEADPHONE_REQUEST","GET_TOP_HEADPHONE_SUCCESS","GET_TOP_HEADPHONE_FAIL","GET_ALL_HEADPHONE_REQUEST","GET_ALL_HEADPHONE_SUCCESS","GET_ALL_HEADPHONE_FAIL","GET_TOP_GAMES_REQUEST","GET_TOP_GAMES_SUCCESS","GET_TOP_GAMES_FAIL","GET_ALL_GAMES_REQUEST","GET_ALL_GAMES_SUCCESS","GET_ALL_GAMES_FAIL","getCurrentUserStatus","dispatch","getState","a","type","user","config","headers","token","axios","get","data","payload","error","response","message","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","YourCartText","useDispatch","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","marginLeft","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubLink","SubNavbar","borderRight","Footer","Row","Col","getProductsList","pageNumber","getSingleProduct","getCarouselProducts","getSetOfReviewsOfCurrentProductBasedOnPageNumber","productId","pageReviewNumber","getWishList","addItemToWishList","itemId","productName","productPrice","productImage","productRating","productNumReviews","post","removeAnItemFromWishList","wishListItemId","delete","addItemToCart","countInStock","qty","console","log","quantity","getAllItemsCart","Rating","rating","text","defaultProps","XSymbol","strong","Message","content","addToCart","show","setShow","Alert","position","display","marginBottom","onClickHandler","CardMoneyText","FootProductContainer","ButtonContainer","props","product","link","isLoved","setIsLoved","wishListID","setWishListID","addItemSuccess","cart","cartItems","cartList","wishList","addItemToWishListSuccess","success","map","item","_id","Card","Img","src","image","Body","Title","as","Text","numReviews","price","cursor","onAddItemToCartHandler","onRemoveItemFromWishList","onAddItemToWishList","TopProductTitle","p","TopProduct","loading","itemArray","itemLink","listItemLink","justifyContent","alignItems","Spinner","animation","size","height","length","tv","sm","md","lg","xl","Loading","CarouselSection","carouselProducts","Carousel","pause","nextIcon","prevIcon","interval","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","topTVs","topTV","topTVLoading","topPhones","topPhonesLoading","topHeadphone","topHeadphoneLoading","topGames","topGamesLoading","removeItemFromWishListSuccess","removeItemFromWishList","dismissible","Heading","ProductImage","ProductInfo","description","ListGroup","ProductCard","useHistory","setQuantity","Array","keys","x","disabled","AgreeTextContainer","isAgreeded","AgreeText","numOfAgrees","useAgreeOrDisAgreeArray","reviewID","productID","setIsAgreeded","i","reviewId","agree","stickAReviewAsAgree","DisAgreeTextContainer","isDisAgreeded","DisAgreeText","numOfDisAgrees","setIsDisAgreeded","stickAReviewAsDisAgree","ReviewContainer","NoReviewText","ReviewOverallContainer","RatingOverallText","ReviewOverallProgressBarContainer","FilterBar","AgreeContainer","ReviewSection","singleProduct","userReviewError","deleteReviewError","setOfReviews","currentReviews","setAgreeSuccess","setDisAgreeSuccess","pages","page","userStatus","currentUserStatus","firsttime","setFirstTime","setRating","comment","setComment","numOf5StarsReviews","setNumOf5StarReviews","numOf4StarsReviews","setNumOf4StarReviews","numOf3StarsReviews","setNumOf3StarReviews","numOf2StarsReviews","setNumOf2StarReviews","numOf1StarsReviews","setNumOf1StarReviews","onSubmitReviewHandler","createReview","onDeleteReviewHandler","Math","ceil","ProgressBar","now","label","Group","controlId","Label","row","textDecoration","review","createdAt","substring","agreeAndDisAgree","Pagination","from","nextPages","getNextSetOfReviews","LapTopTable","laptopInfo","singleLaptop","details","Table","striped","bordered","hover","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","TVTable","TVDetail","tvsDetail","screenSizes","screenType","resolutionInPixel","refreshRate","usbPorts","sizeHeightWidthDepth","warranty","PhoneTable","phoneInfo","singlePhone","phoneDetail","phoneOperatingSystem","networkCompability","DualSim","Colour","DeviceScreen","Resolution","InternalMemory","FrontCamera","RearCamera","Processor","Wifi","Warranty","HeadphoneTable","headphoneInfo","singleHeadphonePhone","headphoneDetail","HeadphoneType","VoiceControl","NoiseReductionType","BuiltInMicrophone","GameTable","gameInfo","singleGame","gameDetail","Platform","GamingGerne","ConsumerAdvice","GameDeveloper","GamePublisher","ProductScreen","match","userReview","userReviewSuccess","deleteReview","deleteReviewSuccess","params","CartCardItem","CardImageContainer","CardImage","img","CardInfoContainer","CardBottomContainer","CardTextContainer","CardProductName","CardProductPrice","RemoveButton","CartTitle","CartEmptyText","CartScreen","removeCartItemSuccess","removeCart","removeFromCartHandler","removeItemFromCart","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","search","split","email","setEmail","password","setPassword","setItem","JSON","stringify","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","Number","toFixed","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","active","ProductListAdminScreen","productsList","products","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","laptop","SearchScreen","TVScreen","allTVs","tvs","PhonesScreen","allPhones","phone","HeadphonesScreen","allHeadphone","headPhones","headphone","GamesScreen","allGames","game","WishListProduct","CardTopSectionContainer","CartTextContainer","CardBototmContainer","CardButtonContainer","WishListProductHorizontal","FlexContainer","DisplayContainer","DisplayButtonContainer","ClearWishListButton","button","WishListText","NoItemText","WishListScreen","showGrid","setShowGrid","removeAllItemsFromWishListSuccess","removeAllItemsFromWishList","clearWishList","visibility","swapToShowGridMode","swapToShowListMode","flexDirection","transition","ScrollToTop","prevProps","this","scrollTo","React","Component","MarginContainer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","setReviewsInitialState","setAgreeError","setDisAgreeError","addItemLoading","addItemError","initialRemoveItemCartState","allItemsFromCart","wishListInitialState","addItemToWishListInitialState","removeItemFromWishListInitialState","removeAllItemInitlaState","initialUserState","initialDetailState","initialReviewState","deleteReviewInitalState","currentUserStatusState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","top_TV_Initial_State","all_TVs_Initial_State","topPhonesInitialState","allPhonesInitialState","topHeadPhoneInitialState","allHeadphonesInitialState","topGameInitalState","allGamesInitialState","reducer","combineReducers","action","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7a1ad23.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\n//TODO: ADD ITEM TO CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const ADD_PRODUCT_TO_CART_SUCCESS = 'ADD_PRODUCT_TO_CART_SUCCESS';\r\nexport const ADD_PRODUCT_TO_CART_FAIL = 'ADD_PRODUCT_TO_CART_FAIL'; \r\nexport const ADD_PRODUCT_TO_CART_RESET = 'ADD_PRODUCT_TO_CART_RESET';\r\n\r\n//TODO: REMOVE ITEM FROM CART\r\nexport const REMOVE_PRODUCT_FROM_CART_REQUEST = 'REMOVE_PRODUCT_TO_CART_REQUEST';\r\nexport const REMOVE_PRODUCT_FROM_CART_SUCCESS = 'REMOVE_PRODUCT_FROM_CART_SUCCESS';\r\nexport const REMOVE_PRODUCT_FROM_CART_FAIL = 'REMOVE_PRODUCT_FROM_CART_FAIL';\r\nexport const REMOVE_PRODUCT_FROM_CART_RESET = 'REMOVE_PRODUCT_FROM_CART_RESET';\r\n\r\n//TODO: GET ALL ITEMS FROM CART\r\nexport const GET_ALL_ITEMS_FROM_CART_REQUEST = 'GET_ALL_ITEMS_FROM_CART_REQUEST';\r\nexport const GET_ALL_ITEMS_FROM_CART_SUCCESS = 'GET_ALL_ITEMS_FROM_CART_SUCCESS';\r\nexport const GET_ALL_ITEMS_FROM_CART_FAIL = 'GET_ALL_ITEMS_FROM_CART_FAIL';\r\n\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! WISH-LIST\r\n//TODO: GET USER WISHLIST\r\nexport const GET_WISH_LIST_REQUEST = 'GET_WISH_LIST_REQUEST';\r\nexport const GET_WISH_LIST_SUCCESS = 'GET_WISH_LIST_SUCCESS';\r\nexport const GET_WISH_LIST_FAIL = 'GET_WISH_LIST_FAIL';\r\n\r\n//TODO: ADD AN ITEM TO WISHLIST\r\nexport const ADD_ITEM_TO_WISH_LIST_REQUEST = 'ADD_ITEM_TO_WISH_LIST_REQUEST';\r\nexport const ADD_ITEM_TO_WISH_LIST_SUCCESS = 'ADD_ITEM_TO_WISH_LIST_SUCCESS';\r\nexport const ADD_ITEM_TO_WISH_LIST_FAIL = 'ADD_ITEM_TO_WISH_LIST_FAIL';\r\nexport const ADD_ITEM_TO_WISH_LIST_RESET = 'ADD_ITEM_TO_WISH_LIST_RESET';\r\n\r\n//TODO: REMOVE AN ITEM FROM WISHLIST\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_REQUEST = 'REMOVE_ITEM_FROM_WISH_LIST_REQUEST';\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_SUCCESS = 'REMOVE_ITEM_FROM_WISH_LIST_SUCCESS';\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_FAIL = 'REMOVE_ITEM_FROM_WISH_LIST_FAIL';  \r\nexport const REMOVE_ITEM_FROM_WISH_LIST_RESET = 'REMOVE_ITEM_FROM_WISH_LIST_RESET';\r\n\r\n//TODO: REMOVE ALL ITEMS FROM WISHLIST\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_REQUEST = 'REMOVE_ALL_ITEMS_WISHLIST_REQUEST';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_SUCCESS = 'REMOVE_ALL_ITEMS_WISHLIST_SUCCESS';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_FAIL = 'REMOVE_ALL_ITEMS_WISHLIST_FAIL';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_RESET = 'REMOVE_ALL_ITEMS_WISHLIST_RESET';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION AS ADMIN TO SHOW ON ADMIN PAGE\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO: GET NEW INFO ABOUT THE CURRENT USER LOGGED IN\r\nexport const GET_USER_CURRENT_STATUS_PENDING = 'GET_USER_CURRENT_STATUS_PENDING';\r\nexport const GET_USER_CURRENT_STATUS_SUCCESS = 'GET_USER_CURRENT_STATUS_SUCCESS';\r\nexport const GET_USER_CURRENT_STATUS_FAIL = 'GET_USER_CURRENT_STATUS_FAIL';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: GET A SET OF REVIEWS BASED ON PAGENUMBER\r\nexport const GET_SET_REVIEWS_PENDING = 'GET_SET_REVIEWS_PENDING';\r\nexport const GET_SET_REVIEWS_SUCCESS = 'GET_SET_REVIEWS_SUCCESS';\r\nexport const GET_SET_REVIEWS_FAIL = 'GET_SET_REVIEWS_FAIL';\r\nexport const GET_SET_REVIEWS_RESET = 'GET_SET_REVIEWS_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//TODO: DELETE A REVIEW OF A PRODUCT BASED ON USERID, PRODUCTID AND REVIEW ID\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\r\n\r\n//TODO: SET A REVIEW AS \"AGREE\" \r\nexport const SET_A_REVIEW_AS_AGREE_PENDING = 'SET_A_REVIEW_AS_AGREE_PENDING';\r\nexport const SET_A_REVIEW_AS_AGREE_SUCCESS = 'SET_A_REVIEW_AS_AGREE_SUCCESS';\r\nexport const SET_A_REVIEW_AS_AGREE_FAIL = 'SET_A_REVIEW_AS_AGREE_FAIL';\r\nexport const SET_A_REVIEW_AS_AGREE_RESET = 'SET_A_REVIEW_AS_AGREE_RESET';\r\n\r\n//TODO: SET A REVIEW AS \"DIS-AGREE\"\r\nexport const SET_A_REVIEW_AS_DISAGREE_PENDING = 'SET_A_REVIEW_AS_DISAGREE_PENDING';\r\nexport const SET_A_REVIEW_AS_DISAGREE_SUCCESS = 'SET_A_REVIEW_AS_DISAGREE_SUCCESS';\r\nexport const SET_A_REVIEW_AS_DISAGREE_FAIL = 'SET_A_REVIEW_AS_DISAGREE_FAIL';\r\nexport const SET_A_REVIEW_AS_DISAGREE_RESET = 'SET_A_REVIEW_AS_DISAGREE_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';\r\n\r\n//!TVS \r\n//TODO: GET TOP 3 TVS\r\nexport const GET_TOP_TVS_REQUEST = 'GET_TOP_TVS_REQUEST';\r\nexport const GET_TOP_TVS_SUCCESS = 'GET_TOP_TVS_SUCCESS';\r\nexport const GET_TOP_TVS_FAIL = 'GET_TOP_TVS_FAIL';\r\n\r\n//TODO: GET_ALL_TVS \r\nexport const GET_ALL_TVS_REQUEST = 'GET_ALL_TVS_REQUEST';\r\nexport const GET_ALL_TVS_SUCCESS = 'GET_ALL_TVS_SUCCESS';\r\nexport const GET_ALL_TVS_FAIL = 'GET_ALL_TVS_FAIL';\r\n\r\n//! PHONES\r\n//TODO: GET TOP 3 PHONES\r\nexport const GET_TOP_PHONES_REQUEST = 'GET_TOP_PHONES_REQUEST';\r\nexport const GET_TOP_PHONES_SUCCESS = 'GET_TOP_PHONES_SUCCESS';\r\nexport const GET_TOP_PHONES_FAIL = 'GET_TOP_PHONES_FAIL';\r\n\r\n//TODO: GET ALL PHONES\r\nexport const GET_ALL_PHONES_REQUEST = 'GET_ALL_PHONES_REQUEST';\r\nexport const GET_ALL_PHONES_SUCCESS = 'GET_ALL_PHONES_SUCCESS';\r\nexport const GET_ALL_PHONES_FAIL = 'GET_ALL_PHONES_FAIL';\r\n\r\n//! HEAD-PHONES\r\n//TODO: GET TOP 3 HEADPHONES \r\nexport const GET_TOP_HEADPHONE_REQUEST = 'GET_TOP_HEADPHONE_REQUEST';\r\nexport const GET_TOP_HEADPHONE_SUCCESS = 'GET_TOP_HEADPHONE_SUCCESS';\r\nexport const GET_TOP_HEADPHONE_FAIL = 'GET_TOP_HEADPHONE_FAIL';\r\n\r\n//TODO: GET ALL HEADPHONES\r\nexport const GET_ALL_HEADPHONE_REQUEST = 'GET_ALL_HEADPHONE_REQUEST';\r\nexport const GET_ALL_HEADPHONE_SUCCESS = 'GET_ALL_HEADPHONE_SUCCESS';\r\nexport const GET_ALL_HEADPHONE_FAIL = 'GET_ALL_HEADPHONE_FAIL';\r\n\r\n//! GAMES\r\n//TODO: GET TOP 3 GAMES\r\nexport const GET_TOP_GAMES_REQUEST = 'GET_TOP_GAMES_REQUEST';\r\nexport const GET_TOP_GAMES_SUCCESS = 'GET_TOP_GAMES_SUCCESS';\r\nexport const GET_TOP_GAMES_FAIL = 'GET_TOP_GAMES_FAIL';\r\n\r\n//TODO: GET ALL GAMES \r\nexport const GET_ALL_GAMES_REQUEST = 'GET_ALL_GAMES_REQUEST';\r\nexport const GET_ALL_GAMES_SUCCESS = 'GET_ALL_GAMES_SUCCESS';\r\nexport const GET_ALL_GAMES_FAIL = 'GET_ALL_GAMES_FAIL';","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n\r\n    SET_A_REVIEW_AS_AGREE_PENDING,\r\n    SET_A_REVIEW_AS_AGREE_SUCCESS,\r\n    SET_A_REVIEW_AS_AGREE_FAIL,\r\n\r\n    SET_A_REVIEW_AS_DISAGREE_PENDING,\r\n    SET_A_REVIEW_AS_DISAGREE_SUCCESS,\r\n    SET_A_REVIEW_AS_DISAGREE_FAIL,\r\n\r\n    GET_USER_CURRENT_STATUS_PENDING,\r\n    GET_USER_CURRENT_STATUS_SUCCESS,\r\n    GET_USER_CURRENT_STATUS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/createreview`, { rating, comment, productID }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteReview = (productID, reviewID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_REVIEW_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/deletereview/${productID}/${reviewID}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const stickAReviewAsAgree = (productId, reviewID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SET_A_REVIEW_AS_AGREE_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/products/reviews/agree', {\r\n            productId: productId,\r\n            reviewId: reviewID\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: SET_A_REVIEW_AS_AGREE_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: SET_A_REVIEW_AS_AGREE_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const stickAReviewAsDisAgree = (productId, reviewID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SET_A_REVIEW_AS_DISAGREE_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/products/reviews/disagree', {\r\n            productId: productId,\r\n            reviewId: reviewID\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: SET_A_REVIEW_AS_DISAGREE_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: SET_A_REVIEW_AS_DISAGREE_FAIL\r\n        });\r\n    }\r\n}\r\n\r\nexport const getCurrentUserStatus = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: GET_USER_CURRENT_STATUS_PENDING });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users/currentstatus', config);\r\n        \r\n        dispatch({\r\n            type: GET_USER_CURRENT_STATUS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_CURRENT_STATUS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 991);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '40%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '100%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {\r\n    GET_ORDER_OF_USER_RESET, \r\n    GET_USER_DETAILS_RESET, \r\n    GET_ALL_USERS_RESET,\r\n    DELETE_REVIEW_RESET\r\n} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst YourCartText = styled.div`\r\n    font-size: 0.7rem;\r\n    font-weight: 700;\r\n    margin-left: 8px;\r\n    \r\n\r\n\r\n    @media (max-width: 990px) {\r\n        display: inline;\r\n    }\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 990\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { screenWidth  > 991 ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth  < 991 ? (\r\n                        <NavDropdown title={<span style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}}> Products </span>} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/gaming\">\r\n                                    <NavDropdown.Item>Gaming</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  \r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '0rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Your Cart\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to={user ? \"/wishlist\" : \"/login\"}>\r\n                      <Nav.Link href=\"/wishlist\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-heart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '0rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Wish List\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i className=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                {\r\n                                    user && user.isAdmin ? (\r\n                                        <NavDropdown title={<span style={{ marginLeft: '1rem'}}>Admin</span>} id=\"adminuser\">\r\n                                            <LinkContainer to=\"/admin/usersList\">\r\n                                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/productsList\">\r\n                                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/ordersList\">\r\n                                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                        </NavDropdown>\r\n                                    ) : null\r\n                                }\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                            <AddBlackColor>\r\n                                <i className='fas fa-user' style={{ marginRight: 8, fontSize: '1.2rem'}}></i>\r\n                                Sign In\r\n                            </AddBlackColor>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <div style={{width: screenWidth  < 991 ? '100%' : '0%'}}>\r\n                {screenWidth  < 991 ? (<SearchBox />) : null}\r\n            </div>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n\r\n    &:hover {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all .2s;\r\n`;\r\n\r\nconst SubLink = styled(Link)`\r\n    width: 100%;\r\n    padding: 1rem 0rem;\r\n\r\n    &:hover {\r\n        text-decoration: none;\r\n        background-color: rgb(252, 240, 3);\r\n\r\n        div {\r\n            color: black;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 990);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <SubLink to=\"/laptops\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/tvs\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/phones\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/headphones\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/gaming\">\r\n                <NavItem style={{borderRight: 'none'}}>\r\n                    <i className=\"fas fa-gamepad\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Gaming\r\n                </NavItem>\r\n            </SubLink>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL,\r\n\r\n    GET_SET_REVIEWS_PENDING,\r\n    GET_SET_REVIEWS_SUCCESS,\r\n    GET_SET_REVIEWS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSetOfReviewsOfCurrentProductBasedOnPageNumber = (productId, pageReviewNumber) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_SET_REVIEWS_PENDING\r\n        });\r\n        const {data} = await axios.get(`/api/products/getreviews/${productId}?pageReviewNumber=${pageReviewNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_SET_REVIEWS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SET_REVIEWS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import {\r\n    GET_WISH_LIST_REQUEST,\r\n    GET_WISH_LIST_SUCCESS,\r\n    GET_WISH_LIST_FAIL,\r\n\r\n    ADD_ITEM_TO_WISH_LIST_REQUEST,\r\n    ADD_ITEM_TO_WISH_LIST_SUCCESS,\r\n    ADD_ITEM_TO_WISH_LIST_FAIL,\r\n\r\n    REMOVE_ITEM_FROM_WISH_LIST_REQUEST,\r\n    REMOVE_ITEM_FROM_WISH_LIST_SUCCESS,\r\n    REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n\r\n    REMOVE_ALL_ITEMS_WISHLIST_REQUEST,\r\n    REMOVE_ALL_ITEMS_WISHLIST_SUCCESS,\r\n    REMOVE_ALL_ITEMS_WISHLIST_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getWishList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: GET_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users/wishlist', config);\r\n\r\n        dispatch({\r\n            type: GET_WISH_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const addItemToWishList = (itemId, productName, productPrice, productImage, productRating, productNumReviews) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: ADD_ITEM_TO_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/users/wishlist/additem',{\r\n            itemId, \r\n            productName, \r\n            productPrice, \r\n            productImage, \r\n            productRating, \r\n            productNumReviews\r\n        } , config);\r\n\r\n        dispatch({\r\n            type: ADD_ITEM_TO_WISH_LIST_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ADD_ITEM_TO_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAnItemFromWishList = (wishListItemId) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: REMOVE_ITEM_FROM_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/wishlist/deleteitem/${wishListItemId}`, config);\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM_FROM_WISH_LIST_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAllItemsFromWishList = () => async( dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete('/api/users/wishlist/deleteitem', config);\r\n\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    ADD_PRODUCT_TO_CART_SUCCESS,\r\n    ADD_PRODUCT_TO_CART_FAIL,\r\n\r\n    REMOVE_PRODUCT_FROM_CART_REQUEST,\r\n    REMOVE_PRODUCT_FROM_CART_SUCCESS,\r\n    REMOVE_PRODUCT_FROM_CART_FAIL,\r\n\r\n    GET_ALL_ITEMS_FROM_CART_REQUEST,\r\n    GET_ALL_ITEMS_FROM_CART_SUCCESS,\r\n    GET_ALL_ITEMS_FROM_CART_FAIL,\r\n\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (itemId, productName, productImage, productPrice, countInStock, qty) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART\r\n        });\r\n        console.log({\r\n            itemId, \r\n            productName, \r\n            productImage, \r\n            productPrice, \r\n            countInStock: countInStock, \r\n            quantity: qty\r\n        });\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/users/cart/additem', { \r\n            itemId, \r\n            productName, \r\n            productImage, \r\n            productPrice, \r\n            countInStock: countInStock, \r\n            quantity: qty\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVE_PRODUCT_FROM_CART_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/cart/removeitem/${id}`, config);\r\n\r\n        dispatch({\r\n            type: REMOVE_PRODUCT_FROM_CART_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: REMOVE_PRODUCT_FROM_CART_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllItemsCart = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_ITEMS_FROM_CART_REQUEST });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users/cart', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ITEMS_FROM_CART_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ITEMS_FROM_CART_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating >= 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#ffff00',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst XSymbol = styled.strong`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 2%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Message = ({content, variant, addToCart = false}) => {\r\n    const [show, setShow] = useState(true);\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <Alert \r\n            variant={variant} \r\n            style={{ \r\n                position: 'relative', \r\n                display: show ? 'initial' : 'none',\r\n                marginBottom: '1rem'\r\n            }}\r\n            >\r\n            <XSymbol onClick={(e) => onClickHandler(e)} style={{display: addToCart ? 'initial' : 'none'}}>X</XSymbol>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React, {useState, useEffect} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    addItemToCart,\r\n    getAllItemsCart\r\n} from '../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../redux/actions/actionTypes';\r\n\r\nimport Rating from './Rating';\r\nimport Message from './Message';\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    padding-top: 1rem;\r\n    font-family: 'Luckiest Guy', cursive;\r\n`;\r\n\r\nconst FootProductContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 360px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 360px) {\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst Product = (props) => {\r\n    const { product, link = '/product' } = props;\r\n    const [isLoved, setIsLoved] = useState(false);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { addItemSuccess } = useSelector(state => state.cart);\r\n    const { cartItems } = useSelector(state => state.cartList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product._id) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllItemsCart());\r\n    }, [dispatch, addItemSuccess]);\r\n\r\n    const onAddItemToCartHandler = (e, id, productName, productImage, productPrice, countInStock) => {\r\n        e.preventDefault();\r\n\r\n        if (user) {\r\n            dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n            dispatch(addItemToCart(id, productName, productImage, productPrice, countInStock, 1));\r\n        } else {\r\n            props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        \r\n        if (user) {\r\n            dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n            if (addItemToWishListSuccess) {\r\n                setIsLoved(true);\r\n            }\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        \r\n        if (user) {\r\n            dispatch(removeAnItemFromWishList(wishListID));\r\n            setIsLoved(false);\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                {\r\n                    addItemSuccess ? cartItems.map((item) => {\r\n                        if (item.itemId == product._id) {\r\n                            return(\r\n                            <div style={{marginTop: '1rem'}}>\r\n                                <Message variant=\"success\" content=\"Add Item To Cart Successfully\" addToCart={true} /> \r\n                            </div>\r\n                            );\r\n                        }\r\n                    }) : null\r\n                }\r\n                <FootProductContainer>\r\n                    <CardMoneyText>\r\n                        $ {product.price}\r\n                    </CardMoneyText>\r\n\r\n                    <ButtonContainer>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => \r\n                            onAddItemToCartHandler(e, product._id, product.name, product.image, product.price, product.countInStock, 1)}></i>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </ButtonContainer>\r\n                </FootProductContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withRouter(Product)\r\n","import React from 'react'\r\nimport { Row, Col, Spinner, Button } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport Message from '../Message';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TopProductTitle = styled.p`\r\n    text-align: center;\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0rem;\r\n    font-family: Rokkit;\r\n\r\n    & a:hover {\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media only screen and (max-width: 450px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst TopProduct = ({ loading, itemArray, title, itemLink, listItemLink }) => {\r\n    return (\r\n        <Container>\r\n            <TopProductTitle><Link to={listItemLink}>{title}</Link></TopProductTitle>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n               { !loading ? itemArray.length > 0 ? itemArray.map((tv) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                           <Product product={tv} link={itemLink}/>\r\n                        </Col>\r\n                    );\r\n                }) : (\r\n                    <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n               }\r\n            </Row>\r\n\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center', marginTop: '1rem'}}>\r\n                <Link to={listItemLink}>\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n            </Row>       \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopProduct;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel \r\n            pause='hover' \r\n            style={{ marginBottom: '2rem', backgroundColor: 'yellow'}}\r\n            nextIcon={<i className=\"fas fa-arrow-right\" style={{color: 'black', fontSize: '2rem'}}></i>}\r\n            prevIcon={<i className=\"fas fa-arrow-left\" style={{color: 'black', fontSize: '2rem'}}></i>}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id} interval={5000}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        {product.name} ({product.price})\r\n                    </Carousel.Caption> \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//TODO: Actions\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport {getTopTVs} from '../redux/actions/tvActions';\r\nimport {getTopPhones} from '../redux/actions/phoneActions';\r\nimport {getTopHeadphone} from '../redux/actions/headphoneActions';\r\nimport {getTopGames} from '../redux/actions/gameActions';\r\nimport {getWishList} from '../redux/actions/wishListActions';\r\nimport {getAllItemsCart} from '../redux/actions/cartActions';\r\n\r\n//TODO: Components\r\nimport TopProduct from '../components/TopProduct (Home)/TopProduct';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n    const { topTV, loading: topTVLoading } = useSelector(state => state.topTVs);\r\n    const { topPhones, loading: topPhonesLoading } = useSelector(state => state.topPhones);\r\n    const { topHeadphone, loading: topHeadphoneLoading } = useSelector(state => state.topHeadphone);\r\n    const { topGames, loading: topGamesLoading } = useSelector(state => state.topGames);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { cartItems } = useSelector(state => state.cartList);\r\n    const { success: addItemToWishListSuccess} = useSelector(state => state.addItemToWishList);\r\n    const { success: removeItemFromWishListSuccess} = useSelector(state => state.removeItemFromWishList);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get carousel products for the first time \r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top laptops for the first time \r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top tvs for the first time \r\n        if (topTV.length === 0) {\r\n            dispatch(getTopTVs());\r\n        }\r\n    }, [dispatch, topTV]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-phone for the first time\r\n        if (topPhones.length === 0) {\r\n            dispatch(getTopPhones());\r\n        }\r\n    }, [dispatch, topPhones]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-headphone for the first time\r\n        if (topHeadphone.length === 0) {\r\n            dispatch(getTopHeadphone());\r\n        }\r\n    }, [dispatch, topHeadphone]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-games for the first time\r\n        if (topGames.length === 0) {\r\n            dispatch(getTopGames());\r\n        }\r\n    }, [dispatch, topGames]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch Wishlist for the first time if needed\r\n        if (wishList.length === 0 || addItemToWishListSuccess || removeItemFromWishListSuccess) {\r\n            dispatch(getWishList());\r\n        } \r\n    }, [dispatch, addItemToWishListSuccess, removeItemFromWishListSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                    <Helmet title=\"Proshop | Electronics \" href=\"/\" />\r\n                \r\n                    <CarouselSection \r\n                        carouselProducts={carouselProducts} \r\n                        loading={carouselLoading} \r\n                        error={carouselError} \r\n                    />\r\n\r\n                    {\r\n                        topLaptops.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topLaptopLoading} \r\n                                itemArray={topLaptops} \r\n                                title=\"Our Top Tier MSI Laptops\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/laptops\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topTV.length !== 0 ? (      \r\n                            <TopProduct \r\n                                loading={topTVLoading} \r\n                                itemArray={topTV} \r\n                                title=\"Best TVs for 2020\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/tvs\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topPhones.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topPhonesLoading}\r\n                                itemArray={topPhones}\r\n                                title=\"New Phones 2020\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/phones\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topHeadphone.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topHeadphoneLoading}\r\n                                itemArray={topHeadphone}\r\n                                title=\"Great Headphones for You\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/headphones\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n\r\n                    {\r\n                        topGames.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topGamesLoading}\r\n                                itemArray={topGames}\r\n                                title=\"For Game Lovers\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/gaming\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_TVS_REQUEST\r\n        });\r\n\r\n        const {data} = await axios.get('/api/products/tvs/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_TVS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/tvs');\r\n\r\n        dispatch({\r\n            type: GET_ALL_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL,\r\n\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopHeadphone = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllHeadPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n        });\r\n    }\r\n}\r\n\r\n","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games');\r\n\r\n        dispatch({\r\n            type: GET_ALL_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image}) => {\r\n    return (\r\n        <Col md={8}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description} = props;\r\n\r\n    return (\r\n        <Col md={12}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SET_A_REVIEW_AS_AGREE_RESET } from '../../../redux/actions/actionTypes';\r\nimport { stickAReviewAsAgree } from '../../../redux/actions/userActions';\r\nimport styled from 'styled-components';\r\n\r\nconst AgreeTextContainer = styled.div`\r\npadding: 0px 10px;\r\nborder: none;\r\nmargin-left: 1rem;\r\nmargin-right: 1rem;\r\nbackground-color:  #f1f1f1;\r\ncursor: pointer;\r\nfont-weight: 700;\r\ncolor: ${props => props.isAgreeded ? \"green\" : \"black\"};\r\n\r\n@media (max-width: 420px) {\r\n    margin-left: 0rem;\r\n    margin-top: 0.5rem;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    width: 40%;\r\n}\r\n`;\r\n\r\nconst AgreeText = ({ numOfAgrees, useAgreeOrDisAgreeArray, reviewID, productID }) => {\r\n    const dispatch = useDispatch();\r\n    const [isAgreeded, setIsAgreeded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < useAgreeOrDisAgreeArray.length; i++) {\r\n            if (useAgreeOrDisAgreeArray[i].reviewId == reviewID && useAgreeOrDisAgreeArray[i].agree) {\r\n                setIsAgreeded(true);\r\n            }\r\n        }\r\n    }, [useAgreeOrDisAgreeArray, reviewID]);\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: SET_A_REVIEW_AS_AGREE_RESET });\r\n        dispatch(stickAReviewAsAgree(productID, reviewID));\r\n    }\r\n\r\n    return (\r\n        <AgreeTextContainer isAgreeded={isAgreeded} onClick={(e) => onClickHandler(e)}>\r\n            Yes . <span>{numOfAgrees}</span>\r\n        </AgreeTextContainer>\r\n    )\r\n}\r\n\r\nexport default AgreeText;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {stickAReviewAsDisAgree} from '../../../redux/actions/userActions';\r\nimport { SET_A_REVIEW_AS_DISAGREE_RESET } from '../../../redux/actions/actionTypes';\r\nimport styled from 'styled-components';\r\n\r\nconst DisAgreeTextContainer = styled.div`\r\npadding: 0px 10px;\r\nborder: none;\r\nmargin-left: 1rem;\r\nmargin-right: 1rem;\r\ncursor: pointer;\r\nbackground-color:  #f1f1f1;\r\nfont-weight: 700;\r\ncolor: ${props => props.isDisAgreeded ? \"red\" : \"black\"};\r\n\r\n@media (max-width: 420px) {\r\n    margin-left: 0rem;\r\n    margin-top: 1rem;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    width: 40%;\r\n}\r\n`;\r\n\r\nconst DisAgreeText = ({ numOfDisAgrees, useAgreeOrDisAgreeArray, reviewID, productID }) => {\r\n    const dispatch = useDispatch();\r\n    const [isDisAgreeded, setIsDisAgreeded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < useAgreeOrDisAgreeArray.length; i++) {\r\n            if (useAgreeOrDisAgreeArray[i].reviewId == reviewID && !useAgreeOrDisAgreeArray[i].agree) {\r\n                setIsDisAgreeded(true);\r\n            }\r\n        }\r\n    }, [useAgreeOrDisAgreeArray, reviewID]);\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: SET_A_REVIEW_AS_DISAGREE_RESET });\r\n        dispatch(stickAReviewAsDisAgree(productID, reviewID));\r\n    }\r\n\r\n    return (\r\n        <DisAgreeTextContainer isDisAgreeded={isDisAgreeded} onClick={(e) => onClickHandler(e)}>\r\n            No . <span>{numOfDisAgrees}</span>\r\n        </DisAgreeTextContainer>\r\n    )\r\n}\r\n\r\nexport default DisAgreeText;","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Form, Button, ListGroup, ProgressBar, Pagination, NavDropdown  } from 'react-bootstrap';\r\nimport { createReview, deleteReview, getCurrentUserStatus } from '../../redux/actions/userActions';\r\nimport { getSetOfReviewsOfCurrentProductBasedOnPageNumber } from '../../redux/actions/productActions';\r\nimport { \r\n    CREATE_REVIEW_RESET, \r\n    DELETE_REVIEW_RESET, \r\n    GET_SET_REVIEWS_RESET\r\n} from '../../redux/actions/actionTypes';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../Message';\r\nimport Rating from '../../components/Rating';\r\nimport AgreeText from './AgreeOrDisAgree/AgreeText';\r\nimport DisAgreeTextContainer from './AgreeOrDisAgree/DisAgreeText';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ReviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 1.2rem;\r\n    font-weight: 800;\r\n`;\r\n\r\nconst NoReviewText = styled.div`\r\n    font-size: 1.5rem;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ReviewOverallContainer = styled.div`\r\n    display: flex;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst RatingOverallText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst ReviewOverallProgressBarContainer = styled.div`\r\n    margin-top: 10px;\r\n    display: flex;\r\n`;\r\n\r\nconst FilterBar = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 2rem;\r\n    margin-bottom: 1rem;\r\n    padding-left: 1rem;\r\n    background-color: #f1f1f1;\r\n`;\r\n\r\nconst AgreeContainer = styled.div`\r\n    display: flex;\r\n\r\n    @media (max-width: 420px) {\r\n        display: initial;\r\n    }\r\n`;\r\n\r\n\r\nconst ReviewSection = ({ singleProduct, user, userReviewError, deleteReviewError }) => {\r\n    const dispatch = useDispatch();\r\n    const { currentReviews, setAgreeSuccess ,setDisAgreeSuccess, pages, page, success } = useSelector(state => state.setOfReviews);\r\n    const { userStatus } = useSelector(state => state.currentUserStatus);\r\n\r\n    //TODO: LOAD A REVIEW FOR A FIRST-TIME\r\n    const [firsttime, setFirstTime] = useState(true);\r\n\r\n    //TODO: TO POST A RATING\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    //TODO: TO CALCULATE INFO FOR PROGRESS BAR\r\n    const [numOf5StarsReviews, setNumOf5StarReviews] = useState(0);\r\n    const [numOf4StarsReviews, setNumOf4StarReviews] = useState(0);\r\n    const [numOf3StarsReviews, setNumOf3StarReviews] = useState(0);\r\n    const [numOf2StarsReviews, setNumOf2StarReviews] = useState(0);\r\n    const [numOf1StarsReviews, setNumOf1StarReviews] = useState(0);\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        if (rating == 0 || comment == '') {\r\n\r\n        }\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const onDeleteReviewHandler = (e, reviewId) => {\r\n        e.preventDefault();\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(deleteReview(singleProduct._id, reviewId));\r\n    }\r\n\r\n    const getNextSetOfReviews = (e, nextPages) => {\r\n        e.preventDefault();\r\n        dispatch({ type: GET_SET_REVIEWS_RESET });\r\n        dispatch(getSetOfReviewsOfCurrentProductBasedOnPageNumber(singleProduct._id, nextPages));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNumOf5StarReviews(Math.ceil((singleProduct.numOf5StarsReviews/singleProduct.numReviews)*100));\r\n        setNumOf4StarReviews(Math.ceil((singleProduct.numOf4StarsReviews/singleProduct.numReviews)*100));\r\n        setNumOf3StarReviews(Math.ceil((singleProduct.numOf3StarsReviews/singleProduct.numReviews)*100));\r\n        setNumOf2StarReviews(Math.ceil((singleProduct.numOf2StarsReviews/singleProduct.numReviews)*100));\r\n        setNumOf1StarReviews(Math.ceil((singleProduct.numOf1StarsReviews/singleProduct.numReviews)*100));\r\n\r\n        if (firsttime) {\r\n            dispatch(getSetOfReviewsOfCurrentProductBasedOnPageNumber(singleProduct._id, 1));\r\n            setFirstTime(false);\r\n        }\r\n        if (!userStatus) {\r\n            dispatch(getCurrentUserStatus());\r\n        }\r\n    }, [dispatch, singleProduct, success]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrentUserStatus());\r\n        // Adding an action to get that just clicked reviews to update it indepentdently\r\n        // Or find a way to get that set of reviews again after update it\r\n        dispatch(getSetOfReviewsOfCurrentProductBasedOnPageNumber(singleProduct._id, page));\r\n    }, [dispatch, setAgreeSuccess, setDisAgreeSuccess]);\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews :</h2>\r\n                <ReviewOverallContainer>\r\n                    <RatingOverallText> Rating SnapShot </RatingOverallText>\r\n                    <ReviewOverallProgressBarContainer>\r\n                        5 <i className=\"fas fa-star\" style={{ marginRight: '1rem', marginLeft: '0.5rem' }}></i> \r\n                        <ProgressBar variant={\"progresss-bar-css\"} now={numOf5StarsReviews} label style={{width: '100%', marginRight: '10px'}} />\r\n                        { singleProduct.numOf5StarsReviews }\r\n                    </ReviewOverallProgressBarContainer>\r\n                    <ReviewOverallProgressBarContainer>\r\n                        4 <i className=\"fas fa-star\" style={{ marginRight: '1rem', marginLeft: '0.5rem' }}></i> \r\n                        <ProgressBar variant={\"progresss-bar-css\"} now={numOf4StarsReviews} label style={{width: '100%', marginRight: '10px'}} />\r\n                        { singleProduct.numOf4StarsReviews }\r\n                    </ReviewOverallProgressBarContainer>\r\n                    <ReviewOverallProgressBarContainer>\r\n                        3 <i className=\"fas fa-star\" style={{ marginRight: '1rem', marginLeft: '0.5rem' }}></i> \r\n                        <ProgressBar variant={\"progresss-bar-css\"} now={numOf3StarsReviews} label style={{width: '100%', marginRight: '10px'}} />\r\n                        { singleProduct.numOf3StarsReviews }\r\n                    </ReviewOverallProgressBarContainer>\r\n                    <ReviewOverallProgressBarContainer>\r\n                        2 <i className=\"fas fa-star\" style={{ marginRight: '1rem', marginLeft: '0.5rem' }}></i> \r\n                        <ProgressBar variant={\"progresss-bar-css\"} now={numOf2StarsReviews} label style={{width: '100%', marginRight: '10px'}} />\r\n                        { singleProduct.numOf2StarsReviews }\r\n                    </ReviewOverallProgressBarContainer>\r\n                    <ReviewOverallProgressBarContainer>\r\n                        1 <i className=\"fas fa-star\" style={{ marginRight: '1rem', marginLeft: '0.5rem' }}></i> \r\n                        <ProgressBar variant={\"progresss-bar-css\"} now={numOf1StarsReviews} label style={{width: '100%', marginRight: '10px'}} />\r\n                        { singleProduct.numOf1StarsReviews }\r\n                    </ReviewOverallProgressBarContainer>\r\n                </ReviewOverallContainer>\r\n                {\r\n                    deleteReviewError ? (\r\n                        <Message content=\"Delete Review Failed, Please Try Again :(\" variant=\"danger\" />\r\n                    ) : null\r\n                }\r\n                <FilterBar>\r\n                    <div>\r\n                        {pages*5 > singleProduct.numReviews ? singleProduct.numReviews : pages*5 } of {singleProduct.numReviews} Reviews\r\n                    </div>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <NavDropdown title=\"Filter\" id=\"nav-dropdown\" style={{marginRight: '0rem'}}>\r\n                            <NavDropdown.Item>Highest To Lowest Rating</NavDropdown.Item>\r\n                            <NavDropdown.Item>Lowest To Highest Rating</NavDropdown.Item>\r\n                            <NavDropdown.Item>Most Agree</NavDropdown.Item>\r\n                            <NavDropdown.Item>Most Disagree</NavDropdown.Item>\r\n                            <NavDropdown.Item>Most Recent</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </div>\r\n                </FilterBar>\r\n                { currentReviews.length == 0 ? (\r\n                    <>\r\n                        <NoReviewText>\r\n                            No Reviews \r\n                        </NoReviewText>\r\n                        { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <NoReviewText>\r\n                                    You need to <Link to=\"/login\" style={{ textDecoration: 'underline' }}> sign in </Link> to post a review\r\n                                </NoReviewText>\r\n                            )}\r\n                    </>\r\n                    ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { currentReviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <ReviewContainer>\r\n                                    <strong>{review.name}</strong>\r\n                                    \r\n                                    { user._id == review.user ? (\r\n                                        <i \r\n                                        className=\"fas fa-trash\" \r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onClick={(e) => onDeleteReviewHandler(e, review._id)}></i>\r\n                                    ) : null\r\n                                    }\r\n                                </ReviewContainer>\r\n\r\n                                <Rating rating={review.rating} />\r\n                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                <p>{ review.comment }</p>\r\n\r\n                                <AgreeContainer>\r\n                                        Helpful ? \r\n\r\n                                        {\r\n                                            userStatus ? (\r\n                                                <AgreeText \r\n                                                    numOfAgrees={review.numOfAgrees}\r\n                                                    useAgreeOrDisAgreeArray={userStatus.agreeAndDisAgree}\r\n                                                    reviewID={review._id}\r\n                                                    productID={singleProduct._id}\r\n                                                />\r\n                                            ) : null\r\n                                        }\r\n                                        {\r\n                                            userStatus ? (\r\n                                                <DisAgreeTextContainer \r\n                                                    numOfDisAgrees={review.numOfDisAgrees}\r\n                                                    useAgreeOrDisAgreeArray={userStatus.agreeAndDisAgree}\r\n                                                    reviewID={review._id}\r\n                                                    productID={singleProduct._id}\r\n                                                />\r\n                                            ) : null\r\n                                        }\r\n                                </AgreeContainer>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        {\r\n                            pages === 1 ? null : (\r\n                                <Pagination>\r\n                                    { \r\n                                        Array.from(Array(pages), (e , i) => {\r\n                                            return(<Pagination.Item key={i} onClick={(e) => getNextSetOfReviews(e, i+1)}>{i+1}</Pagination.Item>)\r\n                                        })\r\n                                    }\r\n                                </Pagination>\r\n                            )\r\n                        }\r\n                        <ListGroup.Item>\r\n                            <h2>Post A Review</h2>\r\n                            {userReviewError ? (\r\n                                <Message \r\n                                    variant=\"danger\" \r\n                                    content={ userReviewError === 'User has already review this product'\r\n                                        ? userReviewError :\"Please fill in comment and rating\" }/>\r\n                            ) : null}\r\n                            { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value={1}>1 - Awful</option>\r\n                                                <option value={2}>2 - Bad</option>\r\n                                                <option value={3}>3 - Okay</option>\r\n                                                <option value={4}>4 - Good</option>\r\n                                                <option value={5}>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReviewSection\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst LapTopTable = (props) => {\r\n    const laptopInfo = props.singleLaptop.details;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Display Size (inches)</td>\r\n                      <td>{laptopInfo.displaySizeInches}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (Pixels)</td>\r\n                      <td>{laptopInfo.resolutionPixels}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{laptopInfo.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Display type</td>\r\n                      <td>{laptopInfo.displayType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Type</td>\r\n                      <td>{laptopInfo.proccessorType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Cores</td>\r\n                      <td>{laptopInfo.proccessorCores}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Memory Cache</td>\r\n                      <td>{laptopInfo.processorMemoryCache}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorMaxClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Graphics processor</td>\r\n                      <td>{laptopInfo.graphicsProcessor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>RAM (GB)</td>\r\n                      <td>{laptopInfo.ram}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>SSD Storage</td>\r\n                      <td>{laptopInfo.ssdStorage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB 2.0 Ports</td>\r\n                      <td>{laptopInfo.usbTwoPointOPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB C Ports</td>\r\n                      <td>{laptopInfo.usbCPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Card Reader</td>\r\n                      <td>{laptopInfo.cardReader}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Web Cam</td>\r\n                      <td>{laptopInfo.webCam}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{laptopInfo.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Operating system</td>\r\n                      <td>{laptopInfo.operatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{laptopInfo.manufacturersWarantty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LapTopTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst TVTable = (props) => {\r\n    const TVDetail = props.tvsDetail; \r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Screen Size (inches)</td>\r\n                      <td>{TVDetail.screenSizes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Type</td>\r\n                      <td>{TVDetail.screenType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{TVDetail.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (pixels)</td>\r\n                      <td>{TVDetail.resolutionInPixel}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Refresh Rate</td>\r\n                      <td>{TVDetail.refreshRate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wifi</td>\r\n                      <td>{TVDetail.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB Ports</td>\r\n                      <td>{TVDetail.usbPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Height x Width x Depth</td>\r\n                      <td>{TVDetail.sizeHeightWidthDepth}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Warranty</td>\r\n                      <td>{TVDetail.warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TVTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst PhoneTable = (props) => {\r\n    const phoneInfo = props.singlePhone.phoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Operating System</td>\r\n                      <td>{phoneInfo.phoneOperatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Network Compability</td>\r\n                      <td>{phoneInfo.networkCompability}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dual Sim</td>\r\n                      <td>{phoneInfo.DualSim}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{phoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Devices Screen</td>\r\n                      <td>{phoneInfo.DeviceScreen}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution</td>\r\n                      <td>{phoneInfo.Resolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Internal Memory</td>\r\n                      <td>{phoneInfo.InternalMemory}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Front Camera</td>\r\n                      <td>{phoneInfo.FrontCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rear Camera</td>\r\n                      <td>{phoneInfo.RearCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor</td>\r\n                      <td>{phoneInfo.Processor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{phoneInfo.Wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{phoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PhoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst HeadphoneTable = (props) => {\r\n    const headphoneInfo = props.singleHeadphonePhone.headphoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Headphone Type</td>\r\n                      <td>{headphoneInfo.HeadphoneType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{headphoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Voice Control</td>\r\n                      <td>{headphoneInfo.VoiceControl}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Noise Reduction Type</td>\r\n                      <td>{headphoneInfo.NoiseReductionType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Built-In Microphone</td>\r\n                      <td>{headphoneInfo.BuiltInMicrophone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{headphoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default HeadphoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst GameTable = (props) => {\r\n    const gameInfo = props.singleGame.gameDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Platform</td>\r\n                      <td>{gameInfo.Platform}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Gaming Gerne</td>\r\n                      <td>{gameInfo.GamingGerne}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rating</td>\r\n                      <td>{gameInfo.Rating}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Consumer Advice</td>\r\n                      <td>{gameInfo.ConsumerAdvice}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Developer</td>\r\n                      <td>{gameInfo.GameDeveloper}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Publisher</td>\r\n                      <td>{gameInfo.GamePublisher}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default GameTable;\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport ReviewSection from '../components/ReviewSection/ReviewSection';\r\nimport Loading from '../components/Loading';\r\nimport Helmet from '../components/Helmet';\r\nimport LapTopTable from '../components/ProductDetail/LaptopTable/LapTopTable';\r\nimport TVTable from '../components/ProductDetail/TvTable/TVTable';\r\nimport PhoneTable from '../components/ProductDetail/PhoneTable/PhoneTable';\r\nimport HeadphoneTable from '../components/ProductDetail/HeadphoneTable/HeadphoneTable';\r\nimport GameTable from '../components/ProductDetail/GameTable/GameTable';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const {success: deleteReviewSuccess, error:  deleteReviewError } = useSelector(state => state.deleteReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess, deleteReviewSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />                            \r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                        </Row>\r\n                        {\r\n                            singleProduct.details.proccessorCores ? (\r\n                                <LapTopTable singleLaptop={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.tvsDetail.sizeHeightWidthDepth ? (\r\n                                <TVTable tvsDetail={singleProduct.tvsDetail} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.phoneDetail.DualSim ? (\r\n                                <PhoneTable singlePhone={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.headphoneDetail.HeadphoneType ? (\r\n                                <HeadphoneTable singleHeadphonePhone={singleProduct} />\r\n                            ) : null\r\n                        }                        \r\n                        {\r\n                            singleProduct.gameDetail.Platform ? (\r\n                                <GameTable singleGame={singleProduct} />\r\n                            ) : null\r\n                        }\r\n\r\n                        <ReviewSection \r\n                            singleProduct={singleProduct} \r\n                            user={user} \r\n                            userReviewError={userReviewError} \r\n                            deleteReviewError={deleteReviewError} \r\n                        />\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeItemFromCart, getAllItemsCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\nimport styled from 'styled-components';\r\n\r\n//TODO: CART CARD \r\nconst CartCardItem = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    border: 1px solid grey;\r\n    margin-bottom: 1rem;\r\n    padding: 1rem; \r\n\r\n    @media (max-width: 1050px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst CardImageContainer = styled.div`\r\n    width: 40%;\r\n\r\n    @media (max-width: 550px) {\r\n        width: 60%;\r\n    }\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n    width: 100%;\r\n`;\r\n\r\nconst CardInfoContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardBottomContainer = styled.div`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst CardTextContainer = styled.div`\r\n    display: flex;\r\n    margin-left: 15px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CardProductName = styled.div`\r\n    font-size: 1rem;\r\n\r\n    @media (max-width: 400px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\nconst CardProductPrice = styled.div`\r\n    font-family: Rokkitt;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nconst RemoveButton = styled.a`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n`;\r\n//TODO: END OF CARD CART /////////////////////////////////\r\n\r\nconst CartTitle = styled.div`\r\n    font-family: Rokkitt;\r\n    text-align: center;\r\n    font-size: 3rem;\r\n\r\n    @media (max-width: 500px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst CartEmptyText = styled.div`\r\n    font-size: 2.5rem;\r\n    font-family: Rokkitt;\r\n    color: black;\r\n    text-align: center;\r\n    margin-top: 2rem;\r\n`;\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const dispatch = useDispatch();\r\n    const { cartItems } = useSelector(state => state.cartList);\r\n    const { success: removeCartItemSuccess } = useSelector(state => state.removeCart);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllItemsCart());\r\n    }, [dispatch, removeCartItemSuccess]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <CartTitle>Shopping Cart</CartTitle>\r\n                {cartItems.length === 0 ? <CartEmptyText>Your Cart is empty ! <Link to=\"/\" style={{ textDecoration: 'underline' }}>Go Back</Link></CartEmptyText> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <CartCardItem key={item._id}>\r\n                                <CardImageContainer>\r\n                                    <CardImage src={item.productImage} alt={item.productName} fluid rounded/>\r\n                                </CardImageContainer>\r\n                                    \r\n                                <CardInfoContainer>\r\n                                    <CardTextContainer>\r\n                                        <CardProductName>\r\n                                            <Link to={`/product/${item.itemId}`}>{item.productName}</Link>\r\n                                        </CardProductName>\r\n\r\n                                        <CardBottomContainer>\r\n                                            <CardProductPrice>\r\n                                                ${item.productPrice}\r\n                                            </CardProductPrice>\r\n\r\n                                            <RemoveButton onClick={() => removeFromCartHandler(item.itemId)}>\r\n                                                Remove                                        \r\n                                            </RemoveButton>\r\n                                        </CardBottomContainer>\r\n                                    </CardTextContainer>\r\n                                </CardInfoContainer>\r\n                            </CartCardItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.quantity, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.quantity*item.productPrice, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/product`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useEffect} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst SearchScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading } = productsList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                { !loading ? products.length > 0 ? products.map((product) => {\r\n                     return(\r\n                         <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                            <Product product={product}/>\r\n                         </Col>\r\n                     );\r\n                 }) : (\r\n                     <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                 ) : <Loading /> \r\n                }\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTVs } from '../redux/actions/tvActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst TVScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { tvs, loading, error } = useSelector(state => state.allTVs);\r\n    \r\n    useEffect(() => {\r\n        if (tvs.length === 0) {\r\n            dispatch(getAllTVs());\r\n        }\r\n    }, [dispatch, tvs]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"TVs | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : tvs.map((tv) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                        <Product product={tv} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TVScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPhones } from '../redux/actions/phoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PhonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allPhones, loading, error } = useSelector(state => state.allPhones);\r\n    \r\n    useEffect(() => {\r\n        if (allPhones.length === 0) {\r\n            dispatch(getAllPhones());\r\n        }\r\n    }, [dispatch, allPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Phones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allPhones.map((phone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={phone._id}>\r\n                        <Product product={phone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PhonesScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllHeadPhones } from '../redux/actions/headphoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HeadphonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { headPhones, loading, error } = useSelector(state => state.allHeadphone);\r\n    \r\n    useEffect(() => {\r\n        if (headPhones.length === 0) {\r\n            dispatch(getAllHeadPhones());\r\n        }\r\n    }, [dispatch, headPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Headphones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : headPhones.map((headphone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={headphone._id}>\r\n                        <Product product={headphone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HeadphonesScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllGames} from '../redux/actions/gameActions';\r\n\r\nconst GamesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allGames, loading, error } = useSelector(state => state.allGames);\r\n    \r\n    useEffect(() => {\r\n        if (allGames.length === 0) {\r\n            dispatch(getAllGames());\r\n        }\r\n    }, [dispatch, allGames]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Gaming | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allGames.map((game) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={game._id}>\r\n                            <Product product={game} link={`/product`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GamesScreen;","import React, {useState, useEffect} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItemToCart} from '../../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../../redux/actions/actionTypes';\r\n\r\nimport Rating from '../Rating';\r\nimport Message from '../Message';\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    padding-top: 1rem;\r\n    font-family: 'Luckiest Guy', cursive;\r\n\r\n    @media (max-width: 400px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst FootProductContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 400px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 400px) {\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst WishListProduct = ({ product }) => {\r\n    const [isLoved, setIsLoved] = useState(true);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartItems, addItemSuccess } = useSelector(state => state.cart);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product.itemId) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    const onAddItemToCartHandler = (e, id) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n        dispatch(addItemToCart(id, 1));\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n        if (addItemToWishListSuccess) {\r\n            setIsLoved(true);\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        dispatch(removeAnItemFromWishList(wishListID));\r\n        setIsLoved(false);\r\n    }\r\n\r\n    \r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product.itemId}`}>\r\n                <Card.Img src={product.productImage} variant=\"top\"/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product.itemId}`}>\r\n                    <Card.Title as=\"div\">\r\n                        {product.productName}\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.productRating} \r\n                        text={`${product.productNumReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                {\r\n                    addItemSuccess && (cartItems[cartItems.length-1].product === product._id) ? (\r\n                    <div style={{marginTop: '1rem'}}>\r\n                        <Message variant=\"success\" content=\"Add Item To Cart Successfully\" /> \r\n                    </div>\r\n                    ): null\r\n                }\r\n                <FootProductContainer>\r\n                    <CardMoneyText>\r\n                        $ {product.productPrice}\r\n                    </CardMoneyText>\r\n\r\n                    <ButtonContainer>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => onAddItemToCartHandler(e, product._id)}></i>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </ButtonContainer>\r\n                </FootProductContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WishListProduct;\r\n","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItemToCart} from '../../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../../redux/actions/actionTypes';\r\n\r\nimport Message from '../Message';\r\n\r\nconst Card = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    border: 1px solid grey;\r\n    padding: 10px;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst CardTopSectionContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst CardImageContainer = styled.div`\r\n    width: 40%;\r\n    height: 100%;\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst CartTextContainer = styled.div`\r\n    width: 60%;\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n\r\n    @media (min-width: 450px) {\r\n        margin-top: 10px;\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    @media (min-width: 600px) {\r\n        margin-top: 10px;\r\n        font-size: 1rem;\r\n        align-self: center;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        font-size: 1.5rem;\r\n    }\r\n`;\r\n\r\nconst CardBototmContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    font-family: 'Luckiest Guy', cursive;\r\n`;\r\n\r\nconst CardButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WishListProductHorizontal = ({ product }) => {\r\n    const [isLoved, setIsLoved] = useState(true);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartItems, addItemSuccess } = useSelector(state => state.cart);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product.itemId) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    const onAddItemToCartHandler = (e, id) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n        dispatch(addItemToCart(id, 1));\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n        if (addItemToWishListSuccess) {\r\n            setIsLoved(true);\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        dispatch(removeAnItemFromWishList(wishListID));\r\n        setIsLoved(false);\r\n    }\r\n\r\n    return(\r\n        <Card>\r\n            <Link to={`/product/${product.itemId}`}> \r\n            <CardTopSectionContainer>\r\n                <CardImageContainer>\r\n                    <img src={product.productImage} alt={product.productName} style={{ width: '100%' }}/>\r\n                </CardImageContainer>\r\n                <CartTextContainer>\r\n                    {product.productName}\r\n                </CartTextContainer>\r\n            </CardTopSectionContainer>\r\n            </Link>\r\n            <CardBototmContainer>\r\n                <CardMoneyText>\r\n                    $ {product.productPrice}\r\n                </CardMoneyText>\r\n                <CardButtonContainer>\r\n                    <div>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => onAddItemToCartHandler(e, product._id)}></i>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </CardButtonContainer>\r\n            </CardBototmContainer>\r\n            {\r\n                addItemSuccess && (cartItems[cartItems.length-1].product === product._id) ? (\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <Message variant=\"success\" content=\"Add Item To Cart Successfully\" /> \r\n                </div>\r\n                ): null\r\n            }\r\n        </Card>\r\n    )\r\n} \r\n\r\nexport default WishListProductHorizontal;","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport {getWishList, removeAllItemsFromWishList} from '../redux/actions/wishListActions';\r\nimport {REMOVE_ALL_ITEMS_WISHLIST_RESET} from '../redux/actions/actionTypes';\r\nimport WishListProduct from '../components/WishList Product/WishListProduct';\r\nimport WishListProductHorizontal from '../components/WishList Product/WishListProductHorizontal';\r\nimport styled from 'styled-components';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst DisplayContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst DisplayButtonContainer = styled.div`\r\n    border: 1px solid black;\r\n    margin-left: 1rem;\r\n    margin-rigth: 1rem;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ClearWishListButton = styled.button`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    padding: 10px;\r\n    border: none;\r\n\r\n    @media (max-width: 350px) {\r\n        padding: 8px;\r\n        font-size: 0.7rem;\r\n    }\r\n`;\r\n\r\nconst WishListText = styled.div`\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    color: black;\r\n    font-family: Rokkitt;\r\n\r\n`;\r\n\r\nconst NoItemText = styled.div`\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    font-family: Rokkitt;\r\n    margin-top: 3rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst WishListScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [showGrid, setShowGrid] = useState(true);\r\n    const { user } = useSelector(state => state.user);\r\n    const { wishList, loading, error } = useSelector(state => state.wishList)\r\n    const { success: removeItemFromWishListSuccess } = useSelector(state => state.removeItemFromWishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n    const { success: removeAllItemsFromWishListSuccess } = useSelector(state => state.removeAllItemsFromWishList);\r\n\r\n    const swapToShowGridMode = (e) => {\r\n        e.preventDefault();\r\n        setShowGrid(true);\r\n    }\r\n\r\n    const swapToShowListMode = (e) => {\r\n        e.preventDefault();\r\n        setShowGrid(false);\r\n    }\r\n\r\n    const clearWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ALL_ITEMS_WISHLIST_RESET });\r\n        dispatch(removeAllItemsFromWishList());\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getWishList());\r\n    }, [dispatch, removeItemFromWishListSuccess, addItemToWishListSuccess, removeAllItemsFromWishListSuccess]);\r\n\r\n    return (\r\n        <div>\r\n            <WishListText> Wish List </WishListText>\r\n            <FlexContainer>\r\n                <ClearWishListButton onClick={(e) => clearWishList(e)} style={{ visibility: wishList.length===0 ? 'hidden' : 'initial' }}>Clear Wish List</ClearWishListButton>\r\n                <DisplayContainer>\r\n                    <DisplayButtonContainer onClick={(e) => swapToShowGridMode(e)}>\r\n                        <i className=\"fas fa-th-large\"></i>\r\n                    </DisplayButtonContainer>\r\n                    <DisplayButtonContainer onClick={(e) => swapToShowListMode(e)}>\r\n                        <i className=\"fas fa-list\"></i>\r\n                    </DisplayButtonContainer>\r\n                </DisplayContainer>\r\n            </FlexContainer>\r\n            <Row style={{ \r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                flexDirection: showGrid ? 'initial' : 'column',\r\n                transition: 'all .5s'}}>\r\n                {\r\n                    wishList.length !== 0 ? wishList.map((item) => {\r\n                        if (showGrid) {\r\n                            return(\r\n                                <Col key={item._id}>\r\n                                    <WishListProduct product={item} /> \r\n                                </Col>\r\n                            )\r\n                        } else {\r\n                            return(\r\n                                <Col key={item._id}>\r\n                                    <WishListProductHorizontal product={item} />\r\n                                </Col>\r\n                            )\r\n                        }\r\n                    }) : (\r\n                        <NoItemText>You Have No Items</NoItemText>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WishListScreen\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport TVScreen from './screens/TVScreen';\nimport PhonesScreen from './screens/phonesScreen';\nimport HeadphonesScreen from './screens/HeadphoneScreen';\nimport GamesScreen from './screens/GamesScreen';\nimport WishListScreen from './screens/WishListScreen';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport styled from 'styled-components';\n\nconst MarginContainer = styled.div`\nmargin-top: 0%;  \nmargin-left: 5%;\nmargin-right: 5%;\npadding-left: 2%;\npadding-right: 2%;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n        <Header/>\n        <SubNavbar />\n      <main className='py-3'>\n        <MarginContainer>  \n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/tvs\" component={TVScreen} exact />\n          <Route path=\"/phones\" component={PhonesScreen} exact />\n          <Route path=\"/headphones\" component={HeadphonesScreen} exact />\n          <Route path=\"/gaming\" component={GamesScreen} exact />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/wishlist\" component={WishListScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={SearchScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </MarginContainer>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL,\r\n    GET_SET_REVIEWS_PENDING,\r\n    GET_SET_REVIEWS_SUCCESS,\r\n    GET_SET_REVIEWS_FAIL,\r\n    GET_SET_REVIEWS_RESET,\r\n\r\n    SET_A_REVIEW_AS_AGREE_PENDING,\r\n    SET_A_REVIEW_AS_AGREE_SUCCESS,\r\n    SET_A_REVIEW_AS_AGREE_FAIL,\r\n    SET_A_REVIEW_AS_AGREE_RESET,\r\n\r\n    SET_A_REVIEW_AS_DISAGREE_PENDING,\r\n    SET_A_REVIEW_AS_DISAGREE_SUCCESS,\r\n    SET_A_REVIEW_AS_DISAGREE_FAIL,\r\n    SET_A_REVIEW_AS_DISAGREE_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} \r\n\r\nconst setReviewsInitialState = {\r\n    currentReviews: [],\r\n    setAgreeSuccess: false,\r\n    setAgreeError: null,\r\n    setDisAgreeSuccess: false,\r\n    setDisAgreeError: null,\r\n    page: null,\r\n    pages: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const setReviewsReducer = (state = setReviewsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_SET_REVIEWS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case GET_SET_REVIEWS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                currentReviews: [...action.payload.setOfReviews],\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n        case GET_SET_REVIEWS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_SET_REVIEWS_RESET:\r\n            return {\r\n                currentReviews: [],\r\n                page: null,\r\n                pages: null,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        case SET_A_REVIEW_AS_AGREE_PENDING: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_A_REVIEW_AS_AGREE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                setAgreeSuccess: true\r\n            }\r\n        case SET_A_REVIEW_AS_AGREE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                setAgreeError: action.payload\r\n            }\r\n        case SET_A_REVIEW_AS_AGREE_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                setAgreeError: null,\r\n                setAgreeSuccess: false\r\n            }\r\n        case SET_A_REVIEW_AS_DISAGREE_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_A_REVIEW_AS_DISAGREE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                setDisAgreeSuccess: true\r\n            }\r\n        case SET_A_REVIEW_AS_DISAGREE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                setDisAgreeError: action.payload\r\n            }\r\n        case SET_A_REVIEW_AS_DISAGREE_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                setDisAgreeSuccess: false,\r\n                setDisAgreeError: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    ADD_PRODUCT_TO_CART_SUCCESS,\r\n    ADD_PRODUCT_TO_CART_FAIL,\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    \r\n    REMOVE_PRODUCT_FROM_CART_REQUEST,\r\n    REMOVE_PRODUCT_FROM_CART_SUCCESS,\r\n    REMOVE_PRODUCT_FROM_CART_FAIL,\r\n    REMOVE_PRODUCT_FROM_CART_RESET,\r\n\r\n    GET_ALL_ITEMS_FROM_CART_REQUEST,\r\n    GET_ALL_ITEMS_FROM_CART_SUCCESS,\r\n    GET_ALL_ITEMS_FROM_CART_FAIL,\r\n\r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    addItemLoading: false,\r\n    addItemSuccess: false,\r\n    addItemError: null,\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ADD_PRODUCT_TO_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addItemSuccess: true\r\n            }\r\n        case ADD_PRODUCT_TO_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case ADD_PRODUCT_TO_CART_RESET:\r\n            return {\r\n                ...state,\r\n                addItemSuccess: false,\r\n                addItemLoading: false,\r\n                addItemError: null,\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialRemoveItemCartState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const removeItemFromCart = (state = initialRemoveItemCartState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_PRODUCT_FROM_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_PRODUCT_FROM_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }            \r\n        case REMOVE_PRODUCT_FROM_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }            \r\n        case REMOVE_PRODUCT_FROM_CART_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allItemsFromCart = {\r\n    cartItems: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const cartItems = (state = allItemsFromCart, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ITEMS_FROM_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ITEMS_FROM_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                cartItems: [...action.payload]\r\n            }\r\n        case GET_ALL_ITEMS_FROM_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_WISH_LIST_REQUEST,\r\n    GET_WISH_LIST_SUCCESS,\r\n    GET_WISH_LIST_FAIL,\r\n\r\n    ADD_ITEM_TO_WISH_LIST_REQUEST,\r\n    ADD_ITEM_TO_WISH_LIST_SUCCESS,\r\n    ADD_ITEM_TO_WISH_LIST_FAIL,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n\r\n    REMOVE_ITEM_FROM_WISH_LIST_REQUEST,\r\n    REMOVE_ITEM_FROM_WISH_LIST_SUCCESS,\r\n    REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET,\r\n\r\n    REMOVE_ALL_ITEMS_WISHLIST_REQUEST,\r\n    REMOVE_ALL_ITEMS_WISHLIST_SUCCESS,\r\n    REMOVE_ALL_ITEMS_WISHLIST_FAIL,\r\n    REMOVE_ALL_ITEMS_WISHLIST_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst wishListInitialState = {\r\n    wishList: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getWishListReducer = (state = wishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                wishList: [...action.payload]\r\n            }\r\n        case GET_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addItemToWishListInitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const addItemToWishListReducer = (state = addItemToWishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_ITEM_TO_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst removeItemFromWishListInitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const removeItemFromWishListReducer = (state = removeItemFromWishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ITEM_FROM_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst removeAllItemInitlaState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const removeAllItemsFromWishListReducer = (state = removeAllItemInitlaState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ALL_ITEMS_WISHLIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_RESET: \r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    DELETE_REVIEW_RESET,\r\n\r\n    GET_USER_CURRENT_STATUS_PENDING,\r\n    GET_USER_CURRENT_STATUS_SUCCESS,\r\n    GET_USER_CURRENT_STATUS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst deleteReviewInitalState = {\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst deleteReviewReducer = (state = deleteReviewInitalState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                loading: false,\r\n                error: null,\r\n                success: false  \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst currentUserStatusState = {\r\n    userStatus: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst currentUserStatusReducer = (state = currentUserStatusState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_CURRENT_STATUS_PENDING: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_CURRENT_STATUS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                userStatus: action.payload\r\n            }\r\n        case GET_USER_CURRENT_STATUS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer,\r\n    currentUserStatusReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst top_TV_Initial_State = {\r\n    topTV: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getTopTVs = (state = top_TV_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topTV: [...action.payload]\r\n            }\r\n        case GET_TOP_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst all_TVs_Initial_State = {\r\n    tvs: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getALLTVs = (state = all_TVs_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tvs: [...action.payload]\r\n            }\r\n        case GET_ALL_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topPhonesInitialState = {\r\n    topPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topPhonesReducer = (state = topPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_PHONES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topPhones: [...action.payload]\r\n            }\r\n        case GET_TOP_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allPhonesInitialState = {\r\n    allPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allPhonesReducer = (state = allPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PHONES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL,\r\n\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topHeadPhoneInitialState = {\r\n    topHeadphone: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topHeadphoneReducer = (state = topHeadPhoneInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topHeadphone: [...action.payload]\r\n            }\r\n        case GET_TOP_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allHeadphonesInitialState = {\r\n    headPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allHeadphonesReducer = (state = allHeadphonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                headPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topGameInitalState = {\r\n    topGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topGameReducer = (state = topGameInitalState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topGames: [...action.payload]\r\n            }\r\n        case GET_TOP_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allGamesInitialState = {\r\n    allGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allGamesReducer = (state = allGamesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allGames: [...action.payload]\r\n            }\r\n        case GET_ALL_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer ,\r\n    setReviewsReducer\r\n} from './reducers/productReducers';\r\nimport { \r\n    cartReducer, \r\n    removeItemFromCart, \r\n    cartItems \r\n} from './reducers/cartReducers';\r\nimport {\r\n    getWishListReducer,\r\n    addItemToWishListReducer,\r\n    removeItemFromWishListReducer,\r\n    removeAllItemsFromWishListReducer\r\n} from './reducers/wishListReducer';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer,\r\n    currentUserStatusReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\nimport {\r\n    getTopTVs,\r\n    getALLTVs\r\n} from './reducers/tvReducers';\r\nimport {\r\n    topPhonesReducer,\r\n    allPhonesReducer\r\n} from './reducers/phoneReducers';\r\nimport {\r\n    topHeadphoneReducer,\r\n    allHeadphonesReducer\r\n} from './reducers/headphoneReducer';\r\nimport {\r\n    topGameReducer,\r\n    allGamesReducer\r\n} from './reducers/gameReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    setOfReviews: setReviewsReducer,\r\n    currentUserStatus: currentUserStatusReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    removeCart: removeItemFromCart,\r\n    cartList: cartItems,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    deleteReview: deleteReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer,\r\n    topTVs: getTopTVs,\r\n    allTVs: getALLTVs,\r\n    topPhones: topPhonesReducer,\r\n    allPhones: allPhonesReducer,\r\n    topHeadphone: topHeadphoneReducer,\r\n    allHeadphone: allHeadphonesReducer,\r\n    topGames: topGameReducer,\r\n    allGames: allGamesReducer,\r\n    wishList: getWishListReducer,\r\n    addItemToWishList: addItemToWishListReducer,\r\n    removeItemFromWishList: removeItemFromWishListReducer,\r\n    removeAllItemsFromWishList: removeAllItemsFromWishListReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}