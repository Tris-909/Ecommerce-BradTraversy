{"version":3,"sources":["redux/actions/actionTypes.js","components/SearchBox.js","components/Header.js","redux/actions/userActions.js","components/SubNavbar.js","components/Footer.js","redux/actions/productActions.js","redux/actions/wishListActions.js","redux/actions/cartActions.js","components/Rating.js","components/Message.js","components/Product.js","components/TopProduct (Home)/TopProduct.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","redux/actions/tvActions.js","redux/actions/phoneActions.js","redux/actions/headphoneActions.js","redux/actions/gameActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","components/ProductDetail/ProductCard.js","components/ReviewSection/ReviewSection.js","components/ProductDetail/LaptopTable/LapTopTable.js","components/ProductDetail/TvTable/TVTable.js","components/ProductDetail/PhoneTable/PhoneTable.js","components/ProductDetail/HeadphoneTable/HeadphoneTable.js","components/ProductDetail/GameTable/GameTable.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SearchScreen.js","screens/TVScreen.js","screens/phonesScreen.js","screens/HeadphoneScreen.js","screens/GamesScreen.js","components/WishList Product/WishListProduct.js","components/WishList Product/WishListProductHorizontal.js","screens/WishListScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/wishListReducer.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/reducers/tvReducers.js","redux/reducers/phoneReducers.js","redux/reducers/headphoneReducer.js","redux/reducers/gameReducer.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","ADD_PRODUCT_TO_CART_SUCCESS","ADD_PRODUCT_TO_CART_FAIL","ADD_PRODUCT_TO_CART_RESET","REMOVE_PRODUCT_FROM_CART_REQUEST","REMOVE_PRODUCT_FROM_CART_SUCCESS","REMOVE_PRODUCT_FROM_CART_FAIL","REMOVE_PRODUCT_FROM_CART_RESET","GET_ALL_ITEMS_FROM_CART_REQUEST","GET_ALL_ITEMS_FROM_CART_SUCCESS","GET_ALL_ITEMS_FROM_CART_FAIL","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","GET_WISH_LIST_REQUEST","GET_WISH_LIST_SUCCESS","GET_WISH_LIST_FAIL","ADD_ITEM_TO_WISH_LIST_REQUEST","ADD_ITEM_TO_WISH_LIST_SUCCESS","ADD_ITEM_TO_WISH_LIST_FAIL","ADD_ITEM_TO_WISH_LIST_RESET","REMOVE_ITEM_FROM_WISH_LIST_REQUEST","REMOVE_ITEM_FROM_WISH_LIST_SUCCESS","REMOVE_ITEM_FROM_WISH_LIST_FAIL","REMOVE_ITEM_FROM_WISH_LIST_RESET","REMOVE_ALL_ITEMS_WISHLIST_REQUEST","REMOVE_ALL_ITEMS_WISHLIST_SUCCESS","REMOVE_ALL_ITEMS_WISHLIST_FAIL","REMOVE_ALL_ITEMS_WISHLIST_RESET","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","DELETE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","GET_TOP_TVS_REQUEST","GET_TOP_TVS_SUCCESS","GET_TOP_TVS_FAIL","GET_ALL_TVS_REQUEST","GET_ALL_TVS_SUCCESS","GET_ALL_TVS_FAIL","GET_TOP_PHONES_REQUEST","GET_TOP_PHONES_SUCCESS","GET_TOP_PHONES_FAIL","GET_ALL_PHONES_REQUEST","GET_ALL_PHONES_SUCCESS","GET_ALL_PHONES_FAIL","GET_TOP_HEADPHONE_REQUEST","GET_TOP_HEADPHONE_SUCCESS","GET_TOP_HEADPHONE_FAIL","GET_ALL_HEADPHONE_REQUEST","GET_ALL_HEADPHONE_SUCCESS","GET_ALL_HEADPHONE_FAIL","GET_TOP_GAMES_REQUEST","GET_TOP_GAMES_SUCCESS","GET_TOP_GAMES_FAIL","GET_ALL_GAMES_REQUEST","GET_ALL_GAMES_SUCCESS","GET_ALL_GAMES_FAIL","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","type","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","YourCartText","dispatch","useDispatch","user","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","marginLeft","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubLink","SubNavbar","borderRight","Footer","Row","Col","getProductsList","pageNumber","a","axios","get","data","payload","response","message","getSingleProduct","getCarouselProducts","error","getWishList","getState","config","headers","token","addItemToWishList","itemId","productName","productPrice","productImage","productRating","productNumReviews","post","removeAnItemFromWishList","wishListItemId","delete","addItemToCart","countInStock","qty","console","log","quantity","getAllItemsCart","Rating","rating","text","defaultProps","XSymbol","strong","Message","content","addToCart","show","setShow","Alert","position","display","marginBottom","onClickHandler","CardMoneyText","FootProductContainer","ButtonContainer","props","product","link","isLoved","setIsLoved","wishListID","setWishListID","addItemSuccess","cart","cartItems","cartList","wishList","addItemToWishListSuccess","success","map","item","_id","Card","Img","src","image","Body","Title","as","Text","numReviews","price","cursor","onAddItemToCartHandler","onRemoveItemFromWishList","onAddItemToWishList","TopProductTitle","p","TopProduct","loading","itemArray","itemLink","listItemLink","justifyContent","alignItems","Spinner","animation","size","height","length","tv","sm","md","lg","xl","Loading","CarouselSection","carouselProducts","Carousel","pause","nextIcon","prevIcon","interval","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","topTVs","topTV","topTVLoading","topPhones","topPhonesLoading","topHeadphone","topHeadphoneLoading","topGames","topGamesLoading","removeItemFromWishListSuccess","removeItemFromWishList","dismissible","Heading","ProductImage","ProductInfo","description","ListGroup","ProductCard","useHistory","setQuantity","Array","keys","x","disabled","ReviewContainer","NoReviewText","ReviewSection","singleProduct","userReviewError","deleteReviewError","setRating","comment","setComment","onSubmitReviewHandler","productID","createReview","onDeleteReviewHandler","reviewId","reviewID","reviews","Group","controlId","Label","row","textDecoration","review","createdAt","substring","LapTopTable","laptopInfo","singleLaptop","details","Table","striped","bordered","hover","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","TVTable","TVDetail","tvsDetail","screenSizes","screenType","resolutionInPixel","refreshRate","usbPorts","sizeHeightWidthDepth","warranty","PhoneTable","phoneInfo","singlePhone","phoneDetail","phoneOperatingSystem","networkCompability","DualSim","Colour","DeviceScreen","Resolution","InternalMemory","FrontCamera","RearCamera","Processor","Wifi","Warranty","HeadphoneTable","headphoneInfo","singleHeadphonePhone","headphoneDetail","HeadphoneType","VoiceControl","NoiseReductionType","BuiltInMicrophone","GameTable","gameInfo","singleGame","gameDetail","Platform","GamingGerne","ConsumerAdvice","GameDeveloper","GamePublisher","ProductScreen","match","userReview","userReviewSuccess","deleteReview","deleteReviewSuccess","params","CartCardItem","CardImageContainer","CardImage","img","CardInfoContainer","CardBottomContainer","CardTextContainer","CardProductName","CardProductPrice","RemoveButton","CartTitle","CartEmptyText","CartScreen","removeCartItemSuccess","removeCart","removeFromCartHandler","removeItemFromCart","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","search","split","email","setEmail","password","setPassword","setItem","JSON","stringify","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","Number","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","pages","page","Pagination","active","ProductListAdminScreen","productsList","products","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","laptop","SearchScreen","TVScreen","allTVs","tvs","PhonesScreen","allPhones","phone","HeadphonesScreen","allHeadphone","headPhones","headphone","GamesScreen","allGames","game","WishListProduct","CardTopSectionContainer","CartTextContainer","CardBototmContainer","CardButtonContainer","WishListProductHorizontal","FlexContainer","DisplayContainer","DisplayButtonContainer","ClearWishListButton","button","WishListText","NoItemText","WishListScreen","showGrid","setShowGrid","removeAllItemsFromWishListSuccess","removeAllItemsFromWishList","clearWishList","visibility","swapToShowGridMode","swapToShowListMode","flexDirection","transition","ScrollToTop","prevProps","this","scrollTo","React","Component","MarginContainer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","addItemLoading","addItemError","initialRemoveItemCartState","allItemsFromCart","wishListInitialState","addItemToWishListInitialState","removeItemFromWishListInitialState","removeAllItemInitlaState","initialUserState","initialDetailState","initialReviewState","deleteReviewInitalState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","top_TV_Initial_State","all_TVs_Initial_State","topPhonesInitialState","allPhonesInitialState","topHeadPhoneInitialState","allHeadphonesInitialState","topGameInitalState","allGamesInitialState","reducer","combineReducers","action","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29dad909.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\n//TODO: ADD ITEM TO CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const ADD_PRODUCT_TO_CART_SUCCESS = 'ADD_PRODUCT_TO_CART_SUCCESS';\r\nexport const ADD_PRODUCT_TO_CART_FAIL = 'ADD_PRODUCT_TO_CART_FAIL'; \r\nexport const ADD_PRODUCT_TO_CART_RESET = 'ADD_PRODUCT_TO_CART_RESET';\r\n\r\n//TODO: REMOVE ITEM FROM CART\r\nexport const REMOVE_PRODUCT_FROM_CART_REQUEST = 'REMOVE_PRODUCT_TO_CART_REQUEST';\r\nexport const REMOVE_PRODUCT_FROM_CART_SUCCESS = 'REMOVE_PRODUCT_FROM_CART_SUCCESS';\r\nexport const REMOVE_PRODUCT_FROM_CART_FAIL = 'REMOVE_PRODUCT_FROM_CART_FAIL';\r\nexport const REMOVE_PRODUCT_FROM_CART_RESET = 'REMOVE_PRODUCT_FROM_CART_RESET';\r\n\r\n//TODO: GET ALL ITEMS FROM CART\r\nexport const GET_ALL_ITEMS_FROM_CART_REQUEST = 'GET_ALL_ITEMS_FROM_CART_REQUEST';\r\nexport const GET_ALL_ITEMS_FROM_CART_SUCCESS = 'GET_ALL_ITEMS_FROM_CART_SUCCESS';\r\nexport const GET_ALL_ITEMS_FROM_CART_FAIL = 'GET_ALL_ITEMS_FROM_CART_FAIL';\r\n\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! WISH-LIST\r\n//TODO: GET USER WISHLIST\r\nexport const GET_WISH_LIST_REQUEST = 'GET_WISH_LIST_REQUEST';\r\nexport const GET_WISH_LIST_SUCCESS = 'GET_WISH_LIST_SUCCESS';\r\nexport const GET_WISH_LIST_FAIL = 'GET_WISH_LIST_FAIL';\r\n\r\n//TODO: ADD AN ITEM TO WISHLIST\r\nexport const ADD_ITEM_TO_WISH_LIST_REQUEST = 'ADD_ITEM_TO_WISH_LIST_REQUEST';\r\nexport const ADD_ITEM_TO_WISH_LIST_SUCCESS = 'ADD_ITEM_TO_WISH_LIST_SUCCESS';\r\nexport const ADD_ITEM_TO_WISH_LIST_FAIL = 'ADD_ITEM_TO_WISH_LIST_FAIL';\r\nexport const ADD_ITEM_TO_WISH_LIST_RESET = 'ADD_ITEM_TO_WISH_LIST_RESET';\r\n\r\n//TODO: REMOVE AN ITEM FROM WISHLIST\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_REQUEST = 'REMOVE_ITEM_FROM_WISH_LIST_REQUEST';\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_SUCCESS = 'REMOVE_ITEM_FROM_WISH_LIST_SUCCESS';\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_FAIL = 'REMOVE_ITEM_FROM_WISH_LIST_FAIL';  \r\nexport const REMOVE_ITEM_FROM_WISH_LIST_RESET = 'REMOVE_ITEM_FROM_WISH_LIST_RESET';\r\n\r\n//TODO: REMOVE ALL ITEMS FROM WISHLIST\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_REQUEST = 'REMOVE_ALL_ITEMS_WISHLIST_REQUEST';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_SUCCESS = 'REMOVE_ALL_ITEMS_WISHLIST_SUCCESS';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_FAIL = 'REMOVE_ALL_ITEMS_WISHLIST_FAIL';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_RESET = 'REMOVE_ALL_ITEMS_WISHLIST_RESET';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//TODO: DELETE A REVIEW OF A PRODUCT BASED ON USERID, PRODUCTID AND REVIEW ID\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';\r\n\r\n//!TVS \r\n//TODO: GET TOP 3 TVS\r\nexport const GET_TOP_TVS_REQUEST = 'GET_TOP_TVS_REQUEST';\r\nexport const GET_TOP_TVS_SUCCESS = 'GET_TOP_TVS_SUCCESS';\r\nexport const GET_TOP_TVS_FAIL = 'GET_TOP_TVS_FAIL';\r\n\r\n//TODO: GET_ALL_TVS \r\nexport const GET_ALL_TVS_REQUEST = 'GET_ALL_TVS_REQUEST';\r\nexport const GET_ALL_TVS_SUCCESS = 'GET_ALL_TVS_SUCCESS';\r\nexport const GET_ALL_TVS_FAIL = 'GET_ALL_TVS_FAIL';\r\n\r\n//! PHONES\r\n//TODO: GET TOP 3 PHONES\r\nexport const GET_TOP_PHONES_REQUEST = 'GET_TOP_PHONES_REQUEST';\r\nexport const GET_TOP_PHONES_SUCCESS = 'GET_TOP_PHONES_SUCCESS';\r\nexport const GET_TOP_PHONES_FAIL = 'GET_TOP_PHONES_FAIL';\r\n\r\n//TODO: GET ALL PHONES\r\nexport const GET_ALL_PHONES_REQUEST = 'GET_ALL_PHONES_REQUEST';\r\nexport const GET_ALL_PHONES_SUCCESS = 'GET_ALL_PHONES_SUCCESS';\r\nexport const GET_ALL_PHONES_FAIL = 'GET_ALL_PHONES_FAIL';\r\n\r\n//! HEAD-PHONES\r\n//TODO: GET TOP 3 HEADPHONES \r\nexport const GET_TOP_HEADPHONE_REQUEST = 'GET_TOP_HEADPHONE_REQUEST';\r\nexport const GET_TOP_HEADPHONE_SUCCESS = 'GET_TOP_HEADPHONE_SUCCESS';\r\nexport const GET_TOP_HEADPHONE_FAIL = 'GET_TOP_HEADPHONE_FAIL';\r\n\r\n//TODO: GET ALL HEADPHONES\r\nexport const GET_ALL_HEADPHONE_REQUEST = 'GET_ALL_HEADPHONE_REQUEST';\r\nexport const GET_ALL_HEADPHONE_SUCCESS = 'GET_ALL_HEADPHONE_SUCCESS';\r\nexport const GET_ALL_HEADPHONE_FAIL = 'GET_ALL_HEADPHONE_FAIL';\r\n\r\n//! GAMES\r\n//TODO: GET TOP 3 GAMES\r\nexport const GET_TOP_GAMES_REQUEST = 'GET_TOP_GAMES_REQUEST';\r\nexport const GET_TOP_GAMES_SUCCESS = 'GET_TOP_GAMES_SUCCESS';\r\nexport const GET_TOP_GAMES_FAIL = 'GET_TOP_GAMES_FAIL';\r\n\r\n//TODO: GET ALL GAMES \r\nexport const GET_ALL_GAMES_REQUEST = 'GET_ALL_GAMES_REQUEST';\r\nexport const GET_ALL_GAMES_SUCCESS = 'GET_ALL_GAMES_SUCCESS';\r\nexport const GET_ALL_GAMES_FAIL = 'GET_ALL_GAMES_FAIL';","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 991);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '40%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '100%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {\r\n    GET_ORDER_OF_USER_RESET, \r\n    GET_USER_DETAILS_RESET, \r\n    GET_ALL_USERS_RESET,\r\n    DELETE_REVIEW_RESET\r\n} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst YourCartText = styled.div`\r\n    font-size: 0.7rem;\r\n    font-weight: 700;\r\n    margin-left: 8px;\r\n    \r\n\r\n\r\n    @media (max-width: 990px) {\r\n        display: inline;\r\n    }\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 990\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { screenWidth  > 991 ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth  < 991 ? (\r\n                        <NavDropdown title={<span style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}}> Products </span>} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/gaming\">\r\n                                    <NavDropdown.Item>Gaming</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  \r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '0rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Your Cart\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to={user ? \"/wishlist\" : \"/login\"}>\r\n                      <Nav.Link href=\"/wishlist\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-heart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '0rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Wish List\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i className=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                {\r\n                                    user && user.isAdmin ? (\r\n                                        <NavDropdown title={<span style={{ marginLeft: '1rem'}}>Admin</span>} id=\"adminuser\">\r\n                                            <LinkContainer to=\"/admin/usersList\">\r\n                                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/productsList\">\r\n                                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/ordersList\">\r\n                                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                        </NavDropdown>\r\n                                    ) : null\r\n                                }\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                            <AddBlackColor>\r\n                                <i className='fas fa-user' style={{ marginRight: 8, fontSize: '1.2rem'}}></i>\r\n                                Sign In\r\n                            </AddBlackColor>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <div style={{width: screenWidth  < 991 ? '100%' : '0%'}}>\r\n                {screenWidth  < 991 ? (<SearchBox />) : null}\r\n            </div>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/createreview`, { rating, comment, productID }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteReview = (productID, reviewID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_REVIEW_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/deletereview/${productID}/${reviewID}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n\r\n    &:hover {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all .2s;\r\n\r\n    &:hover {\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst SubLink = styled(Link)`\r\n    width: 100%;\r\n    padding: 1rem 0rem;\r\n\r\n    &:hover {\r\n        text-decoration: none;\r\n        background-color: rgb(252, 240, 3);\r\n    }\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 990);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <SubLink to=\"/laptops\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/tvs\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/phones\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/headphones\">\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </SubLink>\r\n            <SubLink to=\"/gaming\">\r\n                <NavItem style={{borderRight: 'none'}}>\r\n                    <i className=\"fas fa-gamepad\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Gaming\r\n                </NavItem>\r\n            </SubLink>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import {\r\n    GET_WISH_LIST_REQUEST,\r\n    GET_WISH_LIST_SUCCESS,\r\n    GET_WISH_LIST_FAIL,\r\n\r\n    ADD_ITEM_TO_WISH_LIST_REQUEST,\r\n    ADD_ITEM_TO_WISH_LIST_SUCCESS,\r\n    ADD_ITEM_TO_WISH_LIST_FAIL,\r\n\r\n    REMOVE_ITEM_FROM_WISH_LIST_REQUEST,\r\n    REMOVE_ITEM_FROM_WISH_LIST_SUCCESS,\r\n    REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n\r\n    REMOVE_ALL_ITEMS_WISHLIST_REQUEST,\r\n    REMOVE_ALL_ITEMS_WISHLIST_SUCCESS,\r\n    REMOVE_ALL_ITEMS_WISHLIST_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getWishList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: GET_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users/wishlist', config);\r\n\r\n        dispatch({\r\n            type: GET_WISH_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const addItemToWishList = (itemId, productName, productPrice, productImage, productRating, productNumReviews) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: ADD_ITEM_TO_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/users/wishlist/additem',{\r\n            itemId, \r\n            productName, \r\n            productPrice, \r\n            productImage, \r\n            productRating, \r\n            productNumReviews\r\n        } , config);\r\n\r\n        dispatch({\r\n            type: ADD_ITEM_TO_WISH_LIST_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ADD_ITEM_TO_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAnItemFromWishList = (wishListItemId) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: REMOVE_ITEM_FROM_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/wishlist/deleteitem/${wishListItemId}`, config);\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM_FROM_WISH_LIST_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAllItemsFromWishList = () => async( dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete('/api/users/wishlist/deleteitem', config);\r\n\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    ADD_PRODUCT_TO_CART_SUCCESS,\r\n    ADD_PRODUCT_TO_CART_FAIL,\r\n\r\n    REMOVE_PRODUCT_FROM_CART_REQUEST,\r\n    REMOVE_PRODUCT_FROM_CART_SUCCESS,\r\n    REMOVE_PRODUCT_FROM_CART_FAIL,\r\n\r\n    GET_ALL_ITEMS_FROM_CART_REQUEST,\r\n    GET_ALL_ITEMS_FROM_CART_SUCCESS,\r\n    GET_ALL_ITEMS_FROM_CART_FAIL,\r\n\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (itemId, productName, productImage, productPrice, countInStock, qty) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART\r\n        });\r\n        console.log({\r\n            itemId, \r\n            productName, \r\n            productImage, \r\n            productPrice, \r\n            countInStock: countInStock, \r\n            quantity: qty\r\n        });\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/users/cart/additem', { \r\n            itemId, \r\n            productName, \r\n            productImage, \r\n            productPrice, \r\n            countInStock: countInStock, \r\n            quantity: qty\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVE_PRODUCT_FROM_CART_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/cart/removeitem/${id}`, config);\r\n\r\n        dispatch({\r\n            type: REMOVE_PRODUCT_FROM_CART_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: REMOVE_PRODUCT_FROM_CART_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllItemsCart = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_ITEMS_FROM_CART_REQUEST });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users/cart', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ITEMS_FROM_CART_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ITEMS_FROM_CART_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#ffff00',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst XSymbol = styled.strong`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 2%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Message = ({content, variant, addToCart = false}) => {\r\n    const [show, setShow] = useState(true);\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <Alert \r\n            variant={variant} \r\n            style={{ \r\n                position: 'relative', \r\n                display: show ? 'initial' : 'none',\r\n                marginBottom: '1rem'\r\n            }}\r\n            >\r\n            <XSymbol onClick={(e) => onClickHandler(e)} style={{display: addToCart ? 'initial' : 'none'}}>X</XSymbol>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React, {useState, useEffect} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    addItemToCart,\r\n    getAllItemsCart\r\n} from '../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../redux/actions/actionTypes';\r\n\r\nimport Rating from './Rating';\r\nimport Message from './Message';\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    padding-top: 1rem;\r\n    font-family: 'Luckiest Guy', cursive;\r\n`;\r\n\r\nconst FootProductContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 360px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 360px) {\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst Product = (props) => {\r\n    const { product, link = '/product' } = props;\r\n    const [isLoved, setIsLoved] = useState(false);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { addItemSuccess } = useSelector(state => state.cart);\r\n    const { cartItems } = useSelector(state => state.cartList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product._id) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllItemsCart());\r\n    }, [dispatch, addItemSuccess]);\r\n\r\n    const onAddItemToCartHandler = (e, id, productName, productImage, productPrice, countInStock) => {\r\n        e.preventDefault();\r\n\r\n        if (user) {\r\n            dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n            dispatch(addItemToCart(id, productName, productImage, productPrice, countInStock, 1));\r\n        } else {\r\n            props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        \r\n        if (user) {\r\n            dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n            if (addItemToWishListSuccess) {\r\n                setIsLoved(true);\r\n            }\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        \r\n        if (user) {\r\n            dispatch(removeAnItemFromWishList(wishListID));\r\n            setIsLoved(false);\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                {\r\n                    addItemSuccess ? cartItems.map((item) => {\r\n                        if (item.itemId == product._id) {\r\n                            return(\r\n                            <div style={{marginTop: '1rem'}}>\r\n                                <Message variant=\"success\" content=\"Add Item To Cart Successfully\" addToCart={true} /> \r\n                            </div>\r\n                            );\r\n                        }\r\n                    }) : null\r\n                }\r\n                <FootProductContainer>\r\n                    <CardMoneyText>\r\n                        $ {product.price}\r\n                    </CardMoneyText>\r\n\r\n                    <ButtonContainer>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => \r\n                            onAddItemToCartHandler(e, product._id, product.name, product.image, product.price, product.countInStock, 1)}></i>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </ButtonContainer>\r\n                </FootProductContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withRouter(Product)\r\n","import React from 'react'\r\nimport { Row, Col, Spinner, Button } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport Message from '../Message';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TopProductTitle = styled.p`\r\n    text-align: center;\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0rem;\r\n    font-family: Rokkit;\r\n\r\n    & a:hover {\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media only screen and (max-width: 450px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst TopProduct = ({ loading, itemArray, title, itemLink, listItemLink }) => {\r\n    return (\r\n        <Container>\r\n            <TopProductTitle><Link to={listItemLink}>{title}</Link></TopProductTitle>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n               { !loading ? itemArray.length > 0 ? itemArray.map((tv) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                           <Product product={tv} link={itemLink}/>\r\n                        </Col>\r\n                    );\r\n                }) : (\r\n                    <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n               }\r\n            </Row>\r\n\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center', marginTop: '1rem'}}>\r\n                <Link to={listItemLink}>\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n            </Row>       \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopProduct;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel \r\n            pause='hover' \r\n            style={{ marginBottom: '2rem', backgroundColor: 'yellow'}}\r\n            nextIcon={<i className=\"fas fa-arrow-right\" style={{color: 'black', fontSize: '2rem'}}></i>}\r\n            prevIcon={<i className=\"fas fa-arrow-left\" style={{color: 'black', fontSize: '2rem'}}></i>}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id} interval={5000}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        {product.name} ({product.price})\r\n                    </Carousel.Caption> \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//TODO: Actions\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport {getTopTVs} from '../redux/actions/tvActions';\r\nimport {getTopPhones} from '../redux/actions/phoneActions';\r\nimport {getTopHeadphone} from '../redux/actions/headphoneActions';\r\nimport {getTopGames} from '../redux/actions/gameActions';\r\nimport {getWishList} from '../redux/actions/wishListActions';\r\nimport {getAllItemsCart} from '../redux/actions/cartActions';\r\n\r\n//TODO: Components\r\nimport TopProduct from '../components/TopProduct (Home)/TopProduct';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n    const { topTV, loading: topTVLoading } = useSelector(state => state.topTVs);\r\n    const { topPhones, loading: topPhonesLoading } = useSelector(state => state.topPhones);\r\n    const { topHeadphone, loading: topHeadphoneLoading } = useSelector(state => state.topHeadphone);\r\n    const { topGames, loading: topGamesLoading } = useSelector(state => state.topGames);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { cartItems } = useSelector(state => state.cartList);\r\n    const { success: addItemToWishListSuccess} = useSelector(state => state.addItemToWishList);\r\n    const { success: removeItemFromWishListSuccess} = useSelector(state => state.removeItemFromWishList);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get carousel products for the first time \r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top laptops for the first time \r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top tvs for the first time \r\n        if (topTV.length === 0) {\r\n            dispatch(getTopTVs());\r\n        }\r\n    }, [dispatch, topTV]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-phone for the first time\r\n        if (topPhones.length === 0) {\r\n            dispatch(getTopPhones());\r\n        }\r\n    }, [dispatch, topPhones]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-headphone for the first time\r\n        if (topHeadphone.length === 0) {\r\n            dispatch(getTopHeadphone());\r\n        }\r\n    }, [dispatch, topHeadphone]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-games for the first time\r\n        if (topGames.length === 0) {\r\n            dispatch(getTopGames());\r\n        }\r\n    }, [dispatch, topGames]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch Wishlist for the first time if needed\r\n        if (wishList.length === 0 || addItemToWishListSuccess || removeItemFromWishListSuccess) {\r\n            dispatch(getWishList());\r\n        } \r\n    }, [dispatch, addItemToWishListSuccess, removeItemFromWishListSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                    <Helmet title=\"Proshop | Electronics \" href=\"/\" />\r\n                \r\n                    <CarouselSection \r\n                        carouselProducts={carouselProducts} \r\n                        loading={carouselLoading} \r\n                        error={carouselError} \r\n                    />\r\n\r\n                    {\r\n                        topLaptops.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topLaptopLoading} \r\n                                itemArray={topLaptops} \r\n                                title=\"Our Top Tier MSI Laptops\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/laptops\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topTV.length !== 0 ? (      \r\n                            <TopProduct \r\n                                loading={topTVLoading} \r\n                                itemArray={topTV} \r\n                                title=\"Best TVs for 2020\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/tvs\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topPhones.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topPhonesLoading}\r\n                                itemArray={topPhones}\r\n                                title=\"New Phones 2020\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/phones\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topHeadphone.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topHeadphoneLoading}\r\n                                itemArray={topHeadphone}\r\n                                title=\"Great Headphones for You\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/headphones\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n\r\n                    {\r\n                        topGames.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topGamesLoading}\r\n                                itemArray={topGames}\r\n                                title=\"For Game Lovers\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/gaming\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_TVS_REQUEST\r\n        });\r\n\r\n        const {data} = await axios.get('/api/products/tvs/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_TVS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/tvs');\r\n\r\n        dispatch({\r\n            type: GET_ALL_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL,\r\n\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopHeadphone = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllHeadPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n        });\r\n    }\r\n}\r\n\r\n","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games');\r\n\r\n        dispatch({\r\n            type: GET_ALL_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image}) => {\r\n    return (\r\n        <Col md={8}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description} = props;\r\n\r\n    return (\r\n        <Col md={12}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport { createReview, deleteReview } from '../../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET, DELETE_REVIEW_RESET } from '../../redux/actions/actionTypes';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../Message';\r\nimport Rating from '../../components/Rating';\r\nimport styled from 'styled-components';\r\n\r\nconst ReviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst NoReviewText = styled.div`\r\n    font-size: 1.5rem;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ReviewSection = ({ singleProduct, user, userReviewError, deleteReviewError }) => {\r\n    const dispatch = useDispatch();\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const onDeleteReviewHandler = (e, reviewId) => {\r\n        e.preventDefault();\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(deleteReview(singleProduct._id, reviewId));\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {\r\n                    deleteReviewError ? (\r\n                        <Message content=\"Delete Review Failed, Please Try Again :(\" variant=\"danger\" />\r\n                    ) : null\r\n                }\r\n                { singleProduct.reviews.length == 0 ? (\r\n                    <>\r\n                        <NoReviewText>\r\n                            No Reviews \r\n                        </NoReviewText>\r\n                        { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : (\r\n                                <NoReviewText>\r\n                                    You need to <Link to=\"/login\" style={{ textDecoration: 'underline' }}> sign in </Link> to post a review\r\n                                </NoReviewText>\r\n                            )}\r\n                    </>\r\n                    ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { singleProduct.reviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <ReviewContainer>\r\n                                    <strong>{review.name}</strong>\r\n                                    <i \r\n                                        className=\"fas fa-trash\" \r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onClick={(e) => onDeleteReviewHandler(e, review._id)}></i>\r\n                                </ReviewContainer>\r\n\r\n                                <Rating rating={review.rating} />\r\n                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                <p>{ review.comment }</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Post A Review</h2>\r\n                            {userReviewError ? (\r\n                                <Message \r\n                                    variant=\"danger\" \r\n                                    content={ userReviewError === 'User has already review this product'\r\n                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                            ) : null}\r\n                            { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReviewSection\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst LapTopTable = (props) => {\r\n    const laptopInfo = props.singleLaptop.details;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Display Size (inches)</td>\r\n                      <td>{laptopInfo.displaySizeInches}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (Pixels)</td>\r\n                      <td>{laptopInfo.resolutionPixels}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{laptopInfo.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Display type</td>\r\n                      <td>{laptopInfo.displayType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Type</td>\r\n                      <td>{laptopInfo.proccessorType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Cores</td>\r\n                      <td>{laptopInfo.proccessorCores}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Memory Cache</td>\r\n                      <td>{laptopInfo.processorMemoryCache}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorMaxClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Graphics processor</td>\r\n                      <td>{laptopInfo.graphicsProcessor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>RAM (GB)</td>\r\n                      <td>{laptopInfo.ram}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>SSD Storage</td>\r\n                      <td>{laptopInfo.ssdStorage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB 2.0 Ports</td>\r\n                      <td>{laptopInfo.usbTwoPointOPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB C Ports</td>\r\n                      <td>{laptopInfo.usbCPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Card Reader</td>\r\n                      <td>{laptopInfo.cardReader}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Web Cam</td>\r\n                      <td>{laptopInfo.webCam}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{laptopInfo.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Operating system</td>\r\n                      <td>{laptopInfo.operatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{laptopInfo.manufacturersWarantty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LapTopTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst TVTable = (props) => {\r\n    const TVDetail = props.tvsDetail; \r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Screen Size (inches)</td>\r\n                      <td>{TVDetail.screenSizes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Type</td>\r\n                      <td>{TVDetail.screenType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{TVDetail.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (pixels)</td>\r\n                      <td>{TVDetail.resolutionInPixel}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Refresh Rate</td>\r\n                      <td>{TVDetail.refreshRate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wifi</td>\r\n                      <td>{TVDetail.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB Ports</td>\r\n                      <td>{TVDetail.usbPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Height x Width x Depth</td>\r\n                      <td>{TVDetail.sizeHeightWidthDepth}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Warranty</td>\r\n                      <td>{TVDetail.warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TVTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst PhoneTable = (props) => {\r\n    const phoneInfo = props.singlePhone.phoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Operating System</td>\r\n                      <td>{phoneInfo.phoneOperatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Network Compability</td>\r\n                      <td>{phoneInfo.networkCompability}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dual Sim</td>\r\n                      <td>{phoneInfo.DualSim}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{phoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Devices Screen</td>\r\n                      <td>{phoneInfo.DeviceScreen}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution</td>\r\n                      <td>{phoneInfo.Resolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Internal Memory</td>\r\n                      <td>{phoneInfo.InternalMemory}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Front Camera</td>\r\n                      <td>{phoneInfo.FrontCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rear Camera</td>\r\n                      <td>{phoneInfo.RearCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor</td>\r\n                      <td>{phoneInfo.Processor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{phoneInfo.Wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{phoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PhoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst HeadphoneTable = (props) => {\r\n    const headphoneInfo = props.singleHeadphonePhone.headphoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Headphone Type</td>\r\n                      <td>{headphoneInfo.HeadphoneType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{headphoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Voice Control</td>\r\n                      <td>{headphoneInfo.VoiceControl}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Noise Reduction Type</td>\r\n                      <td>{headphoneInfo.NoiseReductionType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Built-In Microphone</td>\r\n                      <td>{headphoneInfo.BuiltInMicrophone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{headphoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default HeadphoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst GameTable = (props) => {\r\n    const gameInfo = props.singleGame.gameDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Platform</td>\r\n                      <td>{gameInfo.Platform}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Gaming Gerne</td>\r\n                      <td>{gameInfo.GamingGerne}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rating</td>\r\n                      <td>{gameInfo.Rating}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Consumer Advice</td>\r\n                      <td>{gameInfo.ConsumerAdvice}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Developer</td>\r\n                      <td>{gameInfo.GameDeveloper}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Publisher</td>\r\n                      <td>{gameInfo.GamePublisher}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default GameTable;\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport ReviewSection from '../components/ReviewSection/ReviewSection';\r\nimport Loading from '../components/Loading';\r\nimport Helmet from '../components/Helmet';\r\nimport LapTopTable from '../components/ProductDetail/LaptopTable/LapTopTable';\r\nimport TVTable from '../components/ProductDetail/TvTable/TVTable';\r\nimport PhoneTable from '../components/ProductDetail/PhoneTable/PhoneTable';\r\nimport HeadphoneTable from '../components/ProductDetail/HeadphoneTable/HeadphoneTable';\r\nimport GameTable from '../components/ProductDetail/GameTable/GameTable';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const {success: deleteReviewSuccess, error:  deleteReviewError } = useSelector(state => state.deleteReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess, deleteReviewSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />                            \r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                        </Row>\r\n                        {\r\n                            singleProduct.details.proccessorCores ? (\r\n                                <LapTopTable singleLaptop={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.tvsDetail.sizeHeightWidthDepth ? (\r\n                                <TVTable tvsDetail={singleProduct.tvsDetail} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.phoneDetail.DualSim ? (\r\n                                <PhoneTable singlePhone={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.headphoneDetail.HeadphoneType ? (\r\n                                <HeadphoneTable singleHeadphonePhone={singleProduct} />\r\n                            ) : null\r\n                        }                        \r\n                        {\r\n                            singleProduct.gameDetail.Platform ? (\r\n                                <GameTable singleGame={singleProduct} />\r\n                            ) : null\r\n                        }\r\n\r\n                        <ReviewSection \r\n                            singleProduct={singleProduct} \r\n                            user={user} \r\n                            userReviewError={userReviewError} \r\n                            deleteReviewError={deleteReviewError} \r\n                        />\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeItemFromCart, getAllItemsCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\nimport styled from 'styled-components';\r\n\r\n//TODO: CART CARD \r\nconst CartCardItem = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    border: 1px solid grey;\r\n    margin-bottom: 1rem;\r\n    padding: 1rem; \r\n\r\n    @media (max-width: 1050px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst CardImageContainer = styled.div`\r\n    width: 40%;\r\n\r\n    @media (max-width: 550px) {\r\n        width: 60%;\r\n    }\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n    width: 100%;\r\n`;\r\n\r\nconst CardInfoContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardBottomContainer = styled.div`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst CardTextContainer = styled.div`\r\n    display: flex;\r\n    margin-left: 15px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CardProductName = styled.div`\r\n    font-size: 1rem;\r\n\r\n    @media (max-width: 400px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\nconst CardProductPrice = styled.div`\r\n    font-family: Rokkitt;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nconst RemoveButton = styled.a`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n`;\r\n//TODO: END OF CARD CART /////////////////////////////////\r\n\r\nconst CartTitle = styled.div`\r\n    font-family: Rokkitt;\r\n    text-align: center;\r\n    font-size: 3rem;\r\n\r\n    @media (max-width: 500px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst CartEmptyText = styled.div`\r\n    font-size: 2.5rem;\r\n    font-family: Rokkitt;\r\n    color: black;\r\n    text-align: center;\r\n    margin-top: 2rem;\r\n`;\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const dispatch = useDispatch();\r\n    const { cartItems } = useSelector(state => state.cartList);\r\n    const { success: removeCartItemSuccess } = useSelector(state => state.removeCart);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllItemsCart());\r\n    }, [dispatch, removeCartItemSuccess]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <CartTitle>Shopping Cart</CartTitle>\r\n                {cartItems.length === 0 ? <CartEmptyText>Your Cart is empty ! <Link to=\"/\" style={{ textDecoration: 'underline' }}>Go Back</Link></CartEmptyText> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <CartCardItem key={item._id}>\r\n                                <CardImageContainer>\r\n                                    <CardImage src={item.productImage} alt={item.productName} fluid rounded/>\r\n                                </CardImageContainer>\r\n                                    \r\n                                <CardInfoContainer>\r\n                                    <CardTextContainer>\r\n                                        <CardProductName>\r\n                                            <Link to={`/product/${item.itemId}`}>{item.productName}</Link>\r\n                                        </CardProductName>\r\n\r\n                                        <CardBottomContainer>\r\n                                            <CardProductPrice>\r\n                                                ${item.productPrice}\r\n                                            </CardProductPrice>\r\n\r\n                                            <RemoveButton onClick={() => removeFromCartHandler(item.itemId)}>\r\n                                                Remove                                        \r\n                                            </RemoveButton>\r\n                                        </CardBottomContainer>\r\n                                    </CardTextContainer>\r\n                                </CardInfoContainer>\r\n                            </CartCardItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.quantity, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.quantity*item.productPrice, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/laptops`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useEffect} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst SearchScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading } = productsList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                { !loading ? products.length > 0 ? products.map((product) => {\r\n                     return(\r\n                         <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                            <Product product={product}/>\r\n                         </Col>\r\n                     );\r\n                 }) : (\r\n                     <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                 ) : <Loading /> \r\n                }\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTVs } from '../redux/actions/tvActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst TVScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { tvs, loading, error } = useSelector(state => state.allTVs);\r\n    \r\n    useEffect(() => {\r\n        if (tvs.length === 0) {\r\n            dispatch(getAllTVs());\r\n        }\r\n    }, [dispatch, tvs]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"TVs | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : tvs.map((tv) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                        <Product product={tv} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TVScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPhones } from '../redux/actions/phoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PhonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allPhones, loading, error } = useSelector(state => state.allPhones);\r\n    \r\n    useEffect(() => {\r\n        if (allPhones.length === 0) {\r\n            dispatch(getAllPhones());\r\n        }\r\n    }, [dispatch, allPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Phones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allPhones.map((phone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={phone._id}>\r\n                        <Product product={phone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PhonesScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllHeadPhones } from '../redux/actions/headphoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HeadphonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { headPhones, loading, error } = useSelector(state => state.allHeadphone);\r\n    \r\n    useEffect(() => {\r\n        if (headPhones.length === 0) {\r\n            dispatch(getAllHeadPhones());\r\n        }\r\n    }, [dispatch, headPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Headphones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : headPhones.map((headphone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={headphone._id}>\r\n                        <Product product={headphone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HeadphonesScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllGames} from '../redux/actions/gameActions';\r\n\r\nconst GamesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allGames, loading, error } = useSelector(state => state.allGames);\r\n    \r\n    useEffect(() => {\r\n        if (allGames.length === 0) {\r\n            dispatch(getAllGames());\r\n        }\r\n    }, [dispatch, allGames]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Gaming | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allGames.map((game) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={game._id}>\r\n                            <Product product={game} link={`/product`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GamesScreen;","import React, {useState, useEffect} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItemToCart} from '../../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../../redux/actions/actionTypes';\r\n\r\nimport Rating from '../Rating';\r\nimport Message from '../Message';\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    padding-top: 1rem;\r\n    font-family: 'Luckiest Guy', cursive;\r\n\r\n    @media (max-width: 400px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst FootProductContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 400px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (max-width: 400px) {\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nconst WishListProduct = ({ product }) => {\r\n    const [isLoved, setIsLoved] = useState(true);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartItems, addItemSuccess } = useSelector(state => state.cart);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product.itemId) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    const onAddItemToCartHandler = (e, id) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n        dispatch(addItemToCart(id, 1));\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n        if (addItemToWishListSuccess) {\r\n            setIsLoved(true);\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        dispatch(removeAnItemFromWishList(wishListID));\r\n        setIsLoved(false);\r\n    }\r\n\r\n    \r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product.itemId}`}>\r\n                <Card.Img src={product.productImage} variant=\"top\"/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product.itemId}`}>\r\n                    <Card.Title as=\"div\">\r\n                        {product.productName}\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.productRating} \r\n                        text={`${product.productNumReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                {\r\n                    addItemSuccess && (cartItems[cartItems.length-1].product === product._id) ? (\r\n                    <div style={{marginTop: '1rem'}}>\r\n                        <Message variant=\"success\" content=\"Add Item To Cart Successfully\" /> \r\n                    </div>\r\n                    ): null\r\n                }\r\n                <FootProductContainer>\r\n                    <CardMoneyText>\r\n                        $ {product.productPrice}\r\n                    </CardMoneyText>\r\n\r\n                    <ButtonContainer>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => onAddItemToCartHandler(e, product._id)}></i>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </ButtonContainer>\r\n                </FootProductContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WishListProduct;\r\n","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItemToCart} from '../../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../../redux/actions/actionTypes';\r\n\r\nimport Message from '../Message';\r\n\r\nconst Card = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    border: 1px solid grey;\r\n    padding: 10px;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst CardTopSectionContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst CardImageContainer = styled.div`\r\n    width: 40%;\r\n    height: 100%;\r\n    margin-right: 10px;\r\n`;\r\n\r\nconst CartTextContainer = styled.div`\r\n    width: 60%;\r\n    font-size: 13px;\r\n    font-weight: 800;\r\n\r\n    @media (min-width: 450px) {\r\n        margin-top: 10px;\r\n        font-size: 0.8rem;\r\n    }\r\n\r\n    @media (min-width: 600px) {\r\n        margin-top: 10px;\r\n        font-size: 1rem;\r\n        align-self: center;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        font-size: 1.5rem;\r\n    }\r\n`;\r\n\r\nconst CardBototmContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    font-family: 'Luckiest Guy', cursive;\r\n`;\r\n\r\nconst CardButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WishListProductHorizontal = ({ product }) => {\r\n    const [isLoved, setIsLoved] = useState(true);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartItems, addItemSuccess } = useSelector(state => state.cart);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product.itemId) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    const onAddItemToCartHandler = (e, id) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n        dispatch(addItemToCart(id, 1));\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n        if (addItemToWishListSuccess) {\r\n            setIsLoved(true);\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        dispatch(removeAnItemFromWishList(wishListID));\r\n        setIsLoved(false);\r\n    }\r\n\r\n    return(\r\n        <Card>\r\n            <Link to={`/product/${product.itemId}`}> \r\n            <CardTopSectionContainer>\r\n                <CardImageContainer>\r\n                    <img src={product.productImage} alt={product.productName} style={{ width: '100%' }}/>\r\n                </CardImageContainer>\r\n                <CartTextContainer>\r\n                    {product.productName}\r\n                </CartTextContainer>\r\n            </CardTopSectionContainer>\r\n            </Link>\r\n            <CardBototmContainer>\r\n                <CardMoneyText>\r\n                    $ {product.productPrice}\r\n                </CardMoneyText>\r\n                <CardButtonContainer>\r\n                    <div>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => onAddItemToCartHandler(e, product._id)}></i>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </CardButtonContainer>\r\n            </CardBototmContainer>\r\n            {\r\n                addItemSuccess && (cartItems[cartItems.length-1].product === product._id) ? (\r\n                <div style={{marginTop: '1rem'}}>\r\n                    <Message variant=\"success\" content=\"Add Item To Cart Successfully\" /> \r\n                </div>\r\n                ): null\r\n            }\r\n        </Card>\r\n    )\r\n} \r\n\r\nexport default WishListProductHorizontal;","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport {getWishList, removeAllItemsFromWishList} from '../redux/actions/wishListActions';\r\nimport {REMOVE_ALL_ITEMS_WISHLIST_RESET} from '../redux/actions/actionTypes';\r\nimport WishListProduct from '../components/WishList Product/WishListProduct';\r\nimport WishListProductHorizontal from '../components/WishList Product/WishListProductHorizontal';\r\nimport styled from 'styled-components';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst DisplayContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst DisplayButtonContainer = styled.div`\r\n    border: 1px solid black;\r\n    margin-left: 1rem;\r\n    margin-rigth: 1rem;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ClearWishListButton = styled.button`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    padding: 10px;\r\n    border: none;\r\n\r\n    @media (max-width: 350px) {\r\n        padding: 8px;\r\n        font-size: 0.7rem;\r\n    }\r\n`;\r\n\r\nconst WishListText = styled.div`\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    color: black;\r\n    font-family: Rokkitt;\r\n\r\n`;\r\n\r\nconst NoItemText = styled.div`\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    font-family: Rokkitt;\r\n    margin-top: 3rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst WishListScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [showGrid, setShowGrid] = useState(true);\r\n    const { user } = useSelector(state => state.user);\r\n    const { wishList, loading, error } = useSelector(state => state.wishList)\r\n    const { success: removeItemFromWishListSuccess } = useSelector(state => state.removeItemFromWishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n    const { success: removeAllItemsFromWishListSuccess } = useSelector(state => state.removeAllItemsFromWishList);\r\n\r\n    const swapToShowGridMode = (e) => {\r\n        e.preventDefault();\r\n        setShowGrid(true);\r\n    }\r\n\r\n    const swapToShowListMode = (e) => {\r\n        e.preventDefault();\r\n        setShowGrid(false);\r\n    }\r\n\r\n    const clearWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ALL_ITEMS_WISHLIST_RESET });\r\n        dispatch(removeAllItemsFromWishList());\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getWishList());\r\n    }, [dispatch, removeItemFromWishListSuccess, addItemToWishListSuccess, removeAllItemsFromWishListSuccess]);\r\n\r\n    return (\r\n        <div>\r\n            <WishListText> Wish List </WishListText>\r\n            <FlexContainer>\r\n                <ClearWishListButton onClick={(e) => clearWishList(e)} style={{ visibility: wishList.length===0 ? 'hidden' : 'initial' }}>Clear Wish List</ClearWishListButton>\r\n                <DisplayContainer>\r\n                    <DisplayButtonContainer onClick={(e) => swapToShowGridMode(e)}>\r\n                        <i className=\"fas fa-th-large\"></i>\r\n                    </DisplayButtonContainer>\r\n                    <DisplayButtonContainer onClick={(e) => swapToShowListMode(e)}>\r\n                        <i className=\"fas fa-list\"></i>\r\n                    </DisplayButtonContainer>\r\n                </DisplayContainer>\r\n            </FlexContainer>\r\n            <Row style={{ \r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                flexDirection: showGrid ? 'initial' : 'column',\r\n                transition: 'all .5s'}}>\r\n                {\r\n                    wishList.length !== 0 ? wishList.map((item) => {\r\n                        if (showGrid) {\r\n                            return(\r\n                                <Col key={item._id}>\r\n                                    <WishListProduct product={item} /> \r\n                                </Col>\r\n                            )\r\n                        } else {\r\n                            return(\r\n                                <Col key={item._id}>\r\n                                    <WishListProductHorizontal product={item} />\r\n                                </Col>\r\n                            )\r\n                        }\r\n                    }) : (\r\n                        <NoItemText>You Have No Items</NoItemText>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WishListScreen\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport TVScreen from './screens/TVScreen';\nimport PhonesScreen from './screens/phonesScreen';\nimport HeadphonesScreen from './screens/HeadphoneScreen';\nimport GamesScreen from './screens/GamesScreen';\nimport WishListScreen from './screens/WishListScreen';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport styled from 'styled-components';\n\nconst MarginContainer = styled.div`\nmargin-top: 0%;  \nmargin-left: 5%;\nmargin-right: 5%;\npadding-left: 2%;\npadding-right: 2%;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n        <Header/>\n        <SubNavbar />\n      <main className='py-3'>\n        <MarginContainer>  \n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/tvs\" component={TVScreen} exact />\n          <Route path=\"/phones\" component={PhonesScreen} exact />\n          <Route path=\"/headphones\" component={HeadphonesScreen} exact />\n          <Route path=\"/gaming\" component={GamesScreen} exact />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/wishlist\" component={WishListScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={SearchScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </MarginContainer>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    ADD_PRODUCT_TO_CART_SUCCESS,\r\n    ADD_PRODUCT_TO_CART_FAIL,\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    \r\n    REMOVE_PRODUCT_FROM_CART_REQUEST,\r\n    REMOVE_PRODUCT_FROM_CART_SUCCESS,\r\n    REMOVE_PRODUCT_FROM_CART_FAIL,\r\n    REMOVE_PRODUCT_FROM_CART_RESET,\r\n\r\n    GET_ALL_ITEMS_FROM_CART_REQUEST,\r\n    GET_ALL_ITEMS_FROM_CART_SUCCESS,\r\n    GET_ALL_ITEMS_FROM_CART_FAIL,\r\n\r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    addItemLoading: false,\r\n    addItemSuccess: false,\r\n    addItemError: null,\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ADD_PRODUCT_TO_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addItemSuccess: true\r\n            }\r\n        case ADD_PRODUCT_TO_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case ADD_PRODUCT_TO_CART_RESET:\r\n            return {\r\n                ...state,\r\n                addItemSuccess: false,\r\n                addItemLoading: false,\r\n                addItemError: null,\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialRemoveItemCartState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const removeItemFromCart = (state = initialRemoveItemCartState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_PRODUCT_FROM_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_PRODUCT_FROM_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }            \r\n        case REMOVE_PRODUCT_FROM_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }            \r\n        case REMOVE_PRODUCT_FROM_CART_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allItemsFromCart = {\r\n    cartItems: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const cartItems = (state = allItemsFromCart, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ITEMS_FROM_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ITEMS_FROM_CART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                cartItems: [...action.payload]\r\n            }\r\n        case GET_ALL_ITEMS_FROM_CART_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_WISH_LIST_REQUEST,\r\n    GET_WISH_LIST_SUCCESS,\r\n    GET_WISH_LIST_FAIL,\r\n\r\n    ADD_ITEM_TO_WISH_LIST_REQUEST,\r\n    ADD_ITEM_TO_WISH_LIST_SUCCESS,\r\n    ADD_ITEM_TO_WISH_LIST_FAIL,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n\r\n    REMOVE_ITEM_FROM_WISH_LIST_REQUEST,\r\n    REMOVE_ITEM_FROM_WISH_LIST_SUCCESS,\r\n    REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET,\r\n\r\n    REMOVE_ALL_ITEMS_WISHLIST_REQUEST,\r\n    REMOVE_ALL_ITEMS_WISHLIST_SUCCESS,\r\n    REMOVE_ALL_ITEMS_WISHLIST_FAIL,\r\n    REMOVE_ALL_ITEMS_WISHLIST_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst wishListInitialState = {\r\n    wishList: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getWishListReducer = (state = wishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                wishList: [...action.payload]\r\n            }\r\n        case GET_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addItemToWishListInitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const addItemToWishListReducer = (state = addItemToWishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_ITEM_TO_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst removeItemFromWishListInitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const removeItemFromWishListReducer = (state = removeItemFromWishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ITEM_FROM_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst removeAllItemInitlaState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const removeAllItemsFromWishListReducer = (state = removeAllItemInitlaState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ALL_ITEMS_WISHLIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_RESET: \r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    DELETE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst deleteReviewInitalState = {\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst deleteReviewReducer = (state = deleteReviewInitalState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                loading: false,\r\n                error: null,\r\n                success: false  \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst top_TV_Initial_State = {\r\n    topTV: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getTopTVs = (state = top_TV_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topTV: [...action.payload]\r\n            }\r\n        case GET_TOP_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst all_TVs_Initial_State = {\r\n    tvs: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getALLTVs = (state = all_TVs_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tvs: [...action.payload]\r\n            }\r\n        case GET_ALL_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topPhonesInitialState = {\r\n    topPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topPhonesReducer = (state = topPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_PHONES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topPhones: [...action.payload]\r\n            }\r\n        case GET_TOP_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allPhonesInitialState = {\r\n    allPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allPhonesReducer = (state = allPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PHONES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL,\r\n\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topHeadPhoneInitialState = {\r\n    topHeadphone: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topHeadphoneReducer = (state = topHeadPhoneInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topHeadphone: [...action.payload]\r\n            }\r\n        case GET_TOP_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allHeadphonesInitialState = {\r\n    headPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allHeadphonesReducer = (state = allHeadphonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                headPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topGameInitalState = {\r\n    topGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topGameReducer = (state = topGameInitalState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topGames: [...action.payload]\r\n            }\r\n        case GET_TOP_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allGamesInitialState = {\r\n    allGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allGamesReducer = (state = allGamesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allGames: [...action.payload]\r\n            }\r\n        case GET_ALL_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { \r\n    cartReducer, \r\n    removeItemFromCart, \r\n    cartItems \r\n} from './reducers/cartReducers';\r\nimport {\r\n    getWishListReducer,\r\n    addItemToWishListReducer,\r\n    removeItemFromWishListReducer,\r\n    removeAllItemsFromWishListReducer\r\n} from './reducers/wishListReducer';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\nimport {\r\n    getTopTVs,\r\n    getALLTVs\r\n} from './reducers/tvReducers';\r\nimport {\r\n    topPhonesReducer,\r\n    allPhonesReducer\r\n} from './reducers/phoneReducers';\r\nimport {\r\n    topHeadphoneReducer,\r\n    allHeadphonesReducer\r\n} from './reducers/headphoneReducer';\r\nimport {\r\n    topGameReducer,\r\n    allGamesReducer\r\n} from './reducers/gameReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    removeCart: removeItemFromCart,\r\n    cartList: cartItems,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    deleteReview: deleteReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer,\r\n    topTVs: getTopTVs,\r\n    allTVs: getALLTVs,\r\n    topPhones: topPhonesReducer,\r\n    allPhones: allPhonesReducer,\r\n    topHeadphone: topHeadphoneReducer,\r\n    allHeadphone: allHeadphonesReducer,\r\n    topGames: topGameReducer,\r\n    allGames: allGamesReducer,\r\n    wishList: getWishListReducer,\r\n    addItemToWishList: addItemToWishListReducer,\r\n    removeItemFromWishList: removeItemFromWishListReducer,\r\n    removeAllItemsFromWishList: removeAllItemsFromWishListReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}