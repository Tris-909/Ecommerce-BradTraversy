{"version":3,"sources":["redux/actions/actionTypes.js","components/SearchBox.js","components/Header.js","redux/actions/userActions.js","components/SubNavbar.js","components/Footer.js","redux/actions/productActions.js","components/Rating.js","components/Product.js","components/Message.js","components/TopProduct (Home)/TopProduct.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","redux/actions/tvActions.js","redux/actions/phoneActions.js","redux/actions/headphoneActions.js","redux/actions/gameActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","redux/actions/cartActions.js","components/ProductDetail/ProductCard.js","components/ReviewSection/ReviewSection.js","components/ProductDetail/LaptopTable/LapTopTable.js","components/ProductDetail/TvTable/TVTable.js","components/ProductDetail/PhoneTable/PhoneTable.js","components/ProductDetail/HeadphoneTable/HeadphoneTable.js","components/ProductDetail/GameTable/GameTable.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SearchScreen.js","screens/TVScreen.js","screens/phonesScreen.js","screens/HeadphoneScreen.js","screens/GamesScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/reducers/tvReducers.js","redux/reducers/phoneReducers.js","redux/reducers/headphoneReducer.js","redux/reducers/gameReducer.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_TO_CART","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","DELETE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","GET_TOP_TVS_REQUEST","GET_TOP_TVS_SUCCESS","GET_TOP_TVS_FAIL","GET_ALL_TVS_REQUEST","GET_ALL_TVS_SUCCESS","GET_ALL_TVS_FAIL","GET_TOP_PHONES_REQUEST","GET_TOP_PHONES_SUCCESS","GET_TOP_PHONES_FAIL","GET_ALL_PHONES_REQUEST","GET_ALL_PHONES_SUCCESS","GET_ALL_PHONES_FAIL","GET_TOP_HEADPHONE_REQUEST","GET_TOP_HEADPHONE_SUCCESS","GET_TOP_HEADPHONE_FAIL","GET_ALL_HEADPHONE_REQUEST","GET_ALL_HEADPHONE_SUCCESS","GET_ALL_HEADPHONE_FAIL","GET_TOP_GAMES_REQUEST","GET_TOP_GAMES_SUCCESS","GET_TOP_GAMES_FAIL","GET_ALL_GAMES_REQUEST","GET_ALL_GAMES_SUCCESS","GET_ALL_GAMES_FAIL","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","type","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","YourCartText","dispatch","useDispatch","user","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubNavbar","borderRight","Footer","Row","Col","getProductsList","pageNumber","a","axios","get","data","payload","response","message","getSingleProduct","getCarouselProducts","error","Rating","rating","text","defaultProps","Product","product","link","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","Message","content","Alert","TopProductTitle","p","TopProduct","loading","itemArray","itemLink","listItemLink","justifyContent","alignItems","Spinner","animation","size","height","length","map","tv","sm","md","lg","xl","Loading","CarouselSection","carouselProducts","Carousel","pause","marginBottom","nextIcon","prevIcon","interval","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","topTVs","topTV","topTVLoading","topPhones","topPhonesLoading","topHeadphone","topHeadphoneLoading","topGames","topGamesLoading","dismissible","Heading","ProductImage","ProductInfo","props","description","ListGroup","addItemToCart","qty","getState","countInStock","setItem","JSON","stringify","cart","cartItems","console","log","ProductCard","useHistory","quantity","setQuantity","Array","keys","x","disabled","ReviewContainer","ReviewSection","singleProduct","userReviewError","deleteReviewError","setRating","comment","setComment","onSubmitReviewHandler","productID","config","headers","token","post","createReview","onDeleteReviewHandler","reviewId","reviewID","delete","reviews","Group","controlId","Label","row","review","cursor","createdAt","substring","LapTopTable","laptopInfo","singleLaptop","details","Table","striped","bordered","hover","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","TVTable","TVDetail","tvsDetail","screenSizes","screenType","resolutionInPixel","refreshRate","usbPorts","sizeHeightWidthDepth","warranty","PhoneTable","phoneInfo","singlePhone","phoneDetail","phoneOperatingSystem","networkCompability","DualSim","Colour","DeviceScreen","Resolution","InternalMemory","FrontCamera","RearCamera","Processor","Wifi","Warranty","HeadphoneTable","headphoneInfo","singleHeadphonePhone","headphoneDetail","HeadphoneType","VoiceControl","NoiseReductionType","BuiltInMicrophone","GameTable","gameInfo","singleGame","gameDetail","Platform","GamingGerne","ConsumerAdvice","GameDeveloper","GamePublisher","ProductScreen","match","userReview","userReviewSuccess","success","deleteReview","deleteReviewSuccess","params","CartScreen","productId","search","Number","split","removeFromCartHandler","removeItemFromCart","item","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","email","setEmail","password","setPassword","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","responsive","totalPrice","isPaid","paidAt","display","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","pages","page","Pagination","active","ProductListAdminScreen","productsList","products","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","laptop","SearchScreen","TVScreen","allTVs","tvs","PhonesScreen","allPhones","phone","HeadphonesScreen","allHeadphone","headPhones","headphone","GamesScreen","allGames","game","ScrollToTop","prevProps","this","scrollTo","React","Component","MarginContainer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","initialUserState","initialDetailState","initialReviewState","deleteReviewInitalState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","top_TV_Initial_State","all_TVs_Initial_State","topPhonesInitialState","allPhonesInitialState","topHeadPhoneInitialState","allHeadphonesInitialState","topGameInitalState","allGamesInitialState","reducer","combineReducers","action","existedItem","find","filter","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.658c716c.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_TO_CART = 'REMOVE_PRODUCT_TO_CART';\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//TODO: DELETE A REVIEW OF A PRODUCT BASED ON USERID, PRODUCTID AND REVIEW ID\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';\r\n\r\n//!TVS \r\n//TODO: GET TOP 3 TVS\r\nexport const GET_TOP_TVS_REQUEST = 'GET_TOP_TVS_REQUEST';\r\nexport const GET_TOP_TVS_SUCCESS = 'GET_TOP_TVS_SUCCESS';\r\nexport const GET_TOP_TVS_FAIL = 'GET_TOP_TVS_FAIL';\r\n\r\n//TODO: GET_ALL_TVS \r\nexport const GET_ALL_TVS_REQUEST = 'GET_ALL_TVS_REQUEST';\r\nexport const GET_ALL_TVS_SUCCESS = 'GET_ALL_TVS_SUCCESS';\r\nexport const GET_ALL_TVS_FAIL = 'GET_ALL_TVS_FAIL';\r\n\r\n//! PHONES\r\n//TODO: GET TOP 3 PHONES\r\nexport const GET_TOP_PHONES_REQUEST = 'GET_TOP_PHONES_REQUEST';\r\nexport const GET_TOP_PHONES_SUCCESS = 'GET_TOP_PHONES_SUCCESS';\r\nexport const GET_TOP_PHONES_FAIL = 'GET_TOP_PHONES_FAIL';\r\n\r\n//TODO: GET ALL PHONES\r\nexport const GET_ALL_PHONES_REQUEST = 'GET_ALL_PHONES_REQUEST';\r\nexport const GET_ALL_PHONES_SUCCESS = 'GET_ALL_PHONES_SUCCESS';\r\nexport const GET_ALL_PHONES_FAIL = 'GET_ALL_PHONES_FAIL';\r\n\r\n//! HEAD-PHONES\r\n//TODO: GET TOP 3 HEADPHONES \r\nexport const GET_TOP_HEADPHONE_REQUEST = 'GET_TOP_HEADPHONE_REQUEST';\r\nexport const GET_TOP_HEADPHONE_SUCCESS = 'GET_TOP_HEADPHONE_SUCCESS';\r\nexport const GET_TOP_HEADPHONE_FAIL = 'GET_TOP_HEADPHONE_FAIL';\r\n\r\n//TODO: GET ALL HEADPHONES\r\nexport const GET_ALL_HEADPHONE_REQUEST = 'GET_ALL_HEADPHONE_REQUEST';\r\nexport const GET_ALL_HEADPHONE_SUCCESS = 'GET_ALL_HEADPHONE_SUCCESS';\r\nexport const GET_ALL_HEADPHONE_FAIL = 'GET_ALL_HEADPHONE_FAIL';\r\n\r\n//! GAMES\r\n//TODO: GET TOP 3 GAMES\r\nexport const GET_TOP_GAMES_REQUEST = 'GET_TOP_GAMES_REQUEST';\r\nexport const GET_TOP_GAMES_SUCCESS = 'GET_TOP_GAMES_SUCCESS';\r\nexport const GET_TOP_GAMES_FAIL = 'GET_TOP_GAMES_FAIL';\r\n\r\n//TODO: GET ALL GAMES \r\nexport const GET_ALL_GAMES_REQUEST = 'GET_ALL_GAMES_REQUEST';\r\nexport const GET_ALL_GAMES_SUCCESS = 'GET_ALL_GAMES_SUCCESS';\r\nexport const GET_ALL_GAMES_FAIL = 'GET_ALL_GAMES_FAIL';","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 991);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '60%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '60%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {\r\n    GET_ORDER_OF_USER_RESET, \r\n    GET_USER_DETAILS_RESET, \r\n    GET_ALL_USERS_RESET,\r\n    DELETE_REVIEW_RESET\r\n} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst YourCartText = styled.div`\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    margin-left: 8px;\r\n    \r\n    @media (max-width: 1250px) {\r\n        display: none;\r\n    }\r\n\r\n    @media (max-width: 990px) {\r\n        display: inline;\r\n    }\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 990\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { !screenWidth  < 991 ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth  < 991 ? (\r\n                        <NavDropdown title={`Products`} style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/gaming\">\r\n                                    <NavDropdown.Item>Gaming</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '2rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Your Cart\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user && user.isAdmin ? (\r\n                            <NavDropdown title={<i className=\"fas fa-crown\" style={{ fontSize: '1.2rem', marginRight: '0rem', color: 'black'}}></i>} id=\"adminuser\">\r\n                                <LinkContainer to=\"/admin/usersList\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productsList\">\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/ordersList\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i className=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                            <AddBlackColor>\r\n                                <i className='fas fa-user' style={{ marginRight: 8, fontSize: '1.2rem'}}></i>\r\n                                Sign In\r\n                            </AddBlackColor>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <div style={{width: screenWidth  < 991 ? '100%' : '0%'}}>\r\n                {screenWidth  < 991 ? (<SearchBox />) : null}\r\n            </div>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/createreview`, { rating, comment, productID }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteReview = (productID, reviewID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_REVIEW_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/deletereview/${productID}/${reviewID}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 990);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <Link to=\"/laptops\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/tvs\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/phones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/headphones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/gaming\" style={{width: '100%'}}>\r\n                <NavItem style={{borderRight: 'none'}}>\r\n                    <i className=\"fas fa-gamepad\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Gaming\r\n                </NavItem>\r\n            </Link>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#2b2e30',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport Rating from './Rating';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({ product, link = '/product' }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    $ {product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({content, variant}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React from 'react'\r\nimport { Row, Col, Spinner, Button } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport Message from '../Message';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TopProductTitle = styled.p`\r\n    text-align: center;\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0rem;\r\n    font-family: Rokkit;\r\n\r\n    & a:hover {\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media only screen and (max-width: 450px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst TopProduct = ({ loading, itemArray, title, itemLink, listItemLink }) => {\r\n    return (\r\n        <Container>\r\n            <TopProductTitle><Link to={listItemLink}>{title}</Link></TopProductTitle>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n               { !loading ? itemArray.length > 0 ? itemArray.map((tv) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                           <Product product={tv} link={itemLink}/>\r\n                        </Col>\r\n                    );\r\n                }) : (\r\n                    <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n               }\r\n            </Row>\r\n\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                <Link to={listItemLink}>\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n            </Row>       \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopProduct;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel \r\n            pause='hover' \r\n            style={{ marginBottom: '2rem', backgroundColor: 'yellow'}}\r\n            nextIcon={<i className=\"fas fa-arrow-right\" style={{color: 'black', fontSize: '2rem'}}></i>}\r\n            prevIcon={<i className=\"fas fa-arrow-left\" style={{color: 'black', fontSize: '2rem'}}></i>}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id} interval={5000}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        {product.name} ({product.price})\r\n                    </Carousel.Caption> \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//TODO: Actions\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport {getTopTVs} from '../redux/actions/tvActions';\r\nimport {getTopPhones} from '../redux/actions/phoneActions';\r\nimport {getTopHeadphone} from '../redux/actions/headphoneActions';\r\nimport {getTopGames} from '../redux/actions/gameActions';\r\n\r\n//TODO: Components\r\nimport TopProduct from '../components/TopProduct (Home)/TopProduct';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n    const { topTV, loading: topTVLoading } = useSelector(state => state.topTVs);\r\n    const { topPhones, loading: topPhonesLoading } = useSelector(state => state.topPhones);\r\n    const { topHeadphone, loading: topHeadphoneLoading } = useSelector(state => state.topHeadphone);\r\n    const { topGames, loading: topGamesLoading } = useSelector(state => state.topGames);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get carousel products for the first time \r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top laptops for the first time \r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top tvs for the first time \r\n        if (topTV.length === 0) {\r\n            dispatch(getTopTVs());\r\n        }\r\n    }, [dispatch, topTV]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-phone for the first time\r\n        if (topPhones.length === 0) {\r\n            dispatch(getTopPhones());\r\n        }\r\n    }, [dispatch, topPhones]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-headphone for the first time\r\n        if (topHeadphone.length === 0) {\r\n            dispatch(getTopHeadphone());\r\n        }\r\n    }, [dispatch, topHeadphone]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-games for the first time\r\n        if (topGames.length === 0) {\r\n            dispatch(getTopGames());\r\n        }\r\n    }, [dispatch, topGames]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                    <Helmet title=\"Welcome to Proshop\" href=\"/\" />\r\n                \r\n                    <CarouselSection \r\n                        carouselProducts={carouselProducts} \r\n                        loading={carouselLoading} \r\n                        error={carouselError} \r\n                    />\r\n\r\n                    {\r\n                        topLaptops.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topLaptopLoading} \r\n                                itemArray={topLaptops} \r\n                                title=\"Our Top Tier MSI Laptops\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/laptops\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topTV.length !== 0 ? (      \r\n                            <TopProduct \r\n                                loading={topTVLoading} \r\n                                itemArray={topTV} \r\n                                title=\"Best TVs for 2020\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/tvs\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topPhones.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topPhonesLoading}\r\n                                itemArray={topPhones}\r\n                                title=\"New Phones 2020\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/phones\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topHeadphone.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topHeadphoneLoading}\r\n                                itemArray={topHeadphone}\r\n                                title=\"Great Headphones for You\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/headphones\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n\r\n                    {\r\n                        topGames.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topGamesLoading}\r\n                                itemArray={topGames}\r\n                                title=\"For Game Lovers\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/gaming\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_TVS_REQUEST\r\n        });\r\n\r\n        const {data} = await axios.get('/api/products/tvs/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_TVS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/tvs');\r\n\r\n        dispatch({\r\n            type: GET_ALL_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL,\r\n\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopHeadphone = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllHeadPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n        });\r\n    }\r\n}\r\n\r\n","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games');\r\n\r\n        dispatch({\r\n            type: GET_ALL_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image}) => {\r\n    return (\r\n        <Col md={8}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description} = props;\r\n\r\n    return (\r\n        <Col md={12}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_TO_CART,\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const data = (await axios.get(`/api/products/${id}`)).data;\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n    } catch(error) {\r\n        console.log(error);\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_TO_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport { createReview, deleteReview } from '../../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET, DELETE_REVIEW_RESET } from '../../redux/actions/actionTypes';\r\nimport Message from '../Message';\r\nimport Rating from '../../components/Rating';\r\nimport styled from 'styled-components';\r\n\r\nconst ReviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst ReviewSection = ({ singleProduct, user, userReviewError, deleteReviewError }) => {\r\n    const dispatch = useDispatch();\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const onDeleteReviewHandler = (e, reviewId) => {\r\n        e.preventDefault();\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(deleteReview(singleProduct._id, reviewId));\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {\r\n                    deleteReviewError ? (\r\n                        <Message content=\"Delete Review Failed, Please Try Again :(\" variant=\"danger\" />\r\n                    ) : null\r\n                }\r\n\r\n                { singleProduct.reviews.length === 0 ? (\r\n                    <>\r\n                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                        { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                    </>\r\n                    ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { singleProduct.reviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <ReviewContainer>\r\n                                    <strong>{review.name}</strong>\r\n                                    <i \r\n                                        className=\"fas fa-trash\" \r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onClick={(e) => onDeleteReviewHandler(e, review._id)}></i>\r\n                                </ReviewContainer>\r\n\r\n                                <Rating rating={review.rating} />\r\n                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                <p>{ review.comment }</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Post A Review</h2>\r\n                            {userReviewError ? (\r\n                                <Message \r\n                                    variant=\"danger\" \r\n                                    content={ userReviewError === 'User has already review this product'\r\n                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                            ) : null}\r\n                            { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReviewSection\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst LapTopTable = (props) => {\r\n    const laptopInfo = props.singleLaptop.details;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Display Size (inches)</td>\r\n                      <td>{laptopInfo.displaySizeInches}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (Pixels)</td>\r\n                      <td>{laptopInfo.resolutionPixels}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{laptopInfo.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Display type</td>\r\n                      <td>{laptopInfo.displayType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Type</td>\r\n                      <td>{laptopInfo.proccessorType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Cores</td>\r\n                      <td>{laptopInfo.proccessorCores}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Memory Cache</td>\r\n                      <td>{laptopInfo.processorMemoryCache}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorMaxClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Graphics processor</td>\r\n                      <td>{laptopInfo.graphicsProcessor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>RAM (GB)</td>\r\n                      <td>{laptopInfo.ram}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>SSD Storage</td>\r\n                      <td>{laptopInfo.ssdStorage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB 2.0 Ports</td>\r\n                      <td>{laptopInfo.usbTwoPointOPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB C Ports</td>\r\n                      <td>{laptopInfo.usbCPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Card Reader</td>\r\n                      <td>{laptopInfo.cardReader}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Web Cam</td>\r\n                      <td>{laptopInfo.webCam}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{laptopInfo.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Operating system</td>\r\n                      <td>{laptopInfo.operatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{laptopInfo.manufacturersWarantty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LapTopTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst TVTable = (props) => {\r\n    const TVDetail = props.tvsDetail; \r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Screen Size (inches)</td>\r\n                      <td>{TVDetail.screenSizes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Type</td>\r\n                      <td>{TVDetail.screenType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{TVDetail.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (pixels)</td>\r\n                      <td>{TVDetail.resolutionInPixel}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Refresh Rate</td>\r\n                      <td>{TVDetail.refreshRate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wifi</td>\r\n                      <td>{TVDetail.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB Ports</td>\r\n                      <td>{TVDetail.usbPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Height x Width x Depth</td>\r\n                      <td>{TVDetail.sizeHeightWidthDepth}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Warranty</td>\r\n                      <td>{TVDetail.warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TVTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst PhoneTable = (props) => {\r\n    const phoneInfo = props.singlePhone.phoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Operating System</td>\r\n                      <td>{phoneInfo.phoneOperatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Network Compability</td>\r\n                      <td>{phoneInfo.networkCompability}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dual Sim</td>\r\n                      <td>{phoneInfo.DualSim}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{phoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Devices Screen</td>\r\n                      <td>{phoneInfo.DeviceScreen}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution</td>\r\n                      <td>{phoneInfo.Resolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Internal Memory</td>\r\n                      <td>{phoneInfo.InternalMemory}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Front Camera</td>\r\n                      <td>{phoneInfo.FrontCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rear Camera</td>\r\n                      <td>{phoneInfo.RearCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor</td>\r\n                      <td>{phoneInfo.Processor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{phoneInfo.Wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{phoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PhoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst HeadphoneTable = (props) => {\r\n    const headphoneInfo = props.singleHeadphonePhone.headphoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Headphone Type</td>\r\n                      <td>{headphoneInfo.HeadphoneType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{headphoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Voice Control</td>\r\n                      <td>{headphoneInfo.VoiceControl}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Noise Reduction Type</td>\r\n                      <td>{headphoneInfo.NoiseReductionType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Built-In Microphone</td>\r\n                      <td>{headphoneInfo.BuiltInMicrophone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{headphoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default HeadphoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst GameTable = (props) => {\r\n    const gameInfo = props.singleGame.gameDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Platform</td>\r\n                      <td>{gameInfo.Platform}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Gaming Gerne</td>\r\n                      <td>{gameInfo.GamingGerne}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rating</td>\r\n                      <td>{gameInfo.Rating}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Consumer Advice</td>\r\n                      <td>{gameInfo.ConsumerAdvice}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Developer</td>\r\n                      <td>{gameInfo.GameDeveloper}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Publisher</td>\r\n                      <td>{gameInfo.GamePublisher}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default GameTable;\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport ReviewSection from '../components/ReviewSection/ReviewSection';\r\nimport Loading from '../components/Loading';\r\nimport Helmet from '../components/Helmet';\r\nimport LapTopTable from '../components/ProductDetail/LaptopTable/LapTopTable';\r\nimport TVTable from '../components/ProductDetail/TvTable/TVTable';\r\nimport PhoneTable from '../components/ProductDetail/PhoneTable/PhoneTable';\r\nimport HeadphoneTable from '../components/ProductDetail/HeadphoneTable/HeadphoneTable';\r\nimport GameTable from '../components/ProductDetail/GameTable/GameTable';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const {success: deleteReviewSuccess, error:  deleteReviewError } = useSelector(state => state.deleteReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess, deleteReviewSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />                            \r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                        </Row>\r\n                        {\r\n                            singleProduct.details.proccessorCores ? (\r\n                                <LapTopTable singleLaptop={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.tvsDetail.sizeHeightWidthDepth ? (\r\n                                <TVTable tvsDetail={singleProduct.tvsDetail} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.phoneDetail.DualSim ? (\r\n                                <PhoneTable singlePhone={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.headphoneDetail.HeadphoneType ? (\r\n                                <HeadphoneTable singleHeadphonePhone={singleProduct} />\r\n                            ) : null\r\n                        }                        \r\n                        {\r\n                            singleProduct.gameDetail.Platform ? (\r\n                                <GameTable singleGame={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct && user  ? (\r\n                                <ReviewSection \r\n                                    singleProduct={singleProduct} \r\n                                    user={user} \r\n                                    userReviewError={userReviewError} \r\n                                    deleteReviewError={deleteReviewError} \r\n                                />\r\n                            ) : null\r\n                        }\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    const { user } = useSelector(state => state.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addItemToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <h2>Your Cart is empty <Link to=\"/\">Go Back</Link></h2> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addItemToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/laptops`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useEffect} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst SearchScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading } = productsList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                { !loading ? products.length > 0 ? products.map((product) => {\r\n                     return(\r\n                         <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                            <Product product={product}/>\r\n                         </Col>\r\n                     );\r\n                 }) : (\r\n                     <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                 ) : <Loading /> \r\n                }\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTVs } from '../redux/actions/tvActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst TVScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { tvs, loading, error } = useSelector(state => state.allTVs);\r\n    \r\n    useEffect(() => {\r\n        if (tvs.length === 0) {\r\n            dispatch(getAllTVs());\r\n        }\r\n    }, [dispatch, tvs]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"TVs | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : tvs.map((tv) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                        <Product product={tv} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TVScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPhones } from '../redux/actions/phoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PhonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allPhones, loading, error } = useSelector(state => state.allPhones);\r\n    \r\n    useEffect(() => {\r\n        if (allPhones.length === 0) {\r\n            dispatch(getAllPhones());\r\n        }\r\n    }, [dispatch, allPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Phones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allPhones.map((phone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={phone._id}>\r\n                        <Product product={phone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PhonesScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllHeadPhones } from '../redux/actions/headphoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HeadphonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { headPhones, loading, error } = useSelector(state => state.allHeadphone);\r\n    \r\n    useEffect(() => {\r\n        if (headPhones.length === 0) {\r\n            dispatch(getAllHeadPhones());\r\n        }\r\n    }, [dispatch, headPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Headphones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : headPhones.map((headphone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={headphone._id}>\r\n                        <Product product={headphone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HeadphonesScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllGames} from '../redux/actions/gameActions';\r\n\r\nconst GamesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allGames, loading, error } = useSelector(state => state.allGames);\r\n    \r\n    useEffect(() => {\r\n        if (allGames.length === 0) {\r\n            dispatch(getAllGames());\r\n        }\r\n    }, [dispatch, allGames]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Gaming | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allGames.map((game) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={game._id}>\r\n                            <Product product={game} link={`/games`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GamesScreen;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport TVScreen from './screens/TVScreen';\nimport PhonesScreen from './screens/phonesScreen';\nimport HeadphonesScreen from './screens/HeadphoneScreen';\nimport GamesScreen from './screens/GamesScreen';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport styled from 'styled-components';\n\nconst MarginContainer = styled.div`\nmargin-top: 0%;  \nmargin-left: 5%;\nmargin-right: 5%;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n        <Header/>\n        <SubNavbar />\n      <main className='py-3'>\n        <MarginContainer>  \n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/tvs\" component={TVScreen} exact />\n          <Route path=\"/phones\" component={PhonesScreen} exact />\n          <Route path=\"/headphones\" component={HeadphonesScreen} exact />\n          <Route path=\"/gaming\" component={GamesScreen} exact />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={SearchScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </MarginContainer>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    REMOVE_PRODUCT_TO_CART, \r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            const item = action.payload;\r\n\r\n            const existedItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existedItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_PRODUCT_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    DELETE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst deleteReviewInitalState = {\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst deleteReviewReducer = (state = deleteReviewInitalState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                loading: false,\r\n                error: null,\r\n                success: false  \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst top_TV_Initial_State = {\r\n    topTV: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getTopTVs = (state = top_TV_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topTV: [...action.payload]\r\n            }\r\n        case GET_TOP_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst all_TVs_Initial_State = {\r\n    tvs: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getALLTVs = (state = all_TVs_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tvs: [...action.payload]\r\n            }\r\n        case GET_ALL_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topPhonesInitialState = {\r\n    topPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topPhonesReducer = (state = topPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_PHONES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topPhones: [...action.payload]\r\n            }\r\n        case GET_TOP_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allPhonesInitialState = {\r\n    allPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allPhonesReducer = (state = allPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PHONES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL,\r\n\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topHeadPhoneInitialState = {\r\n    topHeadphone: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topHeadphoneReducer = (state = topHeadPhoneInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topHeadphone: [...action.payload]\r\n            }\r\n        case GET_TOP_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allHeadphonesInitialState = {\r\n    headPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allHeadphonesReducer = (state = allHeadphonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                headPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topGameInitalState = {\r\n    topGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topGameReducer = (state = topGameInitalState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topGames: [...action.payload]\r\n            }\r\n        case GET_TOP_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allGamesInitialState = {\r\n    allGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allGamesReducer = (state = allGamesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allGames: [...action.payload]\r\n            }\r\n        case GET_ALL_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\nimport {\r\n    getTopTVs,\r\n    getALLTVs\r\n} from './reducers/tvReducers';\r\nimport {\r\n    topPhonesReducer,\r\n    allPhonesReducer\r\n} from './reducers/phoneReducers';\r\nimport {\r\n    topHeadphoneReducer,\r\n    allHeadphonesReducer\r\n} from './reducers/headphoneReducer';\r\nimport {\r\n    topGameReducer,\r\n    allGamesReducer\r\n} from './reducers/gameReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    deleteReview: deleteReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer,\r\n    topTVs: getTopTVs,\r\n    allTVs: getALLTVs,\r\n    topPhones: topPhonesReducer,\r\n    allPhones: allPhonesReducer,\r\n    topHeadphone: topHeadphoneReducer,\r\n    allHeadphone: allHeadphonesReducer,\r\n    topGames: topGameReducer,\r\n    allGames: allGamesReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}