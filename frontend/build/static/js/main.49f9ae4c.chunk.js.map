{"version":3,"sources":["redux/actions/actionTypes.js","components/SearchBox.js","components/Header.js","redux/actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","redux/actions/productActions.js","components/Message.js","components/Paginate.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","redux/actions/cartActions.js","components/ProductDetail/ProductCard.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_TO_CART","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","withRouter","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","Control","type","name","onChange","target","value","placeholder","className","Button","variant","dispatch","useDispatch","user","useSelector","state","Navbar","bg","collapseOnSelect","expand","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","href","style","marginRight","isAdmin","NavDropdown","title","Item","onClick","localStorage","removeItem","Footer","Row","Col","Rating","rating","text","color","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","getProductsList","pageNumber","a","axios","get","data","payload","response","message","getSingleProduct","getCarouselProducts","error","Message","content","Alert","Paginate","pages","page","Pagination","Array","keys","map","x","active","Loading","lg","size","Spinner","animation","width","height","CarouselSection","carouselProducts","loading","useEffect","Carousel","pause","marginBottom","Image","alt","fluid","Caption","HelmetSection","start","String","window","location","Helmet","charSet","rel","HomeScreen","match","params","productsList","products","carouselLoading","carouselError","length","dismissible","Heading","justifyContent","alignItems","sm","md","xl","ProductImage","ProductInfo","props","description","ListGroup","addItemToCart","qty","getState","countInStock","setItem","JSON","stringify","cart","cartItems","console","log","ProductCard","useHistory","quantity","setQuantity","padding","disabled","ProductScreen","setRating","comment","setComment","singleProduct","userReview","userReviewSuccess","success","userReviewError","onSubmitReviewHandler","productID","config","headers","token","post","createReview","reviews","Group","controlId","Label","row","review","createdAt","substring","CartScreen","productId","search","Number","split","removeFromCartHandler","removeItemFromCart","item","rounded","fontSize","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","email","setEmail","password","setPassword","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","details","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","display","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","delete","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","ProductListAdminScreen","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","initialUserState","initialDetailState","initialReviewState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","reducer","combineReducers","action","existedItem","find","filter","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.49f9ae4c.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_TO_CART = 'REMOVE_PRODUCT_TO_CART';\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\">\r\n            <Form.Control \r\n                type='text' \r\n                name=\"q\" \r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder=\"Search for Product\"\r\n                className=\"mr-sm-2 ml-sm-5\">\r\n            </Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-info\" className=\"p-2\">Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React from 'react'\r\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {GET_ORDER_OF_USER_RESET, GET_USER_DETAILS_RESET, GET_ALL_USERS_RESET} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n            <Container>\r\n                <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>MERN Shops</Navbar.Brand>\r\n                </LinkContainer>\r\n                \r\n                <SearchBox />\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                \r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <i className='fas fa-shopping-cart' style={{ marginRight: 8 }}></i>\r\n                          Cart\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user && user.isAdmin ? (\r\n                            <NavDropdown title=\"Admin\" id=\"adminuser\" style={{marginRight: '0rem'}}>\r\n                                <LinkContainer to=\"/admin/usersList\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productsList\">\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/ordersList\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={user.name} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                                <i className='fas fa-user' style={{ marginRight: 8 }}></i>\r\n                                Sign In\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n                \r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productID}/review`, { rating, comment }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#2b2e30',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport Rating from './Rating';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    $ {product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({content, variant}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel pause='hover' className='bg-dark' style={{ marginBottom: '2rem' }}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h4>{product.name} ({product.price})</h4>\r\n                    </Carousel.Caption>            \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport Product from '../components/Product';\r\nimport { Col, Row, Spinner, Alert} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList, getCarouselProducts} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch()\r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading, error } = productsList;\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    useEffect(() => {\r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {error.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                <Helmet title=\"Welcome to Proshop\" href=\"\" />\r\n                <CarouselSection carouselProducts={carouselProducts} loading={carouselLoading} error={carouselError} />\r\n                <h1>Products : </h1>\r\n                <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                   { !loading ? products.length > 0 ? products.map((product) => {\r\n                        return(\r\n                            <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                               <Product product={product}/>\r\n                            </Col>\r\n                        );\r\n                    }) : (\r\n                        <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                    ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n                   }\r\n                </Row>\r\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image }) => {\r\n    return (\r\n        <Col md={5}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description } = props;\r\n\r\n    return (\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_TO_CART,\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const data = (await axios.get(`/api/products/${id}`)).data;\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n    } catch(error) {\r\n        console.log(error);\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_TO_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={3}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert, Col, ListGroup, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { createReview } from '../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET } from '../redux/actions/actionTypes';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Rating from '../components/Rating';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess]);\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h2>Reviews</h2>\r\n                                { singleProduct.reviews.length === 0 ? (\r\n                                    <>\r\n                                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                                        { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                    </>\r\n                                    ) : (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        { singleProduct.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating rating={review.rating} />\r\n                                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                                <p>{ review.comment }</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Post A Review</h2>\r\n                                            {userReviewError ? (\r\n                                                <Message \r\n                                                    variant=\"danger\" \r\n                                                    content={ userReviewError === 'User has already review this product'\r\n                                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                                            ) : null}\r\n                                            { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    const { user } = useSelector(state => state.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addItemToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <h2>Your Cart is empty <Link to=\"/\">Go Back</Link></h2> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addItemToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, success, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const deleteHandler = (id) => {\r\n\r\n    }\r\n\r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\n\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className='py-3'>\n        <Container>\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    REMOVE_PRODUCT_TO_CART, \r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            const item = action.payload;\r\n\r\n            const existedItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existedItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_PRODUCT_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    carouselProducts: carouselProductReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}