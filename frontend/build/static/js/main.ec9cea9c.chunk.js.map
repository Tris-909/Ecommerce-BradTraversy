{"version":3,"sources":["redux/actions/actionTypes.js","components/SearchBox.js","components/Header.js","redux/actions/userActions.js","components/SubNavbar.js","components/Footer.js","redux/actions/productActions.js","redux/actions/wishListActions.js","redux/actions/cartActions.js","components/Rating.js","components/Message.js","components/Product.js","components/TopProduct (Home)/TopProduct.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","redux/actions/tvActions.js","redux/actions/phoneActions.js","redux/actions/headphoneActions.js","redux/actions/gameActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","components/ProductDetail/ProductCard.js","components/ReviewSection/ReviewSection.js","components/ProductDetail/LaptopTable/LapTopTable.js","components/ProductDetail/TvTable/TVTable.js","components/ProductDetail/PhoneTable/PhoneTable.js","components/ProductDetail/HeadphoneTable/HeadphoneTable.js","components/ProductDetail/GameTable/GameTable.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SearchScreen.js","screens/TVScreen.js","screens/phonesScreen.js","screens/HeadphoneScreen.js","screens/GamesScreen.js","components/WishList Product/WishListProduct.js","screens/WishListScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/wishListReducer.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/reducers/tvReducers.js","redux/reducers/phoneReducers.js","redux/reducers/headphoneReducer.js","redux/reducers/gameReducer.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","ADD_PRODUCT_TO_CART_SUCCES","ADD_PRODUCT_TO_CART_RESET","REMOVE_PRODUCT_TO_CART","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","GET_WISH_LIST_REQUEST","GET_WISH_LIST_SUCCESS","GET_WISH_LIST_FAIL","ADD_ITEM_TO_WISH_LIST_REQUEST","ADD_ITEM_TO_WISH_LIST_SUCCESS","ADD_ITEM_TO_WISH_LIST_FAIL","ADD_ITEM_TO_WISH_LIST_RESET","REMOVE_ITEM_FROM_WISH_LIST_REQUEST","REMOVE_ITEM_FROM_WISH_LIST_SUCCESS","REMOVE_ITEM_FROM_WISH_LIST_FAIL","REMOVE_ITEM_FROM_WISH_LIST_RESET","REMOVE_ALL_ITEMS_WISHLIST_REQUEST","REMOVE_ALL_ITEMS_WISHLIST_SUCCESS","REMOVE_ALL_ITEMS_WISHLIST_FAIL","REMOVE_ALL_ITEMS_WISHLIST_RESET","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","DELETE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","GET_TOP_TVS_REQUEST","GET_TOP_TVS_SUCCESS","GET_TOP_TVS_FAIL","GET_ALL_TVS_REQUEST","GET_ALL_TVS_SUCCESS","GET_ALL_TVS_FAIL","GET_TOP_PHONES_REQUEST","GET_TOP_PHONES_SUCCESS","GET_TOP_PHONES_FAIL","GET_ALL_PHONES_REQUEST","GET_ALL_PHONES_SUCCESS","GET_ALL_PHONES_FAIL","GET_TOP_HEADPHONE_REQUEST","GET_TOP_HEADPHONE_SUCCESS","GET_TOP_HEADPHONE_FAIL","GET_ALL_HEADPHONE_REQUEST","GET_ALL_HEADPHONE_SUCCESS","GET_ALL_HEADPHONE_FAIL","GET_TOP_GAMES_REQUEST","GET_TOP_GAMES_SUCCESS","GET_TOP_GAMES_FAIL","GET_ALL_GAMES_REQUEST","GET_ALL_GAMES_SUCCESS","GET_ALL_GAMES_FAIL","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","type","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","YourCartText","dispatch","useDispatch","user","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","marginLeft","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubNavbar","borderRight","Footer","Row","Col","getProductsList","pageNumber","a","axios","get","data","payload","response","message","getSingleProduct","getCarouselProducts","error","getWishList","getState","config","headers","token","addItemToWishList","itemId","productName","productPrice","productImage","productRating","productNumReviews","post","removeAnItemFromWishList","wishListItemId","delete","addItemToCart","qty","product","_id","image","price","countInStock","setItem","JSON","stringify","cart","cartItems","console","log","Rating","rating","text","defaultProps","XSymbol","strong","Message","content","show","setShow","Alert","position","display","marginBottom","onClickHandler","CardMoneyText","FootProductContainer","ButtonContainer","Product","link","isLoved","setIsLoved","wishListID","setWishListID","addItemSuccess","wishList","addItemToWishListSuccess","loading","success","removeItemFromWishList","map","item","Card","Img","src","Body","Title","as","Text","numReviews","length","cursor","onAddItemToCartHandler","onRemoveItemFromWishList","onAddItemToWishList","TopProductTitle","p","TopProduct","itemArray","itemLink","listItemLink","justifyContent","alignItems","Spinner","animation","size","height","tv","sm","md","lg","xl","Loading","CarouselSection","carouselProducts","Carousel","pause","nextIcon","prevIcon","interval","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","topTVs","topTV","topTVLoading","topPhones","topPhonesLoading","topHeadphone","topHeadphoneLoading","topGames","topGamesLoading","removeItemFromWishListSuccess","dismissible","Heading","ProductImage","ProductInfo","props","description","ListGroup","ProductCard","useHistory","quantity","setQuantity","Array","keys","x","disabled","ReviewContainer","ReviewSection","singleProduct","userReviewError","deleteReviewError","setRating","comment","setComment","onSubmitReviewHandler","productID","createReview","onDeleteReviewHandler","reviewId","reviewID","reviews","Group","controlId","Label","row","review","createdAt","substring","LapTopTable","laptopInfo","singleLaptop","details","Table","striped","bordered","hover","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","TVTable","TVDetail","tvsDetail","screenSizes","screenType","resolutionInPixel","refreshRate","usbPorts","sizeHeightWidthDepth","warranty","PhoneTable","phoneInfo","singlePhone","phoneDetail","phoneOperatingSystem","networkCompability","DualSim","Colour","DeviceScreen","Resolution","InternalMemory","FrontCamera","RearCamera","Processor","Wifi","Warranty","HeadphoneTable","headphoneInfo","singleHeadphonePhone","headphoneDetail","HeadphoneType","VoiceControl","NoiseReductionType","BuiltInMicrophone","GameTable","gameInfo","singleGame","gameDetail","Platform","GamingGerne","ConsumerAdvice","GameDeveloper","GamePublisher","ProductScreen","match","userReview","userReviewSuccess","deleteReview","deleteReviewSuccess","params","CartScreen","productId","search","Number","split","removeFromCartHandler","removeItemFromCart","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","email","setEmail","password","setPassword","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","pages","page","Pagination","active","ProductListAdminScreen","productsList","products","createdProduct","createSuccess","deleteProduct","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","laptop","SearchScreen","TVScreen","allTVs","tvs","PhonesScreen","allPhones","phone","HeadphonesScreen","allHeadphone","headPhones","headphone","GamesScreen","allGames","game","WishListProduct","showList","flexDirection","FlexContainer","DisplayContainer","DisplayButtonContainer","ClearWishListButton","button","WishListText","NoItemText","WishListScreen","showGrid","setShowGrid","removeAllItemsFromWishListSuccess","removeAllItemsFromWishList","clearWishList","visibility","swapToShowGridMode","swapToShowListMode","ScrollToTop","prevProps","this","scrollTo","React","Component","MarginContainer","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","wishListInitialState","addItemToWishListInitialState","removeItemFromWishListInitialState","removeAllItemInitlaState","initialUserState","initialDetailState","initialReviewState","deleteReviewInitalState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","top_TV_Initial_State","all_TVs_Initial_State","topPhonesInitialState","allPhonesInitialState","topHeadPhoneInitialState","allHeadphonesInitialState","topGameInitalState","allGamesInitialState","reducer","combineReducers","action","existedItem","find","filter","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ec9cea9c.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const ADD_PRODUCT_TO_CART_SUCCES = 'ADD_PRODUCT_TO_CART_SUCCES';\r\nexport const ADD_PRODUCT_TO_CART_RESET = 'ADD_PRODUCT_TO_CART_RESET';\r\n\r\nexport const REMOVE_PRODUCT_TO_CART = 'REMOVE_PRODUCT_TO_CART';\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! WISH-LIST\r\n//TODO: GET USER WISHLIST\r\nexport const GET_WISH_LIST_REQUEST = 'GET_WISH_LIST_REQUEST';\r\nexport const GET_WISH_LIST_SUCCESS = 'GET_WISH_LIST_SUCCESS';\r\nexport const GET_WISH_LIST_FAIL = 'GET_WISH_LIST_FAIL';\r\n\r\n//TODO: ADD AN ITEM TO WISHLIST\r\nexport const ADD_ITEM_TO_WISH_LIST_REQUEST = 'ADD_ITEM_TO_WISH_LIST_REQUEST';\r\nexport const ADD_ITEM_TO_WISH_LIST_SUCCESS = 'ADD_ITEM_TO_WISH_LIST_SUCCESS';\r\nexport const ADD_ITEM_TO_WISH_LIST_FAIL = 'ADD_ITEM_TO_WISH_LIST_FAIL';\r\nexport const ADD_ITEM_TO_WISH_LIST_RESET = 'ADD_ITEM_TO_WISH_LIST_RESET';\r\n\r\n//TODO: REMOVE AN ITEM FROM WISHLIST\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_REQUEST = 'REMOVE_ITEM_FROM_WISH_LIST_REQUEST';\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_SUCCESS = 'REMOVE_ITEM_FROM_WISH_LIST_SUCCESS';\r\nexport const REMOVE_ITEM_FROM_WISH_LIST_FAIL = 'REMOVE_ITEM_FROM_WISH_LIST_FAIL';  \r\nexport const REMOVE_ITEM_FROM_WISH_LIST_RESET = 'REMOVE_ITEM_FROM_WISH_LIST_RESET';\r\n\r\n//TODO: REMOVE ALL ITEMS FROM WISHLIST\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_REQUEST = 'REMOVE_ALL_ITEMS_WISHLIST_REQUEST';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_SUCCESS = 'REMOVE_ALL_ITEMS_WISHLIST_SUCCESS';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_FAIL = 'REMOVE_ALL_ITEMS_WISHLIST_FAIL';\r\nexport const REMOVE_ALL_ITEMS_WISHLIST_RESET = 'REMOVE_ALL_ITEMS_WISHLIST_RESET';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//TODO: DELETE A REVIEW OF A PRODUCT BASED ON USERID, PRODUCTID AND REVIEW ID\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';\r\n\r\n//!TVS \r\n//TODO: GET TOP 3 TVS\r\nexport const GET_TOP_TVS_REQUEST = 'GET_TOP_TVS_REQUEST';\r\nexport const GET_TOP_TVS_SUCCESS = 'GET_TOP_TVS_SUCCESS';\r\nexport const GET_TOP_TVS_FAIL = 'GET_TOP_TVS_FAIL';\r\n\r\n//TODO: GET_ALL_TVS \r\nexport const GET_ALL_TVS_REQUEST = 'GET_ALL_TVS_REQUEST';\r\nexport const GET_ALL_TVS_SUCCESS = 'GET_ALL_TVS_SUCCESS';\r\nexport const GET_ALL_TVS_FAIL = 'GET_ALL_TVS_FAIL';\r\n\r\n//! PHONES\r\n//TODO: GET TOP 3 PHONES\r\nexport const GET_TOP_PHONES_REQUEST = 'GET_TOP_PHONES_REQUEST';\r\nexport const GET_TOP_PHONES_SUCCESS = 'GET_TOP_PHONES_SUCCESS';\r\nexport const GET_TOP_PHONES_FAIL = 'GET_TOP_PHONES_FAIL';\r\n\r\n//TODO: GET ALL PHONES\r\nexport const GET_ALL_PHONES_REQUEST = 'GET_ALL_PHONES_REQUEST';\r\nexport const GET_ALL_PHONES_SUCCESS = 'GET_ALL_PHONES_SUCCESS';\r\nexport const GET_ALL_PHONES_FAIL = 'GET_ALL_PHONES_FAIL';\r\n\r\n//! HEAD-PHONES\r\n//TODO: GET TOP 3 HEADPHONES \r\nexport const GET_TOP_HEADPHONE_REQUEST = 'GET_TOP_HEADPHONE_REQUEST';\r\nexport const GET_TOP_HEADPHONE_SUCCESS = 'GET_TOP_HEADPHONE_SUCCESS';\r\nexport const GET_TOP_HEADPHONE_FAIL = 'GET_TOP_HEADPHONE_FAIL';\r\n\r\n//TODO: GET ALL HEADPHONES\r\nexport const GET_ALL_HEADPHONE_REQUEST = 'GET_ALL_HEADPHONE_REQUEST';\r\nexport const GET_ALL_HEADPHONE_SUCCESS = 'GET_ALL_HEADPHONE_SUCCESS';\r\nexport const GET_ALL_HEADPHONE_FAIL = 'GET_ALL_HEADPHONE_FAIL';\r\n\r\n//! GAMES\r\n//TODO: GET TOP 3 GAMES\r\nexport const GET_TOP_GAMES_REQUEST = 'GET_TOP_GAMES_REQUEST';\r\nexport const GET_TOP_GAMES_SUCCESS = 'GET_TOP_GAMES_SUCCESS';\r\nexport const GET_TOP_GAMES_FAIL = 'GET_TOP_GAMES_FAIL';\r\n\r\n//TODO: GET ALL GAMES \r\nexport const GET_ALL_GAMES_REQUEST = 'GET_ALL_GAMES_REQUEST';\r\nexport const GET_ALL_GAMES_SUCCESS = 'GET_ALL_GAMES_SUCCESS';\r\nexport const GET_ALL_GAMES_FAIL = 'GET_ALL_GAMES_FAIL';","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 991);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '40%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '100%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {\r\n    GET_ORDER_OF_USER_RESET, \r\n    GET_USER_DETAILS_RESET, \r\n    GET_ALL_USERS_RESET,\r\n    DELETE_REVIEW_RESET\r\n} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst YourCartText = styled.div`\r\n    font-size: 0.7rem;\r\n    font-weight: 700;\r\n    margin-left: 8px;\r\n    \r\n\r\n\r\n    @media (max-width: 990px) {\r\n        display: inline;\r\n    }\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 990\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { screenWidth  > 991 ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth  < 991 ? (\r\n                        <NavDropdown title={`Products`} style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/gaming\">\r\n                                    <NavDropdown.Item>Gaming</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  \r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '0rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Your Cart\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to={user ? \"/wishlist\" : \"/login\"}>\r\n                      <Nav.Link href=\"/wishlist\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-heart' style={{ marginRight: screenWidth < 1250 && screenWidth > 990 ? '0rem' : '0rem', fontSize: '1.2rem' }}></i>\r\n                            <YourCartText>\r\n                                Wish List\r\n                            </YourCartText>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i className=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                {\r\n                                    user && user.isAdmin ? (\r\n                                        <NavDropdown title={<span style={{ marginLeft: '1rem'}}>Admin</span>} id=\"adminuser\">\r\n                                            <LinkContainer to=\"/admin/usersList\">\r\n                                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/productsList\">\r\n                                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/ordersList\">\r\n                                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                        </NavDropdown>\r\n                                    ) : null\r\n                                }\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                            <AddBlackColor>\r\n                                <i className='fas fa-user' style={{ marginRight: 8, fontSize: '1.2rem'}}></i>\r\n                                Sign In\r\n                            </AddBlackColor>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <div style={{width: screenWidth  < 991 ? '100%' : '0%'}}>\r\n                {screenWidth  < 991 ? (<SearchBox />) : null}\r\n            </div>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/createreview`, { rating, comment, productID }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteReview = (productID, reviewID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_REVIEW_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/deletereview/${productID}/${reviewID}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 990);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth <= 990);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <Link to=\"/laptops\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/tvs\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/phones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/headphones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/gaming\" style={{width: '100%'}}>\r\n                <NavItem style={{borderRight: 'none'}}>\r\n                    <i className=\"fas fa-gamepad\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Gaming\r\n                </NavItem>\r\n            </Link>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import {\r\n    GET_WISH_LIST_REQUEST,\r\n    GET_WISH_LIST_SUCCESS,\r\n    GET_WISH_LIST_FAIL,\r\n\r\n    ADD_ITEM_TO_WISH_LIST_REQUEST,\r\n    ADD_ITEM_TO_WISH_LIST_SUCCESS,\r\n    ADD_ITEM_TO_WISH_LIST_FAIL,\r\n\r\n    REMOVE_ITEM_FROM_WISH_LIST_REQUEST,\r\n    REMOVE_ITEM_FROM_WISH_LIST_SUCCESS,\r\n    REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n\r\n    REMOVE_ALL_ITEMS_WISHLIST_REQUEST,\r\n    REMOVE_ALL_ITEMS_WISHLIST_SUCCESS,\r\n    REMOVE_ALL_ITEMS_WISHLIST_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getWishList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: GET_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users/wishlist', config);\r\n\r\n        dispatch({\r\n            type: GET_WISH_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const addItemToWishList = (itemId, productName, productPrice, productImage, productRating, productNumReviews) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: ADD_ITEM_TO_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post('/api/users/wishlist/additem',{\r\n            itemId, \r\n            productName, \r\n            productPrice, \r\n            productImage, \r\n            productRating, \r\n            productNumReviews\r\n        } ,config);\r\n\r\n        dispatch({\r\n            type: ADD_ITEM_TO_WISH_LIST_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ADD_ITEM_TO_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAnItemFromWishList = (wishListItemId) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ \r\n            type: REMOVE_ITEM_FROM_WISH_LIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/wishlist/deleteitem/${wishListItemId}`, config);\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM_FROM_WISH_LIST_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAllItemsFromWishList = () => async( dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete('/api/users/wishlist/deleteitem', config);\r\n\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REMOVE_ALL_ITEMS_WISHLIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    ADD_PRODUCT_TO_CART_SUCCES,\r\n    REMOVE_PRODUCT_TO_CART,\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const data = (await axios.get(`/api/products/${id}`)).data;\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART_SUCCES\r\n        });\r\n    } catch(error) {\r\n        console.log(error);\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_TO_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#2b2e30',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React, {useState} from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst XSymbol = styled.strong`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 2%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Message = ({content, variant}) => {\r\n    const [show, setShow] = useState(true);\r\n    \r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <Alert \r\n            variant={variant} \r\n            style={{ \r\n                position: 'relative', \r\n                display: show ? 'initial' : 'none',\r\n                marginBottom: '1rem'\r\n            }}\r\n            >\r\n            <XSymbol onClick={(e) => onClickHandler(e)}>X</XSymbol>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React, {useState, useEffect} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItemToCart} from '../redux/actions/cartActions';\r\nimport {addItemToWishList, removeAnItemFromWishList} from '../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../redux/actions/actionTypes';\r\n\r\nimport Rating from './Rating';\r\nimport Message from './Message';\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    padding-top: 1rem;\r\n    font-family: 'Luckiest Guy', cursive;\r\n`;\r\n\r\nconst FootProductContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Product = ({ product, link = '/product' }) => {\r\n    const [isLoved, setIsLoved] = useState(false);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartItems, addItemSuccess } = useSelector(state => state.cart);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { \r\n        loading: addItemToWishListLoading, \r\n        success: addItemToWishListSuccess, \r\n        error: addItemToWishListError} = useSelector(state => state.addItemToWishList);\r\n    const {\r\n        loading: removeItemFromWishListLoading,\r\n        success: removeItemFromWishListSuccess,\r\n        error: removeItemFromWishListError\r\n    } = useSelector(state => state.removeItemFromWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product._id) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    const onAddItemToCartHandler = (e, id) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n        dispatch(addItemToCart(id, 1));\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n        if (addItemToWishListSuccess) {\r\n            setIsLoved(true);\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        dispatch(removeAnItemFromWishList(wishListID));\r\n        setIsLoved(false);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                {\r\n                    addItemSuccess && (cartItems[cartItems.length-1].product === product._id) ? (\r\n                    <div style={{marginTop: '1rem'}}>\r\n                        <Message variant=\"success\" content=\"Add Item To Cart Successfully\" /> \r\n                    </div>\r\n                    ): null\r\n                }\r\n                <FootProductContainer>\r\n                    <CardMoneyText>\r\n                        $ {product.price}\r\n                    </CardMoneyText>\r\n\r\n                    <ButtonContainer>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => onAddItemToCartHandler(e, product._id)}></i>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </ButtonContainer>\r\n                </FootProductContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Row, Col, Spinner, Button } from 'react-bootstrap';\r\nimport Product from '../Product';\r\nimport Message from '../Message';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst TopProductTitle = styled.p`\r\n    text-align: center;\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0rem;\r\n    font-family: Rokkit;\r\n\r\n    & a:hover {\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media only screen and (max-width: 450px) {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst TopProduct = ({ loading, itemArray, title, itemLink, listItemLink }) => {\r\n    return (\r\n        <Container>\r\n            <TopProductTitle><Link to={listItemLink}>{title}</Link></TopProductTitle>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n               { !loading ? itemArray.length > 0 ? itemArray.map((tv) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                           <Product product={tv} link={itemLink}/>\r\n                        </Col>\r\n                    );\r\n                }) : (\r\n                    <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n               }\r\n            </Row>\r\n\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                <Link to={listItemLink}>\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n            </Row>       \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopProduct;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel \r\n            pause='hover' \r\n            style={{ marginBottom: '2rem', backgroundColor: 'yellow'}}\r\n            nextIcon={<i className=\"fas fa-arrow-right\" style={{color: 'black', fontSize: '2rem'}}></i>}\r\n            prevIcon={<i className=\"fas fa-arrow-left\" style={{color: 'black', fontSize: '2rem'}}></i>}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id} interval={5000}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        {product.name} ({product.price})\r\n                    </Carousel.Caption> \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useEffect} from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//TODO: Actions\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport {getTopTVs} from '../redux/actions/tvActions';\r\nimport {getTopPhones} from '../redux/actions/phoneActions';\r\nimport {getTopHeadphone} from '../redux/actions/headphoneActions';\r\nimport {getTopGames} from '../redux/actions/gameActions';\r\nimport {getWishList} from '../redux/actions/wishListActions';\r\n\r\n//TODO: Components\r\nimport TopProduct from '../components/TopProduct (Home)/TopProduct';\r\nimport CarouselSection from '../components/Carousel';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n    const { topTV, loading: topTVLoading } = useSelector(state => state.topTVs);\r\n    const { topPhones, loading: topPhonesLoading } = useSelector(state => state.topPhones);\r\n    const { topHeadphone, loading: topHeadphoneLoading } = useSelector(state => state.topHeadphone);\r\n    const { topGames, loading: topGamesLoading } = useSelector(state => state.topGames);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { success: addItemToWishListSuccess} = useSelector(state => state.addItemToWishList);\r\n    const { success: removeItemFromWishListSuccess} = useSelector(state => state.removeItemFromWishList);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get carousel products for the first time \r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top laptops for the first time \r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Get top tvs for the first time \r\n        if (topTV.length === 0) {\r\n            dispatch(getTopTVs());\r\n        }\r\n    }, [dispatch, topTV]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-phone for the first time\r\n        if (topPhones.length === 0) {\r\n            dispatch(getTopPhones());\r\n        }\r\n    }, [dispatch, topPhones]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-headphone for the first time\r\n        if (topHeadphone.length === 0) {\r\n            dispatch(getTopHeadphone());\r\n        }\r\n    }, [dispatch, topHeadphone]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch top-games for the first time\r\n        if (topGames.length === 0) {\r\n            dispatch(getTopGames());\r\n        }\r\n    }, [dispatch, topGames]);\r\n\r\n    useEffect(() => {\r\n        //TODO: Fetch Wishlist for the first time if needed\r\n        if (wishList.length === 0 || addItemToWishListSuccess || removeItemFromWishListSuccess) {\r\n            dispatch(getWishList());\r\n        } \r\n    }, [dispatch, addItemToWishListSuccess, removeItemFromWishListSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                    <Helmet title=\"Welcome to Proshop\" href=\"/\" />\r\n                \r\n                    <CarouselSection \r\n                        carouselProducts={carouselProducts} \r\n                        loading={carouselLoading} \r\n                        error={carouselError} \r\n                    />\r\n\r\n                    {\r\n                        topLaptops.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topLaptopLoading} \r\n                                itemArray={topLaptops} \r\n                                title=\"Our Top Tier MSI Laptops\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/laptops\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topTV.length !== 0 ? (      \r\n                            <TopProduct \r\n                                loading={topTVLoading} \r\n                                itemArray={topTV} \r\n                                title=\"Best TVs for 2020\" \r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/tvs\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topPhones.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topPhonesLoading}\r\n                                itemArray={topPhones}\r\n                                title=\"New Phones 2020\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/phones\"\r\n                            />\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        topHeadphone.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topHeadphoneLoading}\r\n                                itemArray={topHeadphone}\r\n                                title=\"Great Headphones for You\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/headphones\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n\r\n                    {\r\n                        topGames.length !== 0 ? (\r\n                            <TopProduct \r\n                                loading={topGamesLoading}\r\n                                itemArray={topGames}\r\n                                title=\"For Game Lovers\"\r\n                                itemLink=\"/product\"\r\n                                listItemLink=\"/gaming\"\r\n                            />\r\n                        ) : null  \r\n                    }\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_TVS_REQUEST\r\n        });\r\n\r\n        const {data} = await axios.get('/api/products/tvs/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllTVs = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_TVS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/tvs');\r\n\r\n        dispatch({\r\n            type: GET_ALL_TVS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_TVS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/phones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_PHONES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PHONES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import {\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL,\r\n\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopHeadphone = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllHeadPhones = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/headphones');\r\n\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_HEADPHONE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message \r\n        });\r\n    }\r\n}\r\n\r\n","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games/toptier');\r\n\r\n        dispatch({\r\n            type: GET_TOP_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllGames = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/games');\r\n\r\n        dispatch({\r\n            type: GET_ALL_GAMES_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_GAMES_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image}) => {\r\n    return (\r\n        <Col md={8}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description} = props;\r\n\r\n    return (\r\n        <Col md={12}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport { createReview, deleteReview } from '../../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET, DELETE_REVIEW_RESET } from '../../redux/actions/actionTypes';\r\nimport Message from '../Message';\r\nimport Rating from '../../components/Rating';\r\nimport styled from 'styled-components';\r\n\r\nconst ReviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst ReviewSection = ({ singleProduct, user, userReviewError, deleteReviewError }) => {\r\n    const dispatch = useDispatch();\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const onDeleteReviewHandler = (e, reviewId) => {\r\n        e.preventDefault();\r\n        dispatch({ type: DELETE_REVIEW_RESET });\r\n        dispatch(deleteReview(singleProduct._id, reviewId));\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {\r\n                    deleteReviewError ? (\r\n                        <Message content=\"Delete Review Failed, Please Try Again :(\" variant=\"danger\" />\r\n                    ) : null\r\n                }\r\n\r\n                { singleProduct.reviews.length === 0 ? (\r\n                    <>\r\n                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                        { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                    </>\r\n                    ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { singleProduct.reviews.map((review) => (\r\n                            <ListGroup.Item key={review._id}>\r\n                                <ReviewContainer>\r\n                                    <strong>{review.name}</strong>\r\n                                    <i \r\n                                        className=\"fas fa-trash\" \r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onClick={(e) => onDeleteReviewHandler(e, review._id)}></i>\r\n                                </ReviewContainer>\r\n\r\n                                <Rating rating={review.rating} />\r\n                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                <p>{ review.comment }</p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <h2>Post A Review</h2>\r\n                            {userReviewError ? (\r\n                                <Message \r\n                                    variant=\"danger\" \r\n                                    content={ userReviewError === 'User has already review this product'\r\n                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                            ) : null}\r\n                            { user ? (\r\n                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                    <Form.Group controlId='rating'>\r\n                                        <Form.Label> Rating </Form.Label>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Awful</option>\r\n                                                <option value='2'>2 - Bad</option>\r\n                                                <option value='3'>3 - Okay</option>\r\n                                                <option value='4'>4 - Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"comment\">\r\n                                        <Form.Label> Comment </Form.Label>\r\n                                        <Form.Control \r\n                                            as='textarea' \r\n                                            row='3' \r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                </Form>\r\n                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReviewSection\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst LapTopTable = (props) => {\r\n    const laptopInfo = props.singleLaptop.details;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Display Size (inches)</td>\r\n                      <td>{laptopInfo.displaySizeInches}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (Pixels)</td>\r\n                      <td>{laptopInfo.resolutionPixels}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{laptopInfo.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Display type</td>\r\n                      <td>{laptopInfo.displayType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Type</td>\r\n                      <td>{laptopInfo.proccessorType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Cores</td>\r\n                      <td>{laptopInfo.proccessorCores}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Memory Cache</td>\r\n                      <td>{laptopInfo.processorMemoryCache}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                      <td>{laptopInfo.processorMaxClockSpeed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Graphics processor</td>\r\n                      <td>{laptopInfo.graphicsProcessor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>RAM (GB)</td>\r\n                      <td>{laptopInfo.ram}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>SSD Storage</td>\r\n                      <td>{laptopInfo.ssdStorage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB 2.0 Ports</td>\r\n                      <td>{laptopInfo.usbTwoPointOPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB C Ports</td>\r\n                      <td>{laptopInfo.usbCPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Card Reader</td>\r\n                      <td>{laptopInfo.cardReader}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Web Cam</td>\r\n                      <td>{laptopInfo.webCam}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{laptopInfo.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Operating system</td>\r\n                      <td>{laptopInfo.operatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{laptopInfo.manufacturersWarantty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LapTopTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst TVTable = (props) => {\r\n    const TVDetail = props.tvsDetail; \r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Screen Size (inches)</td>\r\n                      <td>{TVDetail.screenSizes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Type</td>\r\n                      <td>{TVDetail.screenType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Screen Resolution</td>\r\n                      <td>{TVDetail.screenResolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution (pixels)</td>\r\n                      <td>{TVDetail.resolutionInPixel}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Refresh Rate</td>\r\n                      <td>{TVDetail.refreshRate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wifi</td>\r\n                      <td>{TVDetail.wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>USB Ports</td>\r\n                      <td>{TVDetail.usbPorts}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Height x Width x Depth</td>\r\n                      <td>{TVDetail.sizeHeightWidthDepth}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Warranty</td>\r\n                      <td>{TVDetail.warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TVTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst PhoneTable = (props) => {\r\n    const phoneInfo = props.singlePhone.phoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Operating System</td>\r\n                      <td>{phoneInfo.phoneOperatingSystem}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Network Compability</td>\r\n                      <td>{phoneInfo.networkCompability}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dual Sim</td>\r\n                      <td>{phoneInfo.DualSim}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{phoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Devices Screen</td>\r\n                      <td>{phoneInfo.DeviceScreen}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Resolution</td>\r\n                      <td>{phoneInfo.Resolution}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Internal Memory</td>\r\n                      <td>{phoneInfo.InternalMemory}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Front Camera</td>\r\n                      <td>{phoneInfo.FrontCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rear Camera</td>\r\n                      <td>{phoneInfo.RearCamera}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Processor</td>\r\n                      <td>{phoneInfo.Processor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Wi-Fi</td>\r\n                      <td>{phoneInfo.Wifi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{phoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PhoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst HeadphoneTable = (props) => {\r\n    const headphoneInfo = props.singleHeadphonePhone.headphoneDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Headphone Type</td>\r\n                      <td>{headphoneInfo.HeadphoneType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Colour</td>\r\n                      <td>{headphoneInfo.Colour}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Voice Control</td>\r\n                      <td>{headphoneInfo.VoiceControl}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Noise Reduction Type</td>\r\n                      <td>{headphoneInfo.NoiseReductionType}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Built-In Microphone</td>\r\n                      <td>{headphoneInfo.BuiltInMicrophone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Manufacturer's warranty</td>\r\n                      <td>{headphoneInfo.Warranty}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default HeadphoneTable;\r\n","import React from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst GameTable = (props) => {\r\n    const gameInfo = props.singleGame.gameDetail;\r\n\r\n    return (\r\n        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n            <Col md={8}>\r\n                <h2> Details : </h2>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Platform</td>\r\n                      <td>{gameInfo.Platform}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Gaming Gerne</td>\r\n                      <td>{gameInfo.GamingGerne}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Rating</td>\r\n                      <td>{gameInfo.Rating}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Consumer Advice</td>\r\n                      <td>{gameInfo.ConsumerAdvice}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Developer</td>\r\n                      <td>{gameInfo.GameDeveloper}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Game Publisher</td>\r\n                      <td>{gameInfo.GamePublisher}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default GameTable;\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport ReviewSection from '../components/ReviewSection/ReviewSection';\r\nimport Loading from '../components/Loading';\r\nimport Helmet from '../components/Helmet';\r\nimport LapTopTable from '../components/ProductDetail/LaptopTable/LapTopTable';\r\nimport TVTable from '../components/ProductDetail/TvTable/TVTable';\r\nimport PhoneTable from '../components/ProductDetail/PhoneTable/PhoneTable';\r\nimport HeadphoneTable from '../components/ProductDetail/HeadphoneTable/HeadphoneTable';\r\nimport GameTable from '../components/ProductDetail/GameTable/GameTable';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const {success: deleteReviewSuccess, error:  deleteReviewError } = useSelector(state => state.deleteReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess, deleteReviewSuccess]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />                            \r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                        </Row>\r\n                        {\r\n                            singleProduct.details.proccessorCores ? (\r\n                                <LapTopTable singleLaptop={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.tvsDetail.sizeHeightWidthDepth ? (\r\n                                <TVTable tvsDetail={singleProduct.tvsDetail} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.phoneDetail.DualSim ? (\r\n                                <PhoneTable singlePhone={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct.headphoneDetail.HeadphoneType ? (\r\n                                <HeadphoneTable singleHeadphonePhone={singleProduct} />\r\n                            ) : null\r\n                        }                        \r\n                        {\r\n                            singleProduct.gameDetail.Platform ? (\r\n                                <GameTable singleGame={singleProduct} />\r\n                            ) : null\r\n                        }\r\n                        {\r\n                            singleProduct && user  ? (\r\n                                <ReviewSection \r\n                                    singleProduct={singleProduct} \r\n                                    user={user} \r\n                                    userReviewError={userReviewError} \r\n                                    deleteReviewError={deleteReviewError} \r\n                                />\r\n                            ) : null\r\n                        }\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    const { user } = useSelector(state => state.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addItemToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <h2>Your Cart is empty <Link to=\"/\">Go Back</Link></h2> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addItemToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/laptops`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useEffect} from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getProductsList} from '../redux/actions/productActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst SearchScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;   \r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const productsList = useSelector(state => state.productsList);\r\n    const { products, page, pages, loading } = productsList;\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                { !loading ? products.length > 0 ? products.map((product) => {\r\n                     return(\r\n                         <Col sm={12} md={6} lg={6} xl={4} key={product._id}>\r\n                            <Product product={product}/>\r\n                         </Col>\r\n                     );\r\n                 }) : (\r\n                     <Message variant=\"danger\" content=\"Can't find your product, please try something else\"/>\r\n                 ) : <Loading /> \r\n                }\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTVs } from '../redux/actions/tvActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst TVScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { tvs, loading, error } = useSelector(state => state.allTVs);\r\n    \r\n    useEffect(() => {\r\n        if (tvs.length === 0) {\r\n            dispatch(getAllTVs());\r\n        }\r\n    }, [dispatch, tvs]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"TVs | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : tvs.map((tv) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={tv._id}>\r\n                        <Product product={tv} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TVScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPhones } from '../redux/actions/phoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PhonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allPhones, loading, error } = useSelector(state => state.allPhones);\r\n    \r\n    useEffect(() => {\r\n        if (allPhones.length === 0) {\r\n            dispatch(getAllPhones());\r\n        }\r\n    }, [dispatch, allPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Phones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allPhones.map((phone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={phone._id}>\r\n                        <Product product={phone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PhonesScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllHeadPhones } from '../redux/actions/headphoneActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HeadphonesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { headPhones, loading, error } = useSelector(state => state.allHeadphone);\r\n    \r\n    useEffect(() => {\r\n        if (headPhones.length === 0) {\r\n            dispatch(getAllHeadPhones());\r\n        }\r\n    }, [dispatch, headPhones]);\r\n\r\n    return (\r\n    <>\r\n        <Helmet title=\"Headphones | ProShop\" />\r\n        <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : headPhones.map((headphone) => {\r\n                return(\r\n                    <Col sm={12} md={6} lg={6} xl={4} key={headphone._id}>\r\n                        <Product product={headphone} link={`/product`}/>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HeadphonesScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllGames} from '../redux/actions/gameActions';\r\n\r\nconst GamesScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { allGames, loading, error } = useSelector(state => state.allGames);\r\n    \r\n    useEffect(() => {\r\n        if (allGames.length === 0) {\r\n            dispatch(getAllGames());\r\n        }\r\n    }, [dispatch, allGames]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Gaming | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : allGames.map((game) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={game._id}>\r\n                            <Product product={game} link={`/product`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GamesScreen;","import React, {useState, useEffect} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItemToCart} from '../../redux/actions/cartActions';\r\nimport {\r\n    addItemToWishList, \r\n    removeAnItemFromWishList\r\n} from '../../redux/actions/wishListActions';\r\nimport {\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET\r\n} from '../../redux/actions/actionTypes';\r\n\r\nimport Rating from '../Rating';\r\nimport Message from '../Message';\r\n\r\nconst CardMoneyText = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    padding-top: 1rem;\r\n    font-family: 'Luckiest Guy', cursive;\r\n`;\r\n\r\nconst FootProductContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WishListProduct = ({ product, showList }) => {\r\n    const [isLoved, setIsLoved] = useState(true);\r\n    const [wishListID, setWishListID] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { cartItems, addItemSuccess } = useSelector(state => state.cart);\r\n    const { wishList } = useSelector(state => state.wishList);\r\n    const { \r\n        loading: addItemToWishListLoading, \r\n        success: addItemToWishListSuccess, \r\n        error: addItemToWishListError} = useSelector(state => state.addItemToWishList);\r\n    const {\r\n        loading: removeItemFromWishListLoading,\r\n        success: removeItemFromWishListSuccess,\r\n        error: removeItemFromWishListError\r\n    } = useSelector(state => state.removeItemFromWishList);\r\n\r\n    useEffect(() => {\r\n        wishList.map((item) => {\r\n            if (item.itemId === product.itemId) {\r\n                setIsLoved(true);\r\n                setWishListID(item._id);\r\n            }\r\n        })\r\n    }, [wishList, product]);\r\n\r\n    const onAddItemToCartHandler = (e, id) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_PRODUCT_TO_CART_RESET });\r\n        dispatch(addItemToCart(id, 1));\r\n    }\r\n\r\n    const onAddItemToWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: ADD_ITEM_TO_WISH_LIST_RESET});\r\n        dispatch(addItemToWishList(product._id, product.name, product.price, product.image ,product.rating, product.numReviews));\r\n        if (addItemToWishListSuccess) {\r\n            setIsLoved(true);\r\n        }\r\n    }\r\n\r\n    const onRemoveItemFromWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ITEM_FROM_WISH_LIST_RESET });\r\n        dispatch(removeAnItemFromWishList(wishListID));\r\n        setIsLoved(false);\r\n    }\r\n\r\n    \r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\" style={{ flexDirection: showList ? 'row' : 'column' }}>\r\n            <Link to={`/product/${product.itemId}`}>\r\n                <Card.Img src={product.productImage} variant=\"top\" style={{ width: showList ? '50%' : '100%' }} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product.itemId}`}>\r\n                    <Card.Title as=\"div\" style={{ fontSize: showList ? '1.5rem' : '1rem' }}>\r\n                        <strong>{product.productName}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.productRating} \r\n                        text={`${product.productNumReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                {\r\n                    addItemSuccess && (cartItems[cartItems.length-1].product === product._id) ? (\r\n                    <div style={{marginTop: '1rem'}}>\r\n                        <Message variant=\"success\" content=\"Add Item To Cart Successfully\" /> \r\n                    </div>\r\n                    ): null\r\n                }\r\n                <FootProductContainer>\r\n                    <CardMoneyText>\r\n                        $ {product.productPrice}\r\n                    </CardMoneyText>\r\n\r\n                    <ButtonContainer>\r\n                        <i className=\"fas fa-cart-plus\" \r\n                            style={{ fontSize: '1.5rem', marginRight: '1.5rem', cursor: 'pointer' }}\r\n                            onClick={(e) => onAddItemToCartHandler(e, product._id)}></i>\r\n                        {\r\n                            isLoved ? (\r\n                                //TODO: Full Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onRemoveItemFromWishList(e)}>\r\n                                    <i className=\"fas fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            ) : (\r\n                                //TODO: Empty Heart\r\n                                <span style={{color: '#f01838'}} onClick={(e) => onAddItemToWishList(e)}>\r\n                                    <i className=\"far fa-heart\" style={{ fontSize: '1.5rem', cursor: 'pointer' }} ></i>\r\n                                </span>\r\n                            )\r\n                        }\r\n                    </ButtonContainer>\r\n                </FootProductContainer>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WishListProduct;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport {getWishList, removeAllItemsFromWishList} from '../redux/actions/wishListActions';\r\nimport {REMOVE_ALL_ITEMS_WISHLIST_RESET} from '../redux/actions/actionTypes';\r\nimport WishListProduct from '../components/WishList Product/WishListProduct';\r\nimport styled from 'styled-components';\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst DisplayContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst DisplayButtonContainer = styled.div`\r\n    border: 1px solid black;\r\n    margin-left: 1rem;\r\n    margin-rigth: 1rem;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ClearWishListButton = styled.button`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    padding: 10px;\r\n    border: none;\r\n`;\r\n\r\nconst WishListText = styled.div`\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    color: black;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst NoItemText = styled.div`\r\n    font-size: 3rem;\r\n    font-weight: 700;\r\n    font-family: Rokkitt;\r\n    margin-top: 3rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst WishListScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [showGrid, setShowGrid] = useState(true);\r\n    const { user } = useSelector(state => state.user);\r\n    const { wishList, loading, error } = useSelector(state => state.wishList)\r\n    const { success: removeItemFromWishListSuccess } = useSelector(state => state.removeItemFromWishList);\r\n    const { success: addItemToWishListSuccess } = useSelector(state => state.addItemToWishList);\r\n    const { success: removeAllItemsFromWishListSuccess } = useSelector(state => state.removeAllItemsFromWishList);\r\n\r\n    const swapToShowGridMode = (e) => {\r\n        e.preventDefault();\r\n        setShowGrid(true);\r\n    }\r\n\r\n    const swapToShowListMode = (e) => {\r\n        e.preventDefault();\r\n        setShowGrid(false);\r\n    }\r\n\r\n    const clearWishList = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: REMOVE_ALL_ITEMS_WISHLIST_RESET });\r\n        dispatch(removeAllItemsFromWishList());\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getWishList());\r\n    }, [dispatch, removeItemFromWishListSuccess, addItemToWishListSuccess, removeAllItemsFromWishListSuccess]);\r\n\r\n    return (\r\n        <div>\r\n            <WishListText> Wish List </WishListText>\r\n            <FlexContainer>\r\n                <ClearWishListButton onClick={(e) => clearWishList(e)} style={{ visibility: wishList.length===0 ? 'hidden' : 'initial' }}>Clear Wish List</ClearWishListButton>\r\n                <DisplayContainer>\r\n                    <DisplayButtonContainer onClick={(e) => swapToShowGridMode(e)}>\r\n                        <i className=\"fas fa-th-large\"></i>\r\n                    </DisplayButtonContainer>\r\n                    <DisplayButtonContainer onClick={(e) => swapToShowListMode(e)}>\r\n                        <i className=\"fas fa-list\"></i>\r\n                    </DisplayButtonContainer>\r\n                </DisplayContainer>\r\n            </FlexContainer>\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {\r\n                    wishList.length !== 0 ? wishList.map((item) => {\r\n                        return (<Col \r\n                            sm={showGrid ? 12 : 12} \r\n                            md={showGrid ? 6 : 12} \r\n                            lg={showGrid ? 6 : 12} \r\n                            xl={showGrid ? 4 : 12} key={item._id}>\r\n                            <WishListProduct product={item} showList={!showGrid} /> \r\n                        </Col>)\r\n                    }) : (\r\n                        <NoItemText>You Have No Items</NoItemText>\r\n                    )\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WishListScreen\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport TVScreen from './screens/TVScreen';\nimport PhonesScreen from './screens/phonesScreen';\nimport HeadphonesScreen from './screens/HeadphoneScreen';\nimport GamesScreen from './screens/GamesScreen';\nimport WishListScreen from './screens/WishListScreen';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport styled from 'styled-components';\n\nconst MarginContainer = styled.div`\nmargin-top: 0%;  \nmargin-left: 5%;\nmargin-right: 5%;\npadding-left: 2%;\npadding-right: 2%;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n        <Header/>\n        <SubNavbar />\n      <main className='py-3'>\n        <MarginContainer>  \n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/tvs\" component={TVScreen} exact />\n          <Route path=\"/phones\" component={PhonesScreen} exact />\n          <Route path=\"/headphones\" component={HeadphonesScreen} exact />\n          <Route path=\"/gaming\" component={GamesScreen} exact />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/wishlist\" component={WishListScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={SearchScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={SearchScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </MarginContainer>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    ADD_PRODUCT_TO_CART_SUCCES,\r\n    ADD_PRODUCT_TO_CART_RESET,\r\n    REMOVE_PRODUCT_TO_CART, \r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    addItemSuccess: false,\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            const item = action.payload;\r\n\r\n            const existedItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existedItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case ADD_PRODUCT_TO_CART_SUCCES:\r\n            return {\r\n                ...state,\r\n                addItemSuccess: true\r\n            }\r\n        case ADD_PRODUCT_TO_CART_RESET:\r\n            return {\r\n                ...state,\r\n                addItemSuccess: false\r\n            }\r\n        case REMOVE_PRODUCT_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_WISH_LIST_REQUEST,\r\n    GET_WISH_LIST_SUCCESS,\r\n    GET_WISH_LIST_FAIL,\r\n\r\n    ADD_ITEM_TO_WISH_LIST_REQUEST,\r\n    ADD_ITEM_TO_WISH_LIST_SUCCESS,\r\n    ADD_ITEM_TO_WISH_LIST_FAIL,\r\n    ADD_ITEM_TO_WISH_LIST_RESET,\r\n\r\n    REMOVE_ITEM_FROM_WISH_LIST_REQUEST,\r\n    REMOVE_ITEM_FROM_WISH_LIST_SUCCESS,\r\n    REMOVE_ITEM_FROM_WISH_LIST_FAIL,\r\n    REMOVE_ITEM_FROM_WISH_LIST_RESET,\r\n\r\n    REMOVE_ALL_ITEMS_WISHLIST_REQUEST,\r\n    REMOVE_ALL_ITEMS_WISHLIST_SUCCESS,\r\n    REMOVE_ALL_ITEMS_WISHLIST_FAIL,\r\n    REMOVE_ALL_ITEMS_WISHLIST_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst wishListInitialState = {\r\n    wishList: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getWishListReducer = (state = wishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                wishList: [...action.payload]\r\n            }\r\n        case GET_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addItemToWishListInitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const addItemToWishListReducer = (state = addItemToWishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_ITEM_TO_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ADD_ITEM_TO_WISH_LIST_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst removeItemFromWishListInitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const removeItemFromWishListReducer = (state = removeItemFromWishListInitialState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ITEM_FROM_WISH_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case REMOVE_ITEM_FROM_WISH_LIST_RESET:\r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst removeAllItemInitlaState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const removeAllItemsFromWishListReducer = (state = removeAllItemInitlaState, action) => {\r\n    switch(action.type) {\r\n        case REMOVE_ALL_ITEMS_WISHLIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case REMOVE_ALL_ITEMS_WISHLIST_RESET: \r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET,\r\n\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    DELETE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst deleteReviewInitalState = {\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst deleteReviewReducer = (state = deleteReviewInitalState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                loading: false,\r\n                error: null,\r\n                success: false  \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_TVS_REQUEST,\r\n    GET_TOP_TVS_SUCCESS,\r\n    GET_TOP_TVS_FAIL,\r\n\r\n    GET_ALL_TVS_REQUEST,\r\n    GET_ALL_TVS_SUCCESS,\r\n    GET_ALL_TVS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst top_TV_Initial_State = {\r\n    topTV: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getTopTVs = (state = top_TV_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topTV: [...action.payload]\r\n            }\r\n        case GET_TOP_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst all_TVs_Initial_State = {\r\n    tvs: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const getALLTVs = (state = all_TVs_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_TVS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_TVS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tvs: [...action.payload]\r\n            }\r\n        case GET_ALL_TVS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_PHONES_REQUEST,\r\n    GET_TOP_PHONES_SUCCESS,\r\n    GET_TOP_PHONES_FAIL,\r\n\r\n    GET_ALL_PHONES_REQUEST,\r\n    GET_ALL_PHONES_SUCCESS,\r\n    GET_ALL_PHONES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topPhonesInitialState = {\r\n    topPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topPhonesReducer = (state = topPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_PHONES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topPhones: [...action.payload]\r\n            }\r\n        case GET_TOP_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allPhonesInitialState = {\r\n    allPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allPhonesReducer = (state = allPhonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PHONES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PHONES_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_PHONES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","import {\r\n    GET_ALL_HEADPHONE_REQUEST,\r\n    GET_ALL_HEADPHONE_SUCCESS,\r\n    GET_ALL_HEADPHONE_FAIL,\r\n\r\n    GET_TOP_HEADPHONE_REQUEST,\r\n    GET_TOP_HEADPHONE_SUCCESS,\r\n    GET_TOP_HEADPHONE_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topHeadPhoneInitialState = {\r\n    topHeadphone: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topHeadphoneReducer = (state = topHeadPhoneInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topHeadphone: [...action.payload]\r\n            }\r\n        case GET_TOP_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allHeadphonesInitialState = {\r\n    headPhones: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allHeadphonesReducer = (state = allHeadphonesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_HEADPHONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_HEADPHONE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                headPhones: [...action.payload]\r\n            }\r\n        case GET_ALL_HEADPHONE_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_GAMES_REQUEST,\r\n    GET_TOP_GAMES_SUCCESS,\r\n    GET_TOP_GAMES_FAIL,\r\n\r\n    GET_ALL_GAMES_REQUEST,\r\n    GET_ALL_GAMES_SUCCESS,\r\n    GET_ALL_GAMES_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst topGameInitalState = {\r\n    topGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topGameReducer = (state = topGameInitalState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topGames: [...action.payload]\r\n            }\r\n        case GET_TOP_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst allGamesInitialState = {\r\n    allGames: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allGamesReducer = (state = allGamesInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_GAMES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_GAMES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                allGames: [...action.payload]\r\n            }\r\n        case GET_ALL_GAMES_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n    getWishListReducer,\r\n    addItemToWishListReducer,\r\n    removeItemFromWishListReducer,\r\n    removeAllItemsFromWishListReducer\r\n} from './reducers/wishListReducer';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer,\r\n    deleteReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\nimport {\r\n    getTopTVs,\r\n    getALLTVs\r\n} from './reducers/tvReducers';\r\nimport {\r\n    topPhonesReducer,\r\n    allPhonesReducer\r\n} from './reducers/phoneReducers';\r\nimport {\r\n    topHeadphoneReducer,\r\n    allHeadphonesReducer\r\n} from './reducers/headphoneReducer';\r\nimport {\r\n    topGameReducer,\r\n    allGamesReducer\r\n} from './reducers/gameReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    deleteReview: deleteReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer,\r\n    topTVs: getTopTVs,\r\n    allTVs: getALLTVs,\r\n    topPhones: topPhonesReducer,\r\n    allPhones: allPhonesReducer,\r\n    topHeadphone: topHeadphoneReducer,\r\n    allHeadphone: allHeadphonesReducer,\r\n    topGames: topGameReducer,\r\n    allGames: allGamesReducer,\r\n    wishList: getWishListReducer,\r\n    addItemToWishList: addItemToWishListReducer,\r\n    removeItemFromWishList: removeItemFromWishListReducer,\r\n    removeAllItemsFromWishList: removeAllItemsFromWishListReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}