{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/userActions.js","components/SearchBox.js","components/Header.js","components/SubNavbar.js","components/Footer.js","components/Rating.js","components/Product.js","redux/actions/productActions.js","components/Message.js","components/Loading.js","components/Carousel.js","components/Helmet.js","screens/HomeScreen.js","redux/actions/laptopActions.js","components/ProductDetail/ProductImage.js","components/ProductDetail/ProductInfo.js","redux/actions/cartActions.js","components/ProductDetail/ProductCard.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","redux/actions/orderActions.js","screens/ProfileScreen.js","components/CheckOutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","redux/actions/adminActions.js","screens/OrderScreen.js","screens/AdminScreen.js","screens/AdminUserInfoScreen.js","components/Paginate.js","screens/ProductListAdminScreen.js","screens/ProductEditScreen.js","screens/AdminOrdersScreen.js","screens/LaptopScreen.js","screens/SingleLaptopScreen.js","components/ScrollToTop.js","App.js","reportWebVitals.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/reducers/userReducers.js","redux/reducers/orderReducer.js","redux/reducers/adminReducers.js","redux/reducers/laptopReducer.js","redux/store.js","index.js"],"names":["GET_ALL_PRODUCTS_PENDING","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_SINGLE_PRODUCT_PENDING","GET_SINGLE_PRODUCT_SUCCESS","GET_SINGLE_PRODUCT_FAIL","GET_CAROUSEL_PRODUCTS_REQUEST","GET_CAROUSEL_PRODUCTS_SUCCESS","GET_CAROUSEL_PRODUCTS_FAIL","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_TO_CART","SAVE_SHIPPING_ADDRESS_CART","SAVE_PAYMENT_METHOD","REMOVE_PRODUCTS_FROM_CART_AFTERBUY","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","LOGOUT_USER","CREATE_USER_PENDING","CREATE_USER_SUCCESS","CREATE_USER_FAIL","CLEAR_ERROR_SUBMIT","GET_USER_DETAILS_PENDING","GET_USER_DETAILS_SUCCESS","GET_USER_DETAILS_FAIL","GET_USER_DETAILS_RESET","UPDATE_USER_DETAIL_PENDING","UPDATE_USER_DETAIL_SUCCESS","UPDATE_USER_DETAIL_FAIL","UPDATE_USER_DETAIL_RESET","CREATE_REVIEW_PENDING","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","CREATE_REVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_REQUEST_SUCCESS","ORDER_CREATE_REQUEST_FAIL","GET_ORDER_BY_ID","GET_ORDER_BY_ID_SUCCESS","GET_ORDER_BY_ID_FAIL","PUT_ISPAID_STATUS_ORDER_REQUEST","PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS","PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL","PUT_ISPAID_STATUS_ORDER_RESET","GET_ORDERS_OF_USERS","GET_ORDERS_OF_USERS_SUCCESS","GET_ORDERS_OF_USERS_FAIL","GET_ALL_ORDERS_AS_ADMIN_REQUEST","GET_ALL_ORDERS_AS_ADMIN_SUCCESS","GET_ALL_ORDERS_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_REQUEST","PUT_IS_DELIVERED_AS_ADMIN_SUCCESS","PUT_IS_DELIVERED_AS_ADMIN_FAIL","PUT_IS_DELIVERED_AS_ADMIN_RESET","GET_ORDER_OF_USER_RESET","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAIL","GET_ALL_USERS_RESET","DELETE_USER_AS_ADMIN_REQUEST","DELETE_USER_AS_ADMIN_SUCCESS","DELETE_USER_AS_ADMIN_FAIL","GET_USER_AS_ADMIN_REQUEST","GET_USER_AS_ADMIN_SUCCESS","GET_USER_AS_ADMIN_FAIL","UPDATE_USER_AS_ADMIN_REQUEST","UPDATE_USER_AS_ADMIN_SUCCESS","UPDATE_USER_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_REQUEST","DELETE_PRODUCT_AS_ADMIN_SUCCESS","DELETE_PRODUCT_AS_ADMIN_FAIL","DELETE_PRODUCT_AS_ADMIN_RESET","CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST","CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS","CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL","CREATE_SAMPLE_PRODUCT_RESET","UPDATE_PRODUCT_AS_ADMIN_REQUEST","UPDATE_PRODUCT_AS_ADMIN_SUCCESS","UPDATE_PRODUCT_AS_ADMIN_FAIL","UPDATE_PRODUCT_AS_ADMIN_RESET","GET_TOP_LAPTOPS_REQUEST","GET_TOP_LAPTOPS_SUCCESS","GET_TOP_LAPTOPS_FAIL","GET_ALL_LAPTOPS_REQUEST","GET_ALL_LAPTOPS_SUCCESS","GET_ALL_LAPTOPS_FAIL","GET_A_LAPTOP_REQUEST","GET_A_LAPTOP_SUCCESS","GET_A_LAPTOP_FAIL","GET_A_LAPTOP_RESET","createReview","rating","comment","productID","dispatch","getState","a","type","user","config","headers","token","axios","post","payload","response","data","message","Container","styled","div","withRouter","history","useState","keyword","setKeyword","window","innerWidth","screenWidth","setScreenWidth","updateMedia","useEffect","addEventListener","removeEventListener","Form","onSubmit","e","preventDefault","trim","push","inline","autoComplete","style","width","marginTop","Control","name","onChange","target","value","placeholder","className","Button","variant","Brand","AddBlackColor","WidthExpand","useDispatch","useSelector","state","Navbar","collapseOnSelect","expand","backgroundColor","to","Toggle","aria-controls","Collapse","id","color","NavDropdown","title","fontSize","marginRight","padding","Item","Nav","Link","href","isAdmin","class","onClick","localStorage","removeItem","SubNavBar","nav","NavItem","SubNavbar","Footer","Row","Col","Rating","text","defaultProps","Product","product","link","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","getSingleProduct","get","getCarouselProducts","error","Message","content","Alert","Loading","lg","size","Spinner","animation","height","CarouselSection","carouselProducts","loading","Carousel","pause","marginBottom","map","Image","alt","fluid","Caption","HelmetSection","start","String","location","Helmet","charSet","rel","HomeScreen","match","carouselLoading","carouselError","topLaptops","topLaptopLoading","topLaptopError","length","dismissible","Heading","textDecoration","fontFamily","justifyContent","alignItems","laptop","sm","md","xl","ProductImage","ProductInfo","props","description","ListGroup","addItemToCart","qty","countInStock","setItem","JSON","stringify","cart","cartItems","console","log","ProductCard","useHistory","quantity","setQuantity","Array","keys","x","disabled","ProductScreen","setRating","setComment","singleProduct","userReview","userReviewSuccess","success","userReviewError","params","onSubmitReviewHandler","reviews","Group","controlId","Label","row","review","createdAt","substring","CartScreen","productId","search","Number","split","removeFromCartHandler","removeItemFromCart","item","rounded","reduce","acc","FormContainer","xs","children","LoginScreen","redirect","email","setEmail","password","setPassword","loginUser","RegisterScreen","setName","confirmPassword","setConfirmPassword","formError","setFormError","createUser","getOrderById","order","ProfileScreen","userDetails","details","detailError","userOrders","orders","userOrderLoading","userOrderSuccess","userOrderError","userSubmitted","put","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","display","isDelivered","deliveredAt","CheckOutStep","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","num","itemsPrice","curItem","shippingPrice","taxPrice","toFixed","Math","round","index","orderItems","createdOrder","createOrder","loadUserInfo","OrderScreen","loadedOrder","orderItem","updatedIsPaidOrder","loadingPay","successPay","isDeliveredOrderAdmin","updateIsDeliveredLoading","successIsDeliveredStatus","errorIsDeliveredStatus","sdkReady","setSdkReady","addPaypalScript","clientid","script","document","createElement","async","onload","body","appendChild","paypal","date","putIsDeliveredStatusAsAdmin","amount","onSuccess","paymentResult","orderID","payOrder","AdminScreen","adminUsersList","usersList","deletedAdmin","deleteHandler","delete","deleteUserAsAdmin","AdminUserInfoScreen","admin","setAdmin","userId","userInfoAdmin","updateUserInfo","Paginate","pages","page","Pagination","active","ProductListAdminScreen","pageNumber","productsList","products","createdProduct","createSuccess","deleteProduct","getProductsList","confirm","deleteProductAsAdmin","category","brand","ProductEditScreen","updatedProduct","updatedSuccess","setPrice","setImage","setBrand","setCountInStock","setCategory","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProductAsAdmin","File","custom","AdminOrdersScreen","adminOrders","LaptopScreen","allLaptops","laptops","SingleLaptopScreen","singleLaptop","displaySizeInches","resolutionPixels","screenResolution","displayType","proccessorType","proccessorCores","processorMemoryCache","processorClockSpeed","processorMaxClockSpeed","graphicsProcessor","ram","ssdStorage","usbTwoPointOPorts","usbCPorts","cardReader","webCam","wifi","operatingSystem","manufacturersWarantty","ScrollToTop","prevProps","this","scrollTo","React","Component","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initlaStateSingleProduct","delete_Product_InitialState","carouselProductInitialState","initialUserState","initialDetailState","initialReviewState","orderInitialState","loadedOrdersState","orderPayInitialState","userOrdersInitialState","ordersAdminInitialState","putIsDeliveredInitialState","users_List_Admin_Initial_State","deleted_User_Admin_Reducer_InitialState","messages","user_Info_Admin_Reducer_InitialState","update_User_Admin_Reducer_InitialState","updatedUser","create_Product_Admin_Reducer_InitialState","updated_Product_Admin_Reducer_InitialState","topLaptopInitialState","allLaptopsInitialState","singleLaptopInitialState","reducer","combineReducers","action","existedItem","find","filter","newState","nullState","errro","cartItemsFromLocalStorage","getItem","parse","userInfoFromLocalStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.91d90301.chunk.js","sourcesContent":["// THIS PROJECT USING BETTER-COMMENT Expansions with VSCODE to see highlight comments (Tris)\r\n//! PRODUCT\r\n//TODO : GET ALL PRODUCTS \r\nexport const GET_ALL_PRODUCTS_PENDING = 'GET_ALL_PRODUCTS_PENDING';\r\nexport const GET_ALL_PRODUCTS_FAIL = 'GET_ALL_PRODUCTS_FAIL';\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\n\r\n//TODO : GET A PRODUCT BY ID\r\nexport const GET_SINGLE_PRODUCT_PENDING  = 'GET_SINGLE_PRODUCT_PENDING';\r\nexport const GET_SINGLE_PRODUCT_SUCCESS = 'GET_SINGLE_PRODUCT_SUCCESS';\r\nexport const GET_SINGLE_PRODUCT_FAIL = 'GET_SINGLE_PRODUCT_FAIL';\r\n\r\n//TODO: GET 3 TOP RATED PRODUCT\r\nexport const GET_CAROUSEL_PRODUCTS_REQUEST = 'GET_CAROUSEL_PRODUCTS_REQUEST';\r\nexport const GET_CAROUSEL_PRODUCTS_SUCCESS = 'GET_CAROUSEL_PRODUCTS_SUCCESS';\r\nexport const GET_CAROUSEL_PRODUCTS_FAIL = 'GET_CAROUSEL_PRODUCTS_FAIL';\r\n\r\n//! CART\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_TO_CART = 'REMOVE_PRODUCT_TO_CART';\r\nexport const SAVE_SHIPPING_ADDRESS_CART = 'SAVE_SHIPPING_ADDRESS_CART';\r\nexport const SAVE_PAYMENT_METHOD = 'SAVE_PAYMENT_METHOD';\r\nexport const REMOVE_PRODUCTS_FROM_CART_AFTERBUY = 'REMOVE_PRODUCTS_FROM_CART_AFTERBUY';\r\n\r\n//! USER\r\n//TODO : LOGIN\r\nexport const LOGIN_USER_PENDING = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\n\r\n//TODO : LOG-OUT\r\nexport const LOGOUT_USER = 'LOG_OUT';\r\n\r\n//TODO : REGISTER\r\nexport const CREATE_USER_PENDING = 'CREATE_USER_PENDING';\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL';\r\nexport const CLEAR_ERROR_SUBMIT =  'CLEAR_ERROR_SUBMIT';\r\n\r\n//TODO : GET PERSONAL INFORMATION\r\nexport const GET_USER_DETAILS_PENDING = 'GET_USER_DETAILS_PENDING';\r\nexport const GET_USER_DETAILS_SUCCESS = 'GET_USER_DETAILS_SUCCESS';\r\nexport const GET_USER_DETAILS_FAIL = 'GET_USER_DETAILS_FAIL';\r\nexport const GET_USER_DETAILS_RESET = 'GET_USER_DETAILS_RESET';\r\n\r\n//TODO : CHANGE PERSONAL INFORMATION\r\nexport const UPDATE_USER_DETAIL_PENDING = 'UPDATE_USER_DETAIL_PENDING';\r\nexport const UPDATE_USER_DETAIL_SUCCESS = 'UPDATE_USER_DETAIL_SUCCESS';\r\nexport const UPDATE_USER_DETAIL_FAIL = 'UPDATE_USER_DETAIL_FAIL';\r\nexport const UPDATE_USER_DETAIL_RESET = 'UPDATE_USER_DETAIL_RESET';\r\n\r\n//TODO: CREATE A REVIEW FOR A PRODUCT AS USER\r\nexport const CREATE_REVIEW_PENDING = 'CREATE_REVIEW_PENDING';\r\nexport const CREATE_REVIEW_SUCCESS = 'CREATE_REVIEW_SUCCESS';\r\nexport const CREATE_REVIEW_FAIL = 'CREATE_REVIEW_FAIL';\r\nexport const CREATE_REVIEW_RESET = 'CREATE_REVIEW_RESET';\r\n\r\n//! ORDER\r\n//TODO : CREATE AN ORDER \r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_REQUEST_SUCCESS = 'ORDER_CREATE_REQUEST_SUCCESS';\r\nexport const ORDER_CREATE_REQUEST_FAIL = 'ORDER_CREATE_REQUEST_FAIL';\r\n\r\n//TODO: GET AN ORDER BASED ON ID\r\nexport const GET_ORDER_BY_ID = 'GET_ORDER_BY_ID';\r\nexport const GET_ORDER_BY_ID_SUCCESS = 'GET_ORDER_BY_ID_SUCCESS';\r\nexport const GET_ORDER_BY_ID_FAIL = 'GET_ORDER_BY_ID_FAIL';\r\n\r\n//TODO: UPDATE ORDER IS_PAID STATUS BASED ON ID\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST = 'PUT_ISPAID_STATUS_ORDER_REQUEST';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS = 'PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS';\r\nexport const PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL = 'PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL';\r\nexport const PUT_ISPAID_STATUS_ORDER_RESET = 'PUT_ISPAID_STATUS_ORDER_RESET';\r\n\r\n//TODO: GET ALL ORDERS OF ONE USER BASED ON THE USER ID\r\nexport const GET_ORDERS_OF_USERS = 'GET_ORDERS_OF_USERS';\r\nexport const GET_ORDERS_OF_USERS_SUCCESS = 'GET_ORDERS_OF_USERS_SUCCESS';\r\nexport const GET_ORDERS_OF_USERS_FAIL = 'GET_ORDERS_OF_USERS_FAIL';\r\n\r\n//TODO: GET ALL ORDERS AS ADMIN\r\nexport const GET_ALL_ORDERS_AS_ADMIN_REQUEST = 'GET_ALL_ORDERS_AS_ADMIN_REQUEST';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_SUCCESS = 'GET_ALL_ORDERS_AS_ADMIN_SUCCESS';\r\nexport const GET_ALL_ORDERS_AS_ADMIN_FAIL = 'GET_ALL_ORDERS_AS_ADMIN_FAIL';\r\n\r\n//TODO: CHANGE DELIVERY STATUS AS ADMIN\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_REQUEST = 'PUT_IS_DELIVERED_AS_ADMIN_REQUEST';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_SUCCESS = 'PUT_IS_DELIVERED_AS_ADMIN_SUCCESS';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_FAIL = 'PUT_IS_DELIVERED_AS_ADMIN_FAIL';\r\nexport const PUT_IS_DELIVERED_AS_ADMIN_RESET = 'PUT_IS_DELIVERED_AS_ADMIN_RESET';\r\n\r\n//? return a null \"state\" when user logout, clear all the state of the current app \r\nexport const GET_ORDER_OF_USER_RESET = 'GET_ORDER_OF_USER_RESET';\r\n\r\n//! ADMIN\r\n//TODO: GET ALL USERS FROM DATABASES \r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS';\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL';\r\nexport const GET_ALL_USERS_RESET = 'GET_ALL_USERS_RESET';\r\n\r\n//TODO: DELETE AN USER BASED ON THERE ID AS AN ADMIN\r\nexport const DELETE_USER_AS_ADMIN_REQUEST = 'DELETE_USER_AS_ADMIN_REQUEST';\r\nexport const DELETE_USER_AS_ADMIN_SUCCESS = 'DELETE_USER_AS_ADMIN_SUCCESS';\r\nexport const DELETE_USER_AS_ADMIN_FAIL = 'DELETE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: GET A USER BASED ON HIS ID\r\nexport const GET_USER_AS_ADMIN_REQUEST = 'GET_USER_AS_ADMIN_REQUEST';\r\nexport const GET_USER_AS_ADMIN_SUCCESS = 'GET_USER_AS_ADMIN_SUCCESS';\r\nexport const GET_USER_AS_ADMIN_FAIL = 'GET_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: UPDATE USER PROFILE AS AN ADMIN\r\nexport const UPDATE_USER_AS_ADMIN_REQUEST = 'UPDATE_USER_AS_ADMIN_REQUEST';\r\nexport const UPDATE_USER_AS_ADMIN_SUCCESS = 'UPDATE_USER_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_USER_AS_ADMIN_FAIL = 'UPDATE_USER_AS_ADMIN_FAIL';\r\n\r\n//TODO: DELETE A PRODUCT BASED ON IT ID AS AN ADMIN\r\nexport const DELETE_PRODUCT_AS_ADMIN_REQUEST = 'DELETE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const DELETE_PRODUCT_AS_ADMIN_SUCCESS = 'DELETE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const DELETE_PRODUCT_AS_ADMIN_FAIL = 'DELETE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const DELETE_PRODUCT_AS_ADMIN_RESET = 'DELETE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//TODO: CREATE A SAMPLE PRODUCT AS AN ADMIN\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL = 'CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL'; \r\nexport const CREATE_SAMPLE_PRODUCT_RESET = 'CREATE_SAMPLE_PRODUCT_RESET';\r\n\r\n//TODO: UPDATE A PRODUCT INFO AS AN ADMIN\r\nexport const UPDATE_PRODUCT_AS_ADMIN_REQUEST = 'UPDATE_PRODUCT_AS_ADMIN_REQUEST';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_SUCCESS = 'UPDATE_PRODUCT_AS_ADMIN_SUCCESS';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_FAIL = 'UPDATE_PRODUCT_AS_ADMIN_FAIL';\r\nexport const UPDATE_PRODUCT_AS_ADMIN_RESET = 'UPDATE_PRODUCT_AS_ADMIN_RESET';\r\n\r\n//! LAPTOP\r\n//TODO: GET TOP 3 LAPTOPS\r\nexport const GET_TOP_LAPTOPS_REQUEST = 'GET_TOP_LAPTOPS_REQUEST';\r\nexport const GET_TOP_LAPTOPS_SUCCESS = 'GET_TOP_LAPTOPS_SUCCESS';\r\nexport const GET_TOP_LAPTOPS_FAIL = 'GET_TOP_LAPTOPS_FAIL';\r\n\r\n//TODO: GET ALL LAPTOPS IN DATABASES\r\nexport const GET_ALL_LAPTOPS_REQUEST = 'GET_ALL_LAPTOPS_REQUEST';\r\nexport const GET_ALL_LAPTOPS_SUCCESS = 'GET_ALL_LAPTOPS_SUCCESS';\r\nexport const GET_ALL_LAPTOPS_FAIL = 'GET_ALL_LAPTOPS_FAIL';\r\n\r\n//TODO: GET A SINGLE LAPTOP INFORMATION BASED ON ID\r\nexport const GET_A_LAPTOP_REQUEST = 'GET_A_LAPTOP_REQUEST';\r\nexport const GET_A_LAPTOP_SUCCESS = 'GET_A_LAPTOP_SUCCESS';\r\nexport const GET_A_LAPTOP_FAIL = 'GET_A_LAPTOP_FAIL';\r\nexport const GET_A_LAPTOP_RESET = 'GET_A_LAPTOP_RESET';","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post(`/api/users/login`, {email, password}, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: LOGIN_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n} \r\n\r\nexport const clearError = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR_SUBMIT\r\n    })\r\n}\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_USER_PENDING\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const user = await axios.post('api/users', { name, email, password }, config);\r\n        localStorage.setItem('userInfo', JSON.stringify(user.data));\r\n\r\n        dispatch({\r\n            type: CREATE_USER_SUCCESS,\r\n            payload: user.data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_USER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_PENDING\r\n        });\r\n\r\n        const { user: { user } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`api/users/profile` ,config);\r\n\r\n        dispatch({\r\n            type: GET_USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (userSubmitted) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, userSubmitted, config);\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_RESET,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createReview = (rating, comment, productID) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_REVIEW_PENDING\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productID}/review`, { rating, comment }, config);\r\n\r\n        dispatch({\r\n            type: CREATE_REVIEW_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport {withRouter} from 'react-router'\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 1000);\r\n    \r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 1000);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline autoComplete=\"off\" style={{ width: screenWidth ? '100%' : '60%', marginTop: screenWidth ? '1rem' : '0rem'}}>\r\n            <Container>\r\n                <Form.Control \r\n                    type='text' \r\n                    name=\"q\" \r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"Search for Product\"\r\n                    className=\"mr-sm-2\"\r\n                    style={{width: '60%'}}>\r\n                </Form.Control>\r\n                <Button type=\"submit\" variant=\"outline-dark\" className=\"p-2\">Search</Button>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logOut} from '../redux/actions/userActions';\r\nimport {GET_ORDER_OF_USER_RESET, GET_USER_DETAILS_RESET, GET_ALL_USERS_RESET} from '../redux/actions/actionTypes';\r\nimport {withRouter} from 'react-router'\r\nimport SearchBox from './SearchBox';\r\nimport styled from 'styled-components';\r\n\r\nconst Brand = styled.div`\r\n    color: black;\r\n    font-size: 1.75rem;\r\n    font-weight: 800;\r\n    font-family: Rokkitt;\r\n`;\r\n\r\nconst AddBlackColor = styled.div`\r\n    color: black;\r\n    margin-right: 0.5rem;\r\n    display: flex;\r\n`;\r\n\r\nconst WidthExpand = styled.div`\r\n`;\r\n\r\n\r\nconst Header = ({ history }) => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 1000);\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    //TODO: Hide or Show the sub nav-bar when screenSize < 950\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 1000);\r\n      };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const logOutHandler = () => {\r\n        dispatch({ type: GET_ORDER_OF_USER_RESET });\r\n        dispatch({ type: GET_USER_DETAILS_RESET });\r\n        dispatch({ type: GET_ALL_USERS_RESET });\r\n        dispatch(logOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" collapseOnSelect expand=\"lg\" style={{backgroundColor: '#fcf003'}}>\r\n            <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>\r\n                        <Brand>\r\n                            ProShop\r\n                        </Brand>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{backgroundColor: 'black'}} />\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{color: 'black'}}>\r\n                  { !screenWidth ? <SearchBox /> : null }\r\n\r\n                  {\r\n                      screenWidth ? (\r\n                        <NavDropdown title={`Products`} style={{ fontSize: '1.2rem',marginRight: '1rem 0rem' ,color: 'black', padding: '0rem'}} id=\"adminuser\">\r\n                                <LinkContainer to=\"/laptops\">\r\n                                    <NavDropdown.Item>Laptops</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/tvs\">\r\n                                    <NavDropdown.Item>TVs</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/phones\">\r\n                                    <NavDropdown.Item>Phones</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/headphones\">\r\n                                    <NavDropdown.Item>Headphones</NavDropdown.Item>\r\n                                </LinkContainer>                                \r\n                                <LinkContainer to=\"/accessories\">\r\n                                    <NavDropdown.Item>Accessories</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                        </NavDropdown>\r\n                      ) : null\r\n                  }\r\n\r\n                  <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                      <Nav.Link href=\"/cart\">\r\n                          <AddBlackColor>\r\n                            <i className='fas fa-shopping-cart' style={{ marginRight: 8, fontSize: '1.2rem' }}></i>\r\n                            <div>\r\n                                Your Cart\r\n                            </div>\r\n                          </AddBlackColor>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {\r\n                        user && user.isAdmin ? (\r\n                            <NavDropdown title={<i class=\"fas fa-crown\" style={{ fontSize: '1.2rem', marginRight: '0rem', color: 'black'}}></i>} id=\"adminuser\">\r\n                                <LinkContainer to=\"/admin/usersList\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productsList\">\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/ordersList\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        user ? (\r\n                            <NavDropdown title={<i class=\"fas fa-cog\" style={{ marginRight: 8, fontSize: '1.2rem', color: 'black' }}></i>} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logOutHandler}>\r\n                                    Log Out\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link href=\"/login\">\r\n                                <i className='fas fa-user' style={{ marginRight: 8 }}></i>\r\n                                Sign In\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        )\r\n                    }\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n            \r\n            <WidthExpand style={{width: screenWidth ? '100%' : '0%'}}>\r\n                {screenWidth ? (<SearchBox />) : null}\r\n            </WidthExpand>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubNavBar = styled.nav`\r\n    width: 100%;\r\n    color: black;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: black;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n`;\r\n\r\nconst NavItem = styled.div`\r\n    font-size: 1.25rem;\r\n    padding: 0rem 1rem;\r\n    border-right: 1px solid white;\r\n    font-weight: 600;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst SubNavbar = () => {\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 950);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 950);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    return !screenWidth ? (\r\n        <SubNavBar>\r\n            <Link to=\"/laptops\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-laptop\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Laptops\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/tvs\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-tv\" style={{ marginRight: '0.5rem' }}></i>\r\n                    TVs \r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/phones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-mobile-alt\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Phones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/headphones\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-headphones\" style={{ marginRight: '0.5rem' }}></i>\r\n                    HeadPhones\r\n                </NavItem>\r\n            </Link>\r\n            <Link to=\"/accessories\" style={{width: '100%'}}>\r\n                <NavItem>\r\n                    <i className=\"fas fa-plus\" style={{ marginRight: '0.5rem' }}></i>\r\n                    Accessories\r\n                </NavItem>\r\n            </Link>\r\n        </SubNavBar>\r\n    ) : null\r\n}\r\n\r\nexport default SubNavbar;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Footer\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nconst Rating = ({ rating, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i className={\r\n                    rating > 1 ? 'fas fa-star' : rating >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 2 ? 'fas fa-star' : rating >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 3 ? 'fas fa-star' : rating >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating > 4 ? 'fas fa-star' : rating >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            <span>\r\n                <i className={\r\n                    rating >= 5 ? 'fas fa-star' : rating >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                    style={{color}}\r\n\r\n                />\r\n            </span>\r\n            {text ? (\r\n               <div> {text && text}</div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#2b2e30',\r\n    text: null\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport Rating from './Rating';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({ product, link = '/product' }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`${link}/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`${link}/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Rating \r\n                        rating={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    $ {product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import {\r\n    GET_ALL_PRODUCTS_PENDING,\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsList = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_ALL_PRODUCTS_PENDING });\r\n        \r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n        \r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SINGLE_PRODUCT_PENDING });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_SINGLE_PRODUCT_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data : null\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCarouselProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/carousel');\r\n\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_CAROUSEL_PRODUCTS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : null\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({content, variant}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {content}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message; \r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loading({ size: lg }) {\r\n    return (\r\n        <Spinner animation=\"border\" size={lg} style={{ width: '100px', height: '100px' }} /> \r\n    );\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCarouselProducts } from '../redux/actions/productActions'\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\n\r\nconst CarouselSection = ({ carouselProducts, loading, error }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!carouselProducts) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"danger\" content={error} /> : (\r\n        <Carousel pause='hover' className='bg-dark' style={{ marginBottom: '2rem' }}>\r\n          {carouselProducts.map((product) => (\r\n            <Carousel.Item key={product._id}>\r\n                <Link to={`/product/${product._id}`}> \r\n                    <Image\r\n                      src={product.image}\r\n                      alt={product.name}\r\n                      fluid\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h4>{product.name} ({product.price})</h4>\r\n                    </Carousel.Caption>            \r\n                </Link>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default CarouselSection;\r\n","import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst HelmetSection = ({ title, href }) => {\r\n    const start = String(window.location.href)\r\n    \r\n    return(\r\n    <div className=\"application\">\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>{title}</title>\r\n            <link rel=\"canonical\" href={`${start}/${href}`} />\r\n        </Helmet>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HelmetSection;","import React, {useState, useEffect} from 'react'\r\nimport Product from '../components/Product';\r\nimport { Col, Row, Spinner, Alert, Button} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getCarouselProducts} from '../redux/actions/productActions';\r\nimport {getTopTiersLaptop} from '../redux/actions/laptopActions';\r\nimport Message from '../components/Message';\r\nimport CarouselSection from '../components/Carousel';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const dispatch = useDispatch();\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth < 950);\r\n    const { carouselProducts, loading: carouselLoading, error: carouselError } = useSelector(state => state.carouselProducts);\r\n    const { topLaptops, loading: topLaptopLoading, error: topLaptopError } = useSelector(state => state.topLaptops);\r\n\r\n    const updateMedia = () => {\r\n        setScreenWidth(window.innerWidth < 950);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateMedia);\r\n        return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (carouselProducts.length === 0) {\r\n            dispatch(getCarouselProducts());\r\n        }\r\n    }, [dispatch, carouselProducts]);\r\n\r\n    useEffect(() => {\r\n        if (topLaptops.length === 0) {\r\n            dispatch(getTopTiersLaptop());\r\n        }\r\n    }, [dispatch, topLaptops]);\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (topLaptopError) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                    <p> {topLaptopError.message} </p>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            return(\r\n                <>\r\n                <Helmet title=\"Welcome to Proshop\" href=\"\" />\r\n                \r\n                <CarouselSection carouselProducts={carouselProducts} loading={carouselLoading} error={carouselError} />\r\n                \r\n                <h1 style={{textDecoration: 'underline', fontFamily: 'Rokkitt'}}>Our Top Tiers MSI Laptops : </h1>\r\n                <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                   { !topLaptopLoading ? topLaptops.length > 0 ? topLaptops.map((laptop) => {\r\n                        return(\r\n                            <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                               <Product product={laptop} link={`/laptops`}/>\r\n                            </Col>\r\n                        );\r\n                    }) : (\r\n                        <Message variant=\"danger\" content=\"Something is wrong, please try to reload\"/>\r\n                    ) : <Spinner animation=\"border\" size=\"lg\" style={{ width: '100px', height: '100px' }} /> \r\n                   }\r\n                </Row>\r\n                <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                <Link to=\"/laptops\">\r\n                    <Button variant=\"outline-dark\">See More</Button>\r\n                </Link>\r\n                </Row>\r\n\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(checkIfErrorExisted());\r\n}\r\n\r\nexport default HomeScreen;\r\n","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getTopTiersLaptop = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops/toptier');\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_TOP_LAPTOPS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllLaptops = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get('/api/products/laptops');\r\n\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_LAPTOPS_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSingleLaptopBasedOnId = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_REQUEST\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/products/laptops/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_A_LAPTOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_A_LAPTOP_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport {Col, Image} from 'react-bootstrap';\r\n\r\nconst ProductImage = ({ name, image, laptop = false }) => {\r\n    return (\r\n        <Col md={laptop ? 8 : 5}>\r\n            <Image src={image} alt={name} fluid />\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport {Col, ListGroup} from 'react-bootstrap';\r\nimport Rating from '../Rating';\r\n\r\nconst ProductInfo = (props) => {\r\n    const { name, price, rating, numReviews, description, laptop = false } = props;\r\n\r\n    return (\r\n        <Col md={laptop ? 12 : 4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>{name}</h3>\r\n                    <h4>Price: ${price}</h4>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Rating rating={rating} text={`${numReviews} reviews`} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    Description: {description}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_TO_CART,\r\n    SAVE_SHIPPING_ADDRESS_CART,\r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addItemToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const data = (await axios.get(`/api/products/${id}`)).data;\r\n\r\n        dispatch({\r\n            type: ADD_PRODUCT_TO_CART,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n    } catch(error) {\r\n        console.log(error);\r\n    } \r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCT_TO_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_ADDRESS_CART,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (paymentMethod) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: paymentMethod\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n}\r\n\r\nexport const removeProductsInCartAfterBuy = () => async (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n    });\r\n\r\n    localStorage.setItem('cartItems', []);\r\n}","import React, {useState} from 'react';\r\nimport {Col, Row, Card, ListGroup, Form, Button } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../redux/actions/cartActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ProductCard = ( props ) => {\r\n    const history = useHistory();\r\n    const [quantity, setQuantity] = useState(1);\r\n    const {price, countInStock, id} = props;\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${id}?qty=${quantity}`);\r\n    }\r\n\r\n    return (\r\n        <Col md={props.laptop ? 4 : 3}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Price:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>${price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>\r\n                                Status:\r\n                            </Col>\r\n                            <Col>\r\n                                <strong>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty:</Col>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}>\r\n                                            {\r\n                                            [...Array(countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                            onClick={addToCartHandler}\r\n                            className=\"btn-block\" \r\n                            type=\"button\"\r\n                            disabled={countInStock === 0}>\r\n                                ADD TO CART\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductCard;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert, Col, ListGroup, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { createReview } from '../redux/actions/userActions';\r\nimport { CREATE_REVIEW_RESET } from '../redux/actions/actionTypes';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Rating from '../components/Rating';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const {singleProduct, loading, error} = useSelector(state => state.singleProduct);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getSingleProduct(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess]);\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: CREATE_REVIEW_RESET });\r\n        dispatch(createReview( rating, comment, singleProduct._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleProduct) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleProduct.name} href={singleProduct._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleProduct.image} \r\n                                name={singleProduct.name} \r\n                            />\r\n                            <ProductInfo \r\n                                name={singleProduct.name}\r\n                                price={singleProduct.price}\r\n                                rating={singleProduct.rating}\r\n                                description={singleProduct.description}\r\n                                numReviews={singleProduct.numReviews}\r\n                            />\r\n                            <ProductCard \r\n                                price={singleProduct.price}\r\n                                countInStock={singleProduct.countInStock}\r\n                                id={match.params.id}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h2>Reviews</h2>\r\n                                { singleProduct.reviews.length === 0 ? (\r\n                                    <>\r\n                                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                                        { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                    </>\r\n                                    ) : (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        { singleProduct.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating rating={review.rating} />\r\n                                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                                <p>{ review.comment }</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Post A Review</h2>\r\n                                            {userReviewError ? (\r\n                                                <Message \r\n                                                    variant=\"danger\" \r\n                                                    content={ userReviewError === 'User has already review this product'\r\n                                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                                            ) : null}\r\n                                            { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    const { user } = useSelector(state => state.user);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addItemToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeItemFromCart(id));\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        if (user) {\r\n            history.push('/shipping');\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title='Your Shopping Cart' href='/cart' />\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <h2>Your Cart is empty <Link to=\"/\">Go Back</Link></h2> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/product/{item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control \r\n                                        style={{ padding: \"0.5rem 0.75rem\" }}\r\n                                        as=\"select\" \r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addItemToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map(x => \r\n                                                (<option key={x+1} value={x+1}> {x+1} </option>))\r\n                                            }        \r\n                                    </Form.Control> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            type=\"button\" \r\n                                            variant=\"light\"\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <p style={{fontSize: '1.2rem', padding: '1rem 0'}}> Count Items: {cartItems.reduce((acc, item) => acc + item.qty, 0)} items</p>\r\n                            <p style={{fontSize: '1.2rem'}}> Total: ${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)} </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type=\"button\" \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0}\r\n                                onClick={() => checkOutHandler()}>\r\n                                    CHECK OUT\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={8}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const dispatch = useDispatch(); \r\n    const {user, loading, error} = useSelector(state => state.user);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect)\r\n        }   \r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loginUser(email, password));\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Log In | ProShop\" href=\"/login\" />\r\n            <h1>Sign In</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                 \r\n                 <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Don't have an account ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Click Here !</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>    \r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {createUser, clearError} from '../redux/actions/userActions';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, loading, error } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, user, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(clearError());\r\n        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            dispatch(createUser(name, email, password));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title=\"Register | Proshop\" />\r\n            <h1>Sign Up With Us</h1>\r\n            { formError ? <Message content={formError} /> : null }\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : null }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Your Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"Re-type Your Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Submit</Button>\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have an account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>  \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = ( orderItems, shippingAddress, paymentMethod, itemsPrice, taxPrice, shippingPrice, totalPrice) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const createdOrder = await axios.post(`/api/orders`, {\r\n            orderItems, \r\n            shippingAddress, \r\n            paymentMethod, \r\n            itemsPrice, \r\n            taxPrice, \r\n            shippingPrice, \r\n            totalPrice,\r\n            user\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_SUCCESS,\r\n            payload: createdOrder.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderById = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const order = await axios.get(`/api/orders/${id}`,config);\r\n\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_SUCCESS,\r\n            payload: order.data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDER_BY_ID_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderID, paymentResult) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderID}/pay`, paymentResult ,config)\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrdersByUserId = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/myorders', config);\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ORDERS_OF_USERS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { getUserDetails, updateUserDetails } from '../redux/actions/userActions';\r\nimport { getOrdersByUserId } from '../redux/actions/orderActions';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { details, loading, detailError, success } = useSelector(state => state.userDetails);\r\n    const { user } = useSelector(state => state.user);\r\n    const { orders, loading: userOrderLoading, success: userOrderSuccess, error: userOrderError } = useSelector(state => state.userOrders);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!details.name) {\r\n                dispatch(getUserDetails());\r\n            } else {\r\n                setName(details.name);\r\n                setEmail(details.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, user, details]);\r\n\r\n    useEffect(() => {\r\n        if (!userOrderSuccess) {\r\n            dispatch(getOrdersByUserId());\r\n        }\r\n    }, [userOrderSuccess, dispatch]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();        \r\n        if (password !== confirmPassword) {\r\n            setFormError('Your password and confirm password did not match, please try again');\r\n        } else {\r\n            setFormError(\"\");\r\n            //UPDATE PROFILE\r\n            dispatch(updateUserDetails({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Helmet title={`${name} Profile`} href=\"/profile\" />\r\n            <Col md={4}>\r\n                <h1>Your Profile :</h1>\r\n                { formError ? <Message variant=\"danger\" content={formError} /> : null }\r\n                { detailError ? <Message variant=\"danger\" content={detailError} /> : null }\r\n                { success ? <Message variant=\"success\" content=\"Update profile successfully !\" /> : null }\r\n                { loading ? <Loading /> : null }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Your Name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Your Password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Re-Confirm Your Password :</Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Re-type Your Password\" \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n                <h2>My Orders :</h2>\r\n                {userOrderLoading ? <Loading /> : userOrderError ? <Message variant=\"danger\" content=\"Something is wrong, please try again :(\" /> : (\r\n                    <Table striped bordered hover responsive className=\"table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}> \r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                        { order.isDelivered ? order.deliveredAt.substring(0,10) : \r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button className=\"btn-sm\" variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                )}\r\n            </Col>\r\n        </Row>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport { Nav }  from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckOutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-3\">\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link> }    \r\n            </Nav.Item> \r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link> }    \r\n            </Nav.Item>    \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutStep;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../redux/actions/cartActions';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode, \r\n            country\r\n        }));\r\n        history.push('/payment');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Shipping Info | ProShop`} href=\"/shipping\" />\r\n            <CheckOutStep step1 step2 />\r\n            <h1>Your Shipping Address :</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Your Address :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Address\" \r\n                        value={address} \r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>City :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={city} \r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>PostalCode :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"PostalCode\" \r\n                        value={postalCode} \r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Country :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your City\" \r\n                        value={country} \r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport { savePaymentMethod } from '../redux/actions/cartActions';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //? Directing user to shipping page if they don't have the shipping address and try to access\r\n    //? the page through url\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;   \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet title={`Payment Selection | ProShop`} href=\"/payment\" />\r\n            <CheckOutStep step1 step2 step3/>\r\n            <h1>Payment Methods :</h1>\r\n            <Form onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as=\"legend\">Select Method</Form.Label>    \r\n                </Form.Group>    \r\n\r\n                <Col className=\"mb-3\">\r\n                    <Form.Check \r\n                        type=\"radio\" \r\n                        label=\"PayPal or CreditCard\" \r\n                        id=\"PayPal\" \r\n                        name=\"paymentMethod\" \r\n                        value=\"PayPal\" \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                </Col>\r\n\r\n                <Button type=\"submit\" variant=\"primary\"> Continue </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrder } from '../redux/actions/orderActions';\r\nimport { removeProductsInCartAfterBuy } from '../redux/actions/cartActions';\r\nimport Message from '../components/Message';\r\nimport CheckOutStep from '../components/CheckOutStep';\r\nimport {Link} from 'react-router-dom';\r\nimport Helmet from '../components/Helmet'; \r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress, cartItems, paymentMethod } = useSelector(state => state.cart);\r\n    const { orders, success, error } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`orders/${orders._id}`);\r\n        }\r\n        //enable-disable-next-line\r\n    }, [history, success]);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2);\r\n    }\r\n\r\n    let itemsPrice = cartItems.reduce((acc, curItem) => acc + curItem.price * curItem.qty, 0);\r\n    let shippingPrice = itemsPrice > 200 ? 0 : 10;\r\n    let taxPrice = addDecimals(Number((itemsPrice/100)*5).toFixed(2));\r\n    let totalPrice = Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice);\r\n\r\n    const onPlaceOrderHandler = () => {\r\n        dispatch(createOrder(\r\n            cartItems,\r\n            shippingAddress,\r\n            paymentMethod,\r\n            itemsPrice,\r\n            taxPrice,\r\n            shippingPrice,\r\n            totalPrice\r\n        ));\r\n\r\n        dispatch(removeProductsInCartAfterBuy());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckOutStep step1 step2 step3 step4 />\r\n            <Helmet title={`PlaceOrder | ProShop`} href=\"/placeorder\" />\r\n            <Row>\r\n                <Col md={9}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p> \r\n                                <strong>Address : </strong>\r\n                                {shippingAddress.address},  {shippingAddress.city}, {shippingAddress.postalCode}, {shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p> \r\n                                <strong>Method : </strong>\r\n                                {paymentMethod} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { !cartItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                              <ListGroup variant=\"flush\">\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                              </ListGroup>  \r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> Items </Col>\r\n                                    <Col> ${itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> ShippingPrice </Col>\r\n                                    <Col> {shippingPrice === 0 ? \"Free\" : `$${shippingPrice}`} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TaxPrice </Col>\r\n                                    <Col> ${taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col> TOTAL : </Col>\r\n                                    <Col> ${totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {\r\n                                error ? (\r\n                                    <ListGroup.Item>\r\n                                        <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                                    </ListGroup.Item>\r\n                                ) : null \r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={onPlaceOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL\r\n} from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            error:  error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUserAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}` \r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/users/delete/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_AS_ADMIN_SUCCESS,\r\n            payload: 'User has been deleted successfully.'\r\n        });\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: DELETE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadUserInfo = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserInfo = (name, email, isAdmin, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${id}`, { name, email, isAdmin } ,config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_USER_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProductAsAdmin = (name, price, image, brand, category, countInStock, description, id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type:  UPDATE_PRODUCT_AS_ADMIN_REQUEST });\r\n\r\n        const {user: {user}} = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/products/${id}`, {\r\n            name, \r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock, \r\n            description\r\n        }, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n            error: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllOrdersAsAdmin = () => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: {user} } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders/allorders', config);\r\n\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n            error: 'Something is wrong, please try again'\r\n        });\r\n    }\r\n}\r\n\r\nexport const putIsDeliveredStatusAsAdmin = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_REQUEST\r\n        });\r\n\r\n        const { user: { user } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'applicaiton/json',\r\n                'Authorization': `Bearer ${user.token}`\r\n            }\r\n        }\r\n\r\n        await axios.put(`/api/orders/${id}/delivery`, {}, config);\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_SUCCESS\r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getOrderById, payOrder } from '../redux/actions/orderActions';\r\nimport { putIsDeliveredStatusAsAdmin } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { PUT_ISPAID_STATUS_ORDER_RESET, PUT_IS_DELIVERED_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const id = match.params.id;  \r\n    const { orderItem, loading, success, error } = useSelector(state => state.loadedOrder);\r\n    const { loading: loadingPay, success: successPay} = useSelector(state => state.updatedIsPaidOrder);\r\n    const { loading: updateIsDeliveredLoading, success: successIsDeliveredStatus, error:  errorIsDeliveredStatus} = useSelector(state => state.isDeliveredOrderAdmin);\r\n    const { user } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || orderItem._id !== id) {\r\n            dispatch(getOrderById(id))\r\n        }\r\n    }, [id, orderItem, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const addPaypalScript = async () => {\r\n            const { data: clientid } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientid}`\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (!orderItem || successPay ) {\r\n            dispatch({\r\n                type: PUT_ISPAID_STATUS_ORDER_RESET\r\n            })\r\n            dispatch(getOrderById(id));\r\n        } else if (!orderItem.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [id, successPay, dispatch, orderItem])\r\n\r\n    useEffect(() => {\r\n        if (!orderItem || successIsDeliveredStatus) {\r\n            dispatch({\r\n                type: PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n            });\r\n            dispatch(getOrderById(id));\r\n        }\r\n    }, [dispatch, id, successIsDeliveredStatus, orderItem]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(id, paymentResult));\r\n    }\r\n\r\n    const changeDeliveryStatus = () => {\r\n        dispatch(putIsDeliveredStatusAsAdmin(id));\r\n    }\r\n\r\n    const date = String(orderItem.createdAt).split('T')[0];\r\n\r\n    return loading ? <Loading /> : error ? <Message variant=\"error\" content={error} /> : success ? (<Row>\r\n        <Col md={8}>\r\n            <Helmet title={`Order | ProShop`} href=\"/orders\" />\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order {orderItem._id}</h2>\r\n                    <p> \r\n                        <strong>Buyer : </strong>\r\n                        {orderItem.user.name} - {orderItem.user.email}\r\n                    </p>                 \r\n                    <p> \r\n                        <strong>Address : </strong>\r\n                        {orderItem.shippingAddress.address},  {orderItem.shippingAddress.city}, {orderItem.shippingAddress.postalCode}, {orderItem.shippingAddress.country} \r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p> \r\n                        <strong>Method : </strong>\r\n                        {orderItem.paymentMethod} \r\n                    </p>\r\n                    <p>\r\n                        {orderItem.isPaid ? <Message variant=\"success\" content=\"Already Paid\" /> : <Message content=\"Haven't been paid yet\" variant=\"danger\" />}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { !orderItem.orderItems.length ? <Message content=\"Your cart is empty\" variant=\"secondary\" /> : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {orderItem.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                                <Row>\r\n                                    <Col md={1}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>  \r\n                    ) }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Date:  </Col>\r\n                            <Col> {date} </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> Delivery Status:  </Col>\r\n                            { updateIsDeliveredLoading ? <Loading size=\"sm\" /> : errorIsDeliveredStatus ? <Message variant=\"danger\" content=\"ERROR please try again\" /> : (\r\n                                <Col> {orderItem.isDelivered ? 'Is Delivering...' : 'Not Shipping'} </Col>\r\n                            ) }\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col> <h4>TOTAL :</h4> </Col>\r\n                            <Col> <h5>${orderItem.totalPrice}</h5> </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        error ? (\r\n                            <ListGroup.Item>\r\n                                <Message content=\"unable to proceed, please try again\" variant=\"danger\" />\r\n                            </ListGroup.Item>\r\n                        ) : null \r\n                    }\r\n                    {\r\n                        user.isAdmin ? (\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={changeDeliveryStatus}\r\n                                className=\"btn-block\" \r\n                                type=\"button\"\r\n                                >\r\n                                    CHANGE DELIVERY STATUS\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    {\r\n                        !orderItem.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loading />}\r\n                                {!sdkReady ? <Loading /> : (\r\n                                    <PayPalButton \r\n                                        amount={orderItem.totalPrice}\r\n                                        onSuccess={successPaymentHandler} \r\n                                    /> \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n) : null;\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllUsers, deleteUserAsAdmin } from '../redux/actions/adminActions'; \r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { usersList, loading, error } = useSelector(state => state.adminUsersList);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deletedAdmin);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllUsers());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, success, history]);\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(deleteUserAsAdmin(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={`Admin Users List | ProShop`} href=\"/admin/usersList\" />\r\n            <h1>Users</h1>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usersList && usersList.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.isAdmin ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>\r\n                                    <LinkContainer to={`users/${user._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { loadUserInfo, updateUserInfo } from '../redux/actions/adminActions';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst AdminUserInfoScreen = ({ match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = match.params.id;\r\n    const { user, loading, error } = useSelector(state => state.userInfoAdmin);\r\n    const { success } = useSelector(state => state.updateUserInfo);\r\n\r\n    useEffect(() => {   \r\n        if (!user) {\r\n            dispatch(loadUserInfo(userId));\r\n        } \r\n    }, [ dispatch, userId, user]);    \r\n    \r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAdmin(user.isAdmin);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserInfo(userId));\r\n    }, [success]);\r\n\r\n    const submitHandler = () => {\r\n        dispatch(updateUserInfo(name, email, admin, userId));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Helmet title={`Admin Edit User | ProShop`} href=\"/admin/usersList\" />\r\n        <Link to='/admin/usersList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check \r\n                    type='checkbox'\r\n                    label='Is Admin'    \r\n                    value={admin}\r\n                    checked={admin}\r\n                    onChange={(e) => setAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default AdminUserInfoScreen;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    \r\n    return pages > 1 ? (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                    key={x+1} \r\n                    to={isAdmin ? `/admin/productsList/${x+1}` : keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    ) : null;\r\n}\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport Paginate from '../components/Paginate';\r\nimport { getProductsList } from '../redux/actions/productActions';\r\nimport { deleteProductAsAdmin, createProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { DELETE_PRODUCT_AS_ADMIN_RESET, CREATE_SAMPLE_PRODUCT_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductListAdminScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n    const { products, loading, error, pages, page } = useSelector(state => state.productsList);\r\n    const { createdProduct, success: createSuccess } = useSelector(state => state.createdProduct);\r\n    const { user } = useSelector(state => state.user);\r\n    const { success } = useSelector(state => state.deleteProduct);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getProductsList('', pageNumber));\r\n            dispatch({ type: DELETE_PRODUCT_AS_ADMIN_RESET });\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch, success, pageNumber]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_SAMPLE_PRODUCT_RESET });\r\n\r\n        if (createSuccess) { \r\n            history.push(`/admin/products/${createdProduct._id}/edit`);\r\n        }\r\n    }, [createSuccess, history, dispatch, createdProduct]);\r\n    \r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product ?')) {\r\n            dispatch(deleteProductAsAdmin(id));\r\n        }\r\n    }\r\n\r\n    const createHandler = () => {\r\n        dispatch(createProductAsAdmin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button onClick={createHandler} className=\"btn btn-dark my-3\" style={{ 'right': 0 }}>\r\n                        + Create Product \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <>\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products && products.map((product) => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`products/${product._id}/edit`}>\r\n                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/> \r\n                </>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListAdminScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport Loading from '../components/Loading';\r\nimport { getSingleProduct } from '../redux/actions/productActions';\r\nimport { updateProductAsAdmin } from '../redux/actions/adminActions';\r\nimport { UPDATE_PRODUCT_AS_ADMIN_RESET } from '../redux/actions/actionTypes';\r\n\r\nconst ProductEditScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const productID = match.params.id;\r\n    const { singleProduct, loading, error } = useSelector(state => state.singleProduct);\r\n    const { success: updatedSuccess, loading: updatedLoading, error: updatedError } = useSelector(state => state.updatedProduct);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getSingleProduct(productID));\r\n        }\r\n    }, [productID, updatedSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (singleProduct) {\r\n            setName(singleProduct.name);\r\n            setPrice(singleProduct.price);\r\n            setImage(singleProduct.image);\r\n            setBrand(singleProduct.brand);\r\n            setCountInStock(singleProduct.countInStock);\r\n            setCategory(singleProduct.category);\r\n            setDescription(singleProduct.description);\r\n        }\r\n    }, [singleProduct])\r\n\r\n    const submitHandler = () => {\r\n        dispatch({ type: UPDATE_PRODUCT_AS_ADMIN_RESET });\r\n        dispatch(updateProductAsAdmin(name, price, image, brand, category, countInStock, description, productID));\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch(error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link to='/admin/productsList' className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User :</h1>\r\n            { error ? <Message variant=\"danger\" content={error} /> : null }\r\n            { loading ? <Loading /> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Your Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>price :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Price\" \r\n                        value={price} \r\n                        onChange={(e) => setPrice(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Image :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Enter Your Image URL\" \r\n                        value={image} \r\n                        onChange={(e) => setImage(e.target.value)} />\r\n                    <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                    onChange={uploadFileHandler}></Form.File>\r\n                    {uploading ? <Loading /> : null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Product Brand\" \r\n                        value={brand} \r\n                        onChange={(e) => setBrand(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='countInStock'>\r\n                    <Form.Label>Count In Stock :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"\" \r\n                        value={countInStock} \r\n                        onChange={(e) => setCountInStock(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='category'>\r\n                    <Form.Label>Category :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Category\" \r\n                        value={category} \r\n                        onChange={(e) => setCategory(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description :</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Description...\" \r\n                        value={description} \r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant='primary'>Update</Button>\r\n            </Form>\r\n            ) }\r\n        </FormContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loading from '../components/Loading';\r\nimport { getAllOrdersAsAdmin } from '../redux/actions/adminActions';\r\n\r\nconst AdminOrdersScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { orders, loading, error } = useSelector(state => state.adminOrders);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            dispatch(getAllOrdersAsAdmin());\r\n        } else {\r\n            history.push('/');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, dispatch]);\r\n    \r\n    const direct = (id) => {\r\n        history.push(`/orders/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please try again\" /> : (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER ID</th>\r\n                            <th>PRICE</th>\r\n                            <th>IS PAID</th>\r\n                            <th>IS DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order) => (\r\n                            <tr key={order._id} onClick={() => direct(order._id)}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                                <td>{order.isDelivered ? <i className=\"fas fa-check\" style={{color: 'green'}}></i> :  <i className='fas fa-times' style={{color: 'red'}}></i> }</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminOrdersScreen;\r\n","import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Helmet from '../components/Helmet';\r\nimport {getAllLaptops} from '../redux/actions/laptopActions';\r\n\r\nconst LaptopScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { laptops, loading, error } = useSelector(state => state.allLaptops);\r\n    \r\n    useEffect(() => {\r\n        if (laptops.length === 0) {\r\n            dispatch(getAllLaptops());\r\n        }\r\n    }, [dispatch, laptops]);\r\n\r\n    return(\r\n        <>\r\n            <Helmet title=\"Laptops | ProShop\" />\r\n            <Row style={{ justifyContent: 'center', alignItems: 'center'}}>\r\n                {loading ? <Loading /> : error ? <Message variant=\"danger\" content=\"Something is wrong, please reload the webpage\" /> : laptops.map((laptop) => {\r\n                    return(\r\n                        <Col sm={12} md={6} lg={6} xl={4} key={laptop._id}>\r\n                            <Product product={laptop} link={`/laptops`}/>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LaptopScreen;","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Alert, Col, ListGroup, Form, Button, Table  } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSingleLaptopBasedOnId } from '../redux/actions/laptopActions';\r\nimport { createReview } from '../redux/actions/userActions';\r\nimport { GET_A_LAPTOP_RESET } from '../redux/actions/actionTypes';\r\n\r\n//! Product Components \r\nimport ProductImage from '../components/ProductDetail/ProductImage';\r\nimport ProductInfo from '../components/ProductDetail/ProductInfo';\r\nimport ProductCard from '../components/ProductDetail/ProductCard';\r\nimport Loading from '../components/Loading';\r\nimport Message from '../components/Message';\r\nimport Rating from '../components/Rating';\r\nimport Helmet from '../components/Helmet';\r\n\r\nconst SingleLaptopScreen = ({ match }) => {\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const {singleLaptop, loading, error} = useSelector(state => state.singleLaptop);\r\n    const {success: userReviewSuccess, error: userReviewError } = useSelector(state => state.userReview);\r\n    const { user } = useSelector(state => state.user);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getSingleLaptopBasedOnId(match.params.id));\r\n    }, [dispatch, match.params.id, userReviewSuccess]);\r\n\r\n    const onSubmitReviewHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: GET_A_LAPTOP_RESET });\r\n        dispatch(createReview( rating, comment, singleLaptop._id ));\r\n        setRating(0);\r\n        setComment('');\r\n    }\r\n\r\n    const checkIfErrorExisted = () => {\r\n        if (error) {\r\n            return (\r\n                <Alert variant=\"danger\" dismissible>\r\n                    <Alert.Heading>Something went wrong :(</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        } else {\r\n            if (!loading && singleLaptop) {\r\n                return(\r\n                    <>\r\n                        <Helmet title={singleLaptop.name} href={singleLaptop._id} />\r\n                        <Link className=\"btn btn-dark my-3\" to=\"/\">Go Back</Link>\r\n                        <Row>   \r\n                            <ProductImage \r\n                                image={singleLaptop.image} \r\n                                name={singleLaptop.name} \r\n                                laptop\r\n                            />\r\n                            <ProductCard \r\n                                price={singleLaptop.price}\r\n                                countInStock={singleLaptop.countInStock}\r\n                                id={match.params.id}\r\n                                laptop\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                        <ProductInfo \r\n                                name={singleLaptop.name}\r\n                                price={singleLaptop.price}\r\n                                rating={singleLaptop.rating}\r\n                                description={singleLaptop.description}\r\n                                numReviews={singleLaptop.numReviews}\r\n                                laptop\r\n                        />\r\n                        </Row>\r\n                        <Row style={{ marginBottom: '2rem', marginTop: '2rem' }}>\r\n                            <Col md={8}>\r\n                                <h2> Details : </h2>\r\n                                <Table striped bordered hover>\r\n                                  <thead>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td>Display Size (inches)</td>\r\n                                      <td>{singleLaptop.details[0].displaySizeInches}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Resolution (Pixels)</td>\r\n                                      <td>{singleLaptop.details[0].resolutionPixels}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Screen Resolution</td>\r\n                                      <td>{singleLaptop.details[0].screenResolution}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Display type</td>\r\n                                      <td>{singleLaptop.details[0].displayType}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Type</td>\r\n                                      <td>{singleLaptop.details[0].proccessorType}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Cores</td>\r\n                                      <td>{singleLaptop.details[0].proccessorCores}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Memory Cache</td>\r\n                                      <td>{singleLaptop.details[0].processorMemoryCache}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Clock Speed (GHz)</td>\r\n                                      <td>{singleLaptop.details[0].processorClockSpeed}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Processor Max. Clock Speed (GHz)</td>\r\n                                      <td>{singleLaptop.details[0].processorMaxClockSpeed}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Graphics processor</td>\r\n                                      <td>{singleLaptop.details[0].graphicsProcessor}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>RAM (GB)</td>\r\n                                      <td>{singleLaptop.details[0].ram}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>SSD Storage</td>\r\n                                      <td>{singleLaptop.details[0].ssdStorage}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>USB 2.0 Ports</td>\r\n                                      <td>{singleLaptop.details[0].usbTwoPointOPorts}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>USB C Ports</td>\r\n                                      <td>{singleLaptop.details[0].usbCPorts}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Card Reader</td>\r\n                                      <td>{singleLaptop.details[0].cardReader}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Web Cam</td>\r\n                                      <td>{singleLaptop.details[0].webCam}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Wi-Fi</td>\r\n                                      <td>{singleLaptop.details[0].wifi}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Operating system</td>\r\n                                      <td>{singleLaptop.details[0].operatingSystem}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td>Manufacturer's warranty</td>\r\n                                      <td>{singleLaptop.details[0].manufacturersWarantty}</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h2>Reviews</h2>\r\n                                { singleLaptop.reviews.length === 0 ? (\r\n                                    <>\r\n                                        <Message content=\"No Review\" variant=\"secondary\" />\r\n                                        { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                    </>\r\n                                    ) : (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        { singleLaptop.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating rating={review.rating} />\r\n                                                <p>{ review.createdAt.substring(0,10) }</p>\r\n                                                <p>{ review.comment }</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Post A Review</h2>\r\n                                            {userReviewError ? (\r\n                                                <Message \r\n                                                    variant=\"danger\" \r\n                                                    content={ userReviewError === 'User has already review this product'\r\n                                                        ? userReviewError :\"Something is wrong while we're trying to create the reviews, please reload the page\" }/>\r\n                                            ) : null}\r\n                                            { user ? (\r\n                                                <Form onSubmit={onSubmitReviewHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label> Rating </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select' \r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Awful</option>\r\n                                                                <option value='2'>2 - Bad</option>\r\n                                                                <option value='3'>3 - Okay</option>\r\n                                                                <option value='4'>4 - Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId=\"comment\">\r\n                                                        <Form.Label> Comment </Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='textarea' \r\n                                                            row='3' \r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" className=\"btn btn-primary\"> Submit </Button>\r\n                                                </Form>\r\n                                            ) : <Message content=\"You need to sign in to post a review\" variant=\"primary\" />}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                );\r\n            } else {\r\n                return( <Loading /> );                \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        checkIfErrorExisted()\r\n    );\r\n}\r\n\r\nexport default SingleLaptopScreen;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(ScrollToTop)","import React from 'react';\nimport Header from './components/Header';\nimport SubNavbar from './components/SubNavbar';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport AdminUserInfoScreen from './screens/AdminUserInfoScreen';\nimport ProductListAdminScreen from './screens/ProductListAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport AdminOrdersScreen from './screens/AdminOrdersScreen';\nimport LaptopScreen from './screens/LaptopScreen';\nimport SingleLaptopScreen from './screens/SingleLaptopScreen';\n\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop>\n      <Header/>\n      <SubNavbar />\n      <main className='py-3'>\n        <Container>\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/laptops\" component={LaptopScreen} exact />\n          <Route path=\"/laptops/:id\" component={SingleLaptopScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} exact /> \n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/shipping\" component={ShippingScreen} exact />\n          <Route path=\"/payment\" component={PaymentScreen} exact />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/admin/usersList\" component={AdminScreen} exact />\n          <Route path=\"/admin/users/:id/edit\" component={AdminUserInfoScreen} />\n          <Route path=\"/admin/productsList\" component={ProductListAdminScreen} exact />\n          <Route path=\"/admin/productsList/:pageNumber\" component={ProductListAdminScreen} />\n          <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/ordersList\" component={AdminOrdersScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer/>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    GET_ALL_PRODUCTS_PENDING, \r\n    GET_ALL_PRODUCTS_SUCCESS, \r\n    GET_ALL_PRODUCTS_FAIL,\r\n\r\n    GET_SINGLE_PRODUCT_PENDING,\r\n    GET_SINGLE_PRODUCT_SUCCESS,\r\n    GET_SINGLE_PRODUCT_FAIL,\r\n\r\n    DELETE_PRODUCT_AS_ADMIN_REQUEST,\r\n    DELETE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    DELETE_PRODUCT_AS_ADMIN_FAIL,\r\n    DELETE_PRODUCT_AS_ADMIN_RESET,\r\n\r\n    GET_CAROUSEL_PRODUCTS_REQUEST,\r\n    GET_CAROUSEL_PRODUCTS_SUCCESS,\r\n    GET_CAROUSEL_PRODUCTS_FAIL\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products: [],\r\n    pages: null,\r\n    page: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_PRODUCTS_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case GET_ALL_PRODUCTS_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initlaStateSingleProduct = {\r\n    singleProduct: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const SingleProductReducer = (state = initlaStateSingleProduct, action) => {\r\n    switch(action.type) {\r\n        case GET_SINGLE_PRODUCT_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_SINGLE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                singleProduct: action.payload\r\n            }\r\n        case GET_SINGLE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst delete_Product_InitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const deleteProductAsAdmin = (state = delete_Product_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_PRODUCT_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case DELETE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst carouselProductInitialState = {\r\n    carouselProducts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const carouselProductReducer = (state = carouselProductInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_CAROUSEL_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                carouselProducts: action.payload\r\n            }\r\n        case GET_CAROUSEL_PRODUCTS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n} ","import { \r\n    ADD_PRODUCT_TO_CART, \r\n    REMOVE_PRODUCT_TO_CART, \r\n    SAVE_SHIPPING_ADDRESS_CART, \r\n    SAVE_PAYMENT_METHOD,\r\n    REMOVE_PRODUCTS_FROM_CART_AFTERBUY\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    shippingAddress: {\r\n        address: '',\r\n        city: '',\r\n        postalCode: '',\r\n        country: ''\r\n    },\r\n    paymentMethod: ''\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PRODUCT_TO_CART: \r\n            const item = action.payload;\r\n\r\n            const existedItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existedItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existedItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_PRODUCT_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPPING_ADDRESS_CART: \r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case SAVE_PAYMENT_METHOD: \r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case REMOVE_PRODUCTS_FROM_CART_AFTERBUY: \r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n\r\n    LOGOUT_USER,\r\n\r\n    CREATE_USER_PENDING,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_FAIL,\r\n\r\n    CLEAR_ERROR_SUBMIT,\r\n\r\n    GET_USER_DETAILS_PENDING,\r\n    GET_USER_DETAILS_SUCCESS,\r\n    GET_USER_DETAILS_FAIL,\r\n    GET_USER_DETAILS_RESET,\r\n\r\n    UPDATE_USER_DETAIL_PENDING,\r\n    UPDATE_USER_DETAIL_SUCCESS,\r\n    UPDATE_USER_DETAIL_FAIL,\r\n    UPDATE_USER_DETAIL_RESET,\r\n\r\n    CREATE_REVIEW_PENDING,\r\n    CREATE_REVIEW_SUCCESS,\r\n    CREATE_REVIEW_FAIL,\r\n    CREATE_REVIEW_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst initialUserState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = initialUserState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                error: null\r\n            }\r\n        case CREATE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR_SUBMIT:    \r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case UPDATE_USER_DETAIL_RESET: \r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialDetailState = {\r\n    details: {},\r\n    loading: false,\r\n    detailError: null,\r\n    success: false\r\n}\r\n\r\nconst userDetailsReducer = (state = initialDetailState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_DETAILS_PENDING :\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_USER_DETAILS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                details: action.payload\r\n            }\r\n        case GET_USER_DETAILS_FAIL :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_DETAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                details: action.payload\r\n            }\r\n        case UPDATE_USER_DETAIL_FAIL:\r\n            return {\r\n                ...state,\r\n                detailError: action.payload\r\n            }   \r\n        case GET_USER_DETAILS_RESET: \r\n            return {\r\n                details: {},\r\n                loading: false,\r\n                detailError: null,\r\n                success: false   \r\n            }\r\n        default : \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nconst initialReviewState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst userReviewReducer = (state = initialReviewState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_REVIEW_PENDING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case CREATE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_REVIEW_RESET: \r\n            return {\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userReducer,\r\n    userDetailsReducer,\r\n    userReviewReducer\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_REQUEST_SUCCESS,\r\n    ORDER_CREATE_REQUEST_FAIL,\r\n\r\n    GET_ORDER_BY_ID,\r\n    GET_ORDER_BY_ID_SUCCESS,\r\n    GET_ORDER_BY_ID_FAIL,\r\n\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS,\r\n    PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL,\r\n    PUT_ISPAID_STATUS_ORDER_RESET,\r\n\r\n    GET_ORDERS_OF_USERS,\r\n    GET_ORDERS_OF_USERS_SUCCESS,\r\n    GET_ORDERS_OF_USERS_FAIL,\r\n    GET_ORDER_OF_USER_RESET,\r\n\r\n    GET_ALL_ORDERS_AS_ADMIN_REQUEST,\r\n    GET_ALL_ORDERS_AS_ADMIN_SUCCESS,\r\n    GET_ALL_ORDERS_AS_ADMIN_FAIL,\r\n\r\n    PUT_IS_DELIVERED_AS_ADMIN_REQUEST,\r\n    PUT_IS_DELIVERED_AS_ADMIN_SUCCESS,\r\n    PUT_IS_DELIVERED_AS_ADMIN_FAIL,\r\n    PUT_IS_DELIVERED_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\n//TODO: First Loaded Order\r\nconst orderInitialState = {\r\n    orders: {},\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nconst ordersReducer = (state = orderInitialState, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_CREATE_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Loading an order based on it ID\r\nconst loadedOrdersState = {\r\n    orderItem: {},\r\n    loading: false,\r\n    error: null, \r\n    success: false\r\n}\r\n\r\nconst loadedOrderFromDatabasesReducer = (state = loadedOrdersState, action) => { \r\n    switch(action.type) {\r\n        case GET_ORDER_BY_ID:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDER_BY_ID_SUCCESS: \r\n            return {\r\n                ...state,\r\n                orderItem: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDER_BY_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n//TODO: Updating Order.isPaid status\r\nconst orderPayInitialState = {\r\n\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst orderPayReducer = (state = orderPayInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true                \r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_REQUEST_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_ISPAID_STATUS_ORDER_RESET:\r\n            const newState = {}\r\n            return newState\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n//TODO: Get all orders related to the user\r\nconst userOrdersInitialState = {\r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nconst getOrdersBasedOnUserId = (state = userOrdersInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ORDERS_OF_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: [...action.payload],\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_ORDERS_OF_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ORDER_OF_USER_RESET:\r\n            const nullState = {\r\n                orders: [],\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            };\r\n            return nullState;\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: Get all orders as admin\r\nconst ordersAdminInitialState = { \r\n    orders: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n} \r\n\r\nconst getOrdersAsAdmin = (state = ordersAdminInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_ORDERS_AS_ADMIN_REQUEST: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                orders: action.payload\r\n            }\r\n        case GET_ALL_ORDERS_AS_ADMIN_FAIL: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\n//TODO: PUT isDelivered Status as Admin \r\nconst putIsDeliveredInitialState = {\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst putIsDeliveredStatus = (state = putIsDeliveredInitialState, action) => {\r\n    switch(action.type) {\r\n        case PUT_IS_DELIVERED_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PUT_IS_DELIVERED_AS_ADMIN_RESET:\r\n            return {\r\n                success: false,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { \r\n    ordersReducer,\r\n    loadedOrderFromDatabasesReducer,\r\n    orderPayReducer,\r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus\r\n};","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAIL,\r\n    GET_ALL_USERS_RESET,\r\n\r\n    DELETE_USER_AS_ADMIN_REQUEST,\r\n    DELETE_USER_AS_ADMIN_SUCCESS,\r\n    DELETE_USER_AS_ADMIN_FAIL,\r\n\r\n    GET_USER_AS_ADMIN_REQUEST,\r\n    GET_USER_AS_ADMIN_SUCCESS,\r\n    GET_USER_AS_ADMIN_FAIL,\r\n\r\n    UPDATE_USER_AS_ADMIN_REQUEST,\r\n    UPDATE_USER_AS_ADMIN_SUCCESS,\r\n    UPDATE_USER_AS_ADMIN_FAIL,\r\n\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL,\r\n    CREATE_SAMPLE_PRODUCT_RESET,\r\n\r\n    UPDATE_PRODUCT_AS_ADMIN_REQUEST,\r\n    UPDATE_PRODUCT_AS_ADMIN_SUCCESS,\r\n    UPDATE_PRODUCT_AS_ADMIN_FAIL,\r\n    UPDATE_PRODUCT_AS_ADMIN_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst users_List_Admin_Initial_State = {\r\n    usersList: [],\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const users_List_Admin_Reducer = (state = users_List_Admin_Initial_State, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                usersList: action.payload\r\n            }\r\n        case GET_ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_ALL_USERS_RESET:\r\n            const nullState = {};\r\n            return nullState;\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst deleted_User_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    messages: '',\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const deleted_user_admin_Reducer = (state = deleted_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case DELETE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                messages: action.payload\r\n            }\r\n        case DELETE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst user_Info_Admin_Reducer_InitialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const get_userInfo_admin_Reducer = (state = user_Info_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case GET_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst update_User_Admin_Reducer_InitialState = {\r\n    updatedUser: null,\r\n    success: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const update_userInfo_Admin_Reducer = (state = update_User_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_USER_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                updatedUser: action.payload\r\n            }\r\n        case UPDATE_USER_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst create_Product_Admin_Reducer_InitialState = {\r\n    createdProduct: null,\r\n    loading: false,\r\n    error: null,\r\n    success: false\r\n}\r\n\r\nexport const created_Product_Admin_Reducer = (state = create_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                createdProduct: action.payload,\r\n                success: true\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CREATE_SAMPLE_PRODUCT_RESET: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                success: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst updated_Product_Admin_Reducer_InitialState = {\r\n    loading: false,\r\n    success: false,\r\n    error: null \r\n}\r\n\r\nexport const update_Product_Admin_Reducer = (state = updated_Product_Admin_Reducer_InitialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_PRODUCT_AS_ADMIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errro: action.payload\r\n            }\r\n        case UPDATE_PRODUCT_AS_ADMIN_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TOP_LAPTOPS_REQUEST,\r\n    GET_TOP_LAPTOPS_SUCCESS,\r\n    GET_TOP_LAPTOPS_FAIL,\r\n\r\n    GET_ALL_LAPTOPS_REQUEST,\r\n    GET_ALL_LAPTOPS_SUCCESS,\r\n    GET_ALL_LAPTOPS_FAIL,\r\n\r\n    GET_A_LAPTOP_REQUEST,\r\n    GET_A_LAPTOP_SUCCESS,\r\n    GET_A_LAPTOP_FAIL,\r\n    GET_A_LAPTOP_RESET\r\n} from '../actions/actionTypes';\r\n\r\nconst topLaptopInitialState = {\r\n    topLaptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const topLaptopReducer = (state = topLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TOP_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_TOP_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topLaptops: action.payload\r\n            }\r\n        case GET_TOP_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allLaptopsInitialState = {\r\n    laptops: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const allLaptopsReducer = (state = allLaptopsInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_LAPTOPS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ALL_LAPTOPS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                laptops: action.payload\r\n            }\r\n        case GET_ALL_LAPTOPS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst singleLaptopInitialState = {\r\n    singleLaptop: null,\r\n    loading: false,\r\n    success: false,\r\n    error: null\r\n}\r\n\r\nexport const getALaptopReducer = (state = singleLaptopInitialState, action) => {\r\n    switch(action.type) {\r\n        case GET_A_LAPTOP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_A_LAPTOP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                singleLaptop: action.payload\r\n            }\r\n        case GET_A_LAPTOP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case GET_A_LAPTOP_RESET:\r\n            return {\r\n                singleLaptop: null,\r\n                loading: false,\r\n                success: false,\r\n                error: null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n//! REDUCERS\r\nimport { \r\n    productListReducer, \r\n    SingleProductReducer, \r\n    deleteProductAsAdmin,\r\n    carouselProductReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userReducer, \r\n    userDetailsReducer,\r\n    userReviewReducer \r\n} from './reducers/userReducers';\r\nimport { \r\n    ordersReducer, \r\n    loadedOrderFromDatabasesReducer, \r\n    orderPayReducer, \r\n    getOrdersBasedOnUserId,\r\n    getOrdersAsAdmin,\r\n    putIsDeliveredStatus \r\n} from './reducers/orderReducer.js';\r\nimport { \r\n    users_List_Admin_Reducer, \r\n    deleted_user_admin_Reducer, \r\n    get_userInfo_admin_Reducer, \r\n    update_userInfo_Admin_Reducer,\r\n    created_Product_Admin_Reducer,\r\n    update_Product_Admin_Reducer \r\n} from './reducers/adminReducers';\r\nimport {\r\n    topLaptopReducer,\r\n    allLaptopsReducer,\r\n    getALaptopReducer\r\n} from './reducers/laptopReducer';\r\n\r\nconst reducer = combineReducers({\r\n    productsList: productListReducer,\r\n    singleProduct: SingleProductReducer,\r\n    deleteProduct: deleteProductAsAdmin,\r\n    cart: cartReducer,\r\n    user: userReducer,\r\n    userDetails: userDetailsReducer,\r\n    orders: ordersReducer,\r\n    loadedOrder: loadedOrderFromDatabasesReducer,\r\n    updatedIsPaidOrder: orderPayReducer,\r\n    userOrders: getOrdersBasedOnUserId,\r\n    adminUsersList: users_List_Admin_Reducer,\r\n    deletedAdmin: deleted_user_admin_Reducer,\r\n    userInfoAdmin: get_userInfo_admin_Reducer,\r\n    updateUserInfo: update_userInfo_Admin_Reducer,\r\n    createdProduct: created_Product_Admin_Reducer,\r\n    updatedProduct: update_Product_Admin_Reducer,\r\n    adminOrders: getOrdersAsAdmin,\r\n    isDeliveredOrderAdmin: putIsDeliveredStatus,\r\n    userReview: userReviewReducer,\r\n    carouselProducts: carouselProductReducer,\r\n    topLaptops: topLaptopReducer,\r\n    allLaptops: allLaptopsReducer,\r\n    singleLaptop: getALaptopReducer\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\r\nconst paymentMethodFromLocalStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : '';\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromLocalStorage, \r\n        shippingAddress: shippingAddressFromLocalStorage, \r\n        paymentMethod: paymentMethodFromLocalStorage\r\n    }, \r\n    user: { user: userInfoFromLocalStorage }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}